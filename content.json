{"meta":{"title":"Seven‘s Lab","subtitle":"","description":"Seven‘s Lab","author":"Seven Chen","url":"http://www.humen1.com","root":"/"},"posts":[{"tags":[{"name":"posts","slug":"posts","permalink":"http://www.humen1.com/tags/posts/"},{"name":"osx","slug":"osx","permalink":"http://www.humen1.com/tags/osx/"}],"title":"清除Chrome App 在Os X 的Launchpad","date":"2017/12/25","text":"在自己的台式机上用chrome 创建了2个桌面快捷（实质是创建了chrome app），然后同步到我的Mac os 上来了 = =！ 手动删除方式见下文。 $ cd ~/Applications/Chrome\\ Apps.localized $ rm -rf *.app","permalink":"http://www.humen1.com/2017/12/e6-b8-85-e9-99-a4chrome-app-e5-9c-a8os-x-e7-9a-84launchpad.html","photos":[]},{"tags":[],"title":"Disable IPv6 on Ssh Client","date":"2017/12/10","text":"问题起于我要经ssh 连git.dn42.us, 比较特别的是我的机器（vps）上启用了IPv6 OpenSSH_7.2p2 Ubuntu-4ubuntu2.2, OpenSSL 1.0.2g 1 Mar 2016 debug1: Reading configuration data /home/seven/.ssh/config debug1: /home/seven/.ssh/config line 1: Applying options for * debug1: Reading configuration data /etc/ssh/ssh_config debug1: /etc/ssh/ssh_config line 19: Applying options for * debug1: Connecting to git.dn42.us [2607:5300:60:3d95::1] port 22. 以上是ssh的输出。 可以看到是通过IPv6连接的，死活不通。 于是禁用IPv6 ~/.ssh/configHost * AddressFamily inetIt works fine.","permalink":"http://www.humen1.com/2017/12/disable-ipv6-on-ssh-client.html","photos":[]},{"tags":[{"name":"posts","slug":"posts","permalink":"http://www.humen1.com/tags/posts/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Ubuntu Install Install Security Updates","date":"2017/12/09","text":"$ unattended-upgrades To enable it type $ dpkg-reconfigure unattended-upgrades","permalink":"http://www.humen1.com/2017/12/ubuntu-install-install-security-updates.html","photos":[]},{"tags":[],"title":"开源软件许可协议 - GPL","date":"2017/10/26","text":"GNU通用公共许可协议（英语：GNU General Public License，简称 GNU GPL、GPL）是广泛使用的免费软件许可证，可以保证终端用户得自由运行，学习，共享和修改软件。许可证最初由GNU项目的自由软件基金会 （FSF）的理查德·斯托曼（Richard Matthew Stallman）撰写，并授予计算机程序的收件人自由软件定义的权利。 GPL是一个Copyleft许可证，这意味着派生作品只能以相同的许可条款分发。 这与许可免费软件许可证有所区别 ，其中BSD许可证和MIT许可证是广泛使用的示例。 GPL是第一个普遍使用的Copyleft许可证。 历史上，GPL许可证系列一直是免费和开源软件领域最受欢迎的软件许可之一。根据GPL许可的优异自由软件程序的例子有Linux内核和GNU编译器集合 （GCC）。 David A. Wheeler认为，GPL提供的Copyleft对于基于Linux的系统的成功至关重要，给予向内核贡献的程序员保证他们的工作将有益于整个世界并保持自由，而不至于被不提供回馈给社区的不肖软件公司所剥削。 2007年，发布了第三版许可证（GNU GPLv3），以解决在长期使用期间发现的第二版（GNU GPLv2）所发生的一些困扰。 为了使许可证保持最新状态，GPL许可证包含一个可选的“并延伸到未来版本”条款，允许用户在FSF更新的原始条款或新版本之间进行选择。 有些开发人员在软件授权使用时，选择省略它; 例如，Linux内核已经在GPLv2下获得许可，就不需包括“并延伸到未来版本”的声明。 GPL授予程序接受人以下权利，或称“自由”，或称“copyleft”： * 以任何目的运行此程序的自由； * 再复制的自由； * 改进此程序，并公开发布改进的自由（前提是能得到源代码）。 相反地，随版权所有软件的最终用户许可证几乎从不授予用户任何权利（除了使用的权利），甚至可能限制一些法律允许的行为，比如逆向工程。 GPL与其他一些更“许可的”自由软件许可证（比如BSD许可证）相比，主要区别就在于GPL寻求确保上述自由能在复制软件及派生作品中得到保障。它通过一种由斯托曼发明的叫Copyleft的法律机制实现，即要求GPL程序的派生作品也要在GPL之下。相反，BSD式的许可证并不禁止演绎作品变成专有软件。 GPL是自由软件和开源软件的最流行许可证。到2004年4月，GPL已占Freshmeat上所列的自由软件的约75%，SourceForge的约68%。类似的，2001年一项关于Red Hat Linux 7.1的调查显示一般的代码都以GPL发布。著名的GPL自由软件包括EMACS，Linux核心（并非所有Linux发行版的核心都是开源的）和GCC。","permalink":"http://www.humen1.com/2017/10/e5-bc-80-e6-ba-90-e8-bd-af-e4-bb-b6-e8-ae-b8-e5-8f-af-e5-8d-8f-e8-ae-ae-e4-bb-8b-e7-bb-8d-gpl.html","photos":[]},{"tags":[{"name":"android","slug":"android","permalink":"http://www.humen1.com/tags/android/"}],"title":"Mac OS 传文件到 Android","date":"2017/07/20","text":"默认情况下android手机通过USB连接Mac是没办法加载手机里的文件的。 android官方提供了一个App可以解决这个问题。 https://www.android.com/filetransfer/","permalink":"http://www.humen1.com/2017/07/mac-os-e4-bc-a0-e6-96-87-e4-bb-b6-e5-88-b0-android.html","photos":[]},{"tags":[{"name":"dns","slug":"dns","permalink":"http://www.humen1.com/tags/dns/"}],"title":"在Windows 环境中使用 Dig 工具","date":"2017/06/02","text":"Dig 在Linux 里一般是在 bind-utils这个包里的。 作者Windows 环境用的模拟终端为 Babun https://github.com/babun/babun 是基于Cygwin的。可惜，没有提供dig的二进制包。可惜。 好，其实解决方法很简单，去网上直接下个dig.exe放到Windows path里就好了=） 重点 ### 此方法适用于所有Windows 命令行A）下载： 下载地址 [ftp://ftp.nominum.com/pub/isc/bind9/] 拉到最下面找最新版本的 下这个 A1) 准备： 解压后在目录里找到C++安装文件，双击安装 )) B) 安装DLL文件 把目录里lib*.dll拷贝到 C:\\WINDOWS\\System32\\ 目录下 B1)安装dig.exe 把目录里的dig.exe 也拷贝到 C:\\WINDOWS\\System32\\ 目录下 C)完成！ 测试！ babun powershell","permalink":"http://www.humen1.com/2017/06/e5-9c-a8windows-e7-8e-af-e5-a2-83-e4-b8-ad-e4-bd-bf-e7-94-a8-dig-e5-b7-a5-e5-85-b7.html","photos":[]},{"tags":[{"name":"zabbix","slug":"zabbix","permalink":"http://www.humen1.com/tags/zabbix/"}],"title":"Zabbix Linux Network Interface Traffic Monitor Template","date":"2017/05/22","text":"min zabbix version 3.0 ) zbx_export_templates.xml","permalink":"http://www.humen1.com/2017/05/zabbix-linux-network-interface-traffic-monitor-template.html","photos":[]},{"tags":[],"title":"明·杨仪《明良记》","date":"2017/05/01","text":"唐解元寅既废弃，诗云： ‘一失足成千古恨，再回头是百年人。’ 比喻一旦犯下严重错误或堕落，就成为终身的憾事。","permalink":"http://www.humen1.com/2017/05/e6-98-8e-c2-b7-e6-9d-a8-e4-bb-aa-e3-80-8a-e6-98-8e-e8-89-af-e8-ae-b0-e3-80-8b.html","photos":[]},{"tags":[{"name":"vpn","slug":"vpn","permalink":"http://www.humen1.com/tags/vpn/"}],"title":"非主流VPN方案","date":"2017/04/25","text":"常见的VPN（OpenVPN、SSTP、IKEv2、CiscoIPsec、PPTP、GAE、L2TP）已经受到GFW干扰。 如果还要坚持用VPN的方式来翻墙，请使用以下VPN方案 Tinc VPN：http://www.[tinc-vpn.org/](http://tinc-vpn.org/) SigmaVPN：http://code.[google.com/p/sigmavpn/](http://google.com/p/sigmavpn/) SSHVpn：http://sshvpn.[sourceforge.net/](http://sourceforge.net/) SocialVPN：http://code.[google.com/p/socialvpn/](http://google.com/p/socialvpn/) BadVpn：http://code.[google.com/p/badvpn/](http://google.com/p/badvpn/) N2n：http://www.[ntop.org/products/n2n/](http://ntop.org/products/n2n/) Embedded VPN：http://embeddedvpn.com/ TeamViewer：http://www.[teamviewer.com/zhcn/download/windows.aspx](http://teamviewer.com/zhcn/download/windows.aspx) cjdns：http://cjdns.info/ FairVPN：http://minerva.[netgroup.uniroma2.it/fairvpn](http://netgroup.uniroma2.it/fairvpn) GVPE：http://software.[schmorp.de/pkg/gvpe.html](http://schmorp.de/pkg/gvpe.html) QuickTun：http://wiki.[qontrol.nl/QuickTun](http://qontrol.nl/QuickTun) VTun：http://vtun.[sourceforge.net/](http://sourceforge.net/) sshuttle：https://github.com/apenwarr/sshuttle LogMeIn Hamachi：https://secure.[logmein.com/products/hamachi/](http://logmein.com/products/hamachi/) PacketiX VPN：http://igfw.net/archives/8315 udpip：http://igfw.net/archives/7756","permalink":"http://www.humen1.com/2017/04/e9-9d-9e-e4-b8-bb-e6-b5-81vpn-e6-96-b9-e6-a1-88.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"TCP","slug":"TCP","permalink":"http://www.humen1.com/tags/TCP/"}],"title":"小谢同学写的Linux 服务器调优脚本","date":"2017/02/23","text":"modify_sysctl.py[code lang=python] # -- coding: utf-8 -- ‘’’ Created on 2015-1-21 @author: xie ‘’’ ‘’’ net.ipv4.tcp_rmem = 4096 87380 16777216 net.ipv4.tcp_wmem = 4096 65536 16777216 net.core.wmem_default = 8388608 net.core.rmem_default = 8388608 net.core.rmem_max = 16777216 net.core.wmem_max = 16777216 net.core.netdev_max_backlog = 30000 net.core.somaxconn = 65535 net.ipv4.tcp_max_syn_backlog = 262144 net.ipv4.tcp_max_tw_buckets = 6000 net.ipv4.tcp_tw_recycle = 1 net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_fin_timeout = 30 net.ipv4.ip_local_port_range = 9000 65535 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_max_orphans = 262144 net.ipv4.tcp_synack_retries = 2 net.ipv4.tcp_syn_retries = 2 ‘’’ import re,commands SYSCTL_CONFIG = ‘/etc/sysctl.conf’ class SetSysctl(): def __init__(self): self._sysctls = [] self._sysctls.append(‘net.ipv4.tcp_rmem = 4096 87380 16777216’) self._sysctls.append(‘net.ipv4.tcp_wmem = 4096 65536 16777216’) self._sysctls.append(‘net.core.wmem_default = 8388608’) self._sysctls.append(‘net.core.rmem_default = 8388608’) self._sysctls.append(‘net.core.rmem_max = 16777216’) self._sysctls.append(‘net.core.wmem_max = 16777216’) self._sysctls.append(‘net.core.netdev_max_backlog = 30000’) self._sysctls.append(‘net.core.somaxconn = 65535’) self._sysctls.append(‘net.ipv4.tcp_max_syn_backlog = 262144’) self._sysctls.append(‘net.ipv4.tcp_max_tw_buckets = 6000’) self._sysctls.append(‘net.ipv4.tcp_tw_recycle = 1’) self._sysctls.append(‘net.ipv4.tcp_tw_reuse = 1’) self._sysctls.append(‘net.ipv4.tcp_fin_timeout = 30’) self._sysctls.append(‘net.ipv4.ip_local_port_range = 9000 65535’) self._sysctls.append(‘net.ipv4.tcp_syncookies = 1’) self._sysctls.append(‘net.ipv4.tcp_max_orphans = 262144’) self._sysctls.append(‘net.ipv4.tcp_synack_retries = 2’) self._sysctls.append(‘net.ipv4.tcp_syn_retries = 2’) self._sysctls.append(‘’) self._sysctls.append(‘kernel.core_pattern = /home/core/core.%p’) self._create_core() self._read_sysctl() self._write_sysctl() def _read_sysctl(self): network = open(SYSCTL_CONFIG, ‘r’) self._lines = [] for line in network: flag = False for sysctl in self._sysctls: regex_str = sysctl.split(‘=’)[0] ma = re.match(r’^’+regex_str+’.*?’, line, re.IGNORECASE) if ma: flag = True break; if not flag: self._lines.append(line) network.close() def _write_sysctl(self): sysctls = open(SYSCTL_CONFIG, ‘w’) self._lines.extend(self._sysctls) sysctls.write(‘\\n’.join(self._lines)) sysctls.close() commands.getoutput(‘sysctl -p’) def _create_core(self): commands.getoutput(‘mkdir /home/core’) commands.getoutput(‘chown -R mc-ops:mc-ops /home/core’) if __name__ == ‘__main__‘: SetSysctl() [/code] modify_ulimit.py[code lang=python] # -- coding: utf-8 -- #!/usr/bin/env python2.7 ‘’’ Created on 2013-5-6 @author: xie ‘’’ import commands, re,os LIMIT_CONF = ‘/etc/security/limits.conf’ SOFT_NOFILE = ‘* soft nofile 1048576\\n’ HAND_NOFILE = ‘* hard nofile 1048576\\n’ SOFT_NPROC = ‘* soft nproc 1048576\\n’ HAND_NPROC = ‘* hard nproc 1048576\\n’ PROFILE_CONF = ‘/etc/profile’ ULIMIT_NOFILE = ‘ulimit -HSn 1048576\\n’ NPROC_LIMIT_CONF = ‘/etc/security/limits.d/90-nproc.conf’ def modify_ulimit(): lines = [] ulimit = open(LIMIT_CONF, ‘r’) for line in ulimit: ma = re.match(r’.?soft *?’, line, re.IGNORECASE) mx = re.match(r’.?hard ?’, line, re.IGNORECASE) if ma or mx: continue lines.append(line) ulimit.close() lines.append(SOFT_NOFILE) lines.append(HAND_NOFILE) lines.append(SOFT_NPROC) lines.append(HAND_NPROC) ulimit = open(LIMIT_CONF, ‘w’) ulimit.write(‘’.join(lines)) ulimit.close() commands.getoutput(‘ulimit -HSn 1048576’) if not isCentos7(): modify_nproc_ulimit() writeProfile() def modify_nproc_ulimit(): lines = [] if os.path.exists(NPROC_LIMIT_CONF): ulimit = open(NPROC_LIMIT_CONF, ‘r’) for line in ulimit: ma = re.match(r’.?soft ?’, line, re.IGNORECASE) if ma: continue lines.append(line) ulimit.close() lines.append(‘ soft nproc 1048576\\n’) lines.append(‘root soft nproc unlimited\\n’) ulimit = open(NPROC_LIMIT_CONF, ‘w’) ulimit.write(‘’.join(lines)) ulimit.close() def writeProfile(): lines = [] flag = False profile = open(PROFILE_CONF, ‘r’) for line in profile: ma = re.match(r’.?ulimit -HSn 1048576.‘, line, re.IGNORECASE) if ma is not None: flag = True lines.append(line) profile.close() if flag == False: lines.append(ULIMIT_NOFILE) profile = open(PROFILE_CONF, ‘w’) profile.write(‘’.join(lines)) profile.close() def isCentos7(): mage = commands.getoutput(‘cat /etc/redhat-release’).split(‘\\n’) #CentOS Linux release 7.1.1503 (Core) #CentOS release 6.6 (Final) cP = re.compile(r’.\\s+(?P\\d+).‘, re.IGNORECASE) for mess in mage: ma = cP.match(mess) if ma is not None: ip = ma.group(‘release’) if ip == ‘7’: return True return False pass if __name__ == ‘__main__‘: modify_ulimit() [/code]","permalink":"http://www.humen1.com/2017/02/e5-b0-8f-e8-b0-a2-e5-90-8c-e5-ad-a6-e5-86-99-e7-9a-84linux-e6-9c-8d-e5-8a-a1-e5-99-a8-e8-b0-83-e4-bc-98-e8-84-9a-e6-9c-ac.html","photos":[]},{"tags":[],"title":"我们熟知的那些英文，你念对了么？[FW]","date":"2016/11/27","text":"()标相应英文单词 []标音标 =====公司/产品名===== Youtube (You-tube [tju:b]) 念 优tiu啵 不念 优吐毙 Skype [ˈskaɪp] 念 死盖破 不念 死盖屁 Adobe [əˈdəʊbi] 念 阿兜笔 不念 阿斗伯 Chrome [krəʊm] 念 克肉姆 C# (C Sharp) 念 C煞破 GNU [(g)nuː] 念 哥怒 GUI [ˈɡui] 念 故意 JAVA [ˈdʒɑːvə] 念 扎蛙 不念 夹蛙 AJAX [ˈeɪdʒæks] 念 诶(ei)贾克斯 不念 阿贾克斯 Ubuntu [uˈbuntuː] 念 巫不恩兔 不念 友邦兔 Debian [ˈdɛbiən] 念 得(dei)变 Linux [ˈlɪnəks] [ˈlɪnʊks] 两种发音 丽娜克**斯** 和 李扭克斯 都可以 LaTeX [ˈleɪtɛk] [ˈleɪtɛx] [ˈlɑːtɛx] [ˈlɑːtɛk] 雷泰克，拉泰克 都可以 （根据Knuth的建议，雷泰克斯和拉泰克斯不正确。而且LaTeX的重音是放在雷或拉上。感谢@Rio讨论。另外感谢发音大牛@梁海刚刚指出， [ˈlɑːtɛx] 注音符号里的x发的不是克斯的音，而是接近“巴赫”的那个赫。） GNOME [ɡˈnoʊm] [noʊm] 两种发音 格弄姆 弄姆 都可以 App [ˈæp] 念阿破（与爱破也比较像，参见音标），不能把三个字母拆开念成A P P。 =====一般英语===== null [nʌl] 念 闹 jpg [ˈdʒeɪpɛɡ] 念 zhei派个 不念 勾屁记 WiFi [ˈwaɪfaɪ] 念 歪fai mobile [moˈbil] [ˈmoˌbil] [ˈməubail] 膜拜哦 和 牟bou 都可以 integer [ˈɪntɪdʒə] 念 音剃摺儿 不念 阴太阁儿 cache [kæʃ] 念 喀什 不念 卡尺 @ 念 at =====感谢@Lawrence Li同学的补遗===== Tumblr (Tumbler) 念 贪不勒 nginx (Engine X)念 恩静 爱克斯（@Lawrence Li有不同意见） Apache [əˈpætʃiː] 念 阿趴气 Lucene [ˈluːsin] 念 鲁信 MySQL [maɪ ˌɛskjuːˈɛl] [maɪ ˈsiːkwəl] 念 买S奎儿 或 买吸扣 都可以 Exposé [ɛksˈpəʊzeɪ] 念 埃克斯剖Z （重音在Z上） RFID 【本条争议颇大】：有人念af rid, ri fid，但是RFID官方念法依然是四个字母分开读R F I D JSON (jason) 念 zhei森 Processing [ˈprəʊsesɪŋ] 重音在Pro上 avatar [ˌævə’tɑr] 念 艾瓦塌儿 作者：Filestorm 链接：https://www.zhihu.com/question/19739907/answer/12960562 来源：知乎 著作权归作者所有，转载请联系作者获得授权。","permalink":"http://www.humen1.com/2016/11/e6-88-91-e4-bb-ac-e7-86-9f-e7-9f-a5-e7-9a-84-e9-82-a3-e4-ba-9b-e8-8b-b1-e6-96-87-ef-bc-8c-e4-bd-a0-e5-bf-b5-e5-af-b9-e4-ba-86-e4-b9-88-ef-bc-9ffw.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"es6","slug":"es6","permalink":"http://www.humen1.com/tags/es6/"},{"name":"h5","slug":"h5","permalink":"http://www.humen1.com/tags/h5/"}],"title":"Using ES6 With Gulp — Mark Goodyear — Front-End Developer and Designer","date":"2016/11/22","text":"Jun 24, 2015 With gulp 3.9, we are now able to use ES6 (or ES2015 as it’s now named) in our gulpfile—thanks to the awesome Babel transpiler. Firstly make sure you have at least version 3.9 of both the CLI and local version of gulp. To check which version you have, open up terminal and type: gulp -vThis should return: CLI version 3.9.0 Local version 3.9.0If you get any versions lower than 3.9, update gulp in your package.json file, and run the following to update both versions: npm install gulp &amp;&amp; npm install gulp -gCreating an ES6 gulpfileTo leverage ES6 you will need to install Babel (make sure you have Babel 6) as a dependency to your project, along with the es2015 plugin preset: npm install babel-core babel-preset-es2015 --save-devOnce this has finished, we need to create a .babelrc config file to enable the es2015 preset: touch .babelrcAnd add the following to the file: { &quot;presets&quot;: [&quot;es2015&quot;] }We then need to instruct gulp to use Babel. To do this, we need to rename the gulpfile.js to gulpfile.babel.js: mv &quot;gulpfile.js&quot; &quot;gulpfile.babel.js&quot;We can now use ES6 via Babel! An example of a typical gulp task using new ES6 features: &apos;use strict&apos;; import gulp from &apos;gulp&apos;; import sass from &apos;gulp-sass&apos;; import autoprefixer from &apos;gulp-autoprefixer&apos;; import sourcemaps from &apos;gulp-sourcemaps&apos;; const dirs = { src: &apos;src&apos;, dest: &apos;build&apos; }; const sassPaths = { src: `${dirs.src}/app.scss`, dest: `${dirs.dest}/styles/` }; gulp.task(&apos;styles&apos;, () =&gt; { return gulp.src(paths.src) .pipe(sourcemaps.init()) .pipe(sass.sync().on(&apos;error&apos;, plugins.sass.logError)) .pipe(autoprefixer()) .pipe(sourcemaps.write(&apos;.&apos;)) .pipe(gulp.dest(paths.dest)); });Here we have utilised ES6 import/modules, arrow functions, template strings and constants. If you’d like to check out more ES6 features, es6-features.org is a handy resource.","permalink":"http://www.humen1.com/2016/11/using-es6-with-gulp-mark-goodyear-front-end-developer-and-designer.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Manpath: Can't Set the Locale; Make Sure $LC_* and $LANG Are Correct","date":"2016/11/13","text":"Add LANG=en_US.UTF-8 and LC_ALL=en_US.UTF-8 to /etc/environment","permalink":"http://www.humen1.com/2016/11/manpath-cant-set-the-locale-make-sure-lc-and-lang-are-correct.html","photos":[]},{"tags":[{"name":"proxy","slug":"proxy","permalink":"http://www.humen1.com/tags/proxy/"}],"title":"How to Configure Client Proxy Server Settings by Using a Registry File","date":"2016/11/10","text":"SUMMARY This article describes how to create a Windows registry file to configure the proxy server settings on a client computer that is running Microsoft Internet Explorer or Windows Internet Explorer. MORE INFORMATIONYou can automatically configure the proxy server settings on a client computer by updating the client computer registry. To do this, create a registry file that contains the registry settings you want to update, and then distribute it to the client computer by using a batch file or logon script. Important This section, method, or task contains steps that tell you how to modify the registry. However, serious problems might occur if you modify the registry incorrectly. Therefore, make sure that you follow these steps carefully. For added protection, back up the registry before you modify it. Then, you can restore the registry if a problem occurs. For more information about how to back up and restore the registry, click the following article number to view the article in the Microsoft Knowledge Base: 322756 How to back up and restore the registry in Windows To configure the proxy server settings on a client computer, create the following .reg file to populate the registry with the proxy server information: Regedit4 [HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings] &quot;MigrateProxy&quot;=dword:00000001 &quot;ProxyEnable&quot;=dword:00000001 &quot;ProxyHttp1.1&quot;=dword:00000000 &quot;ProxyServer&quot;=&quot;http://ProxyServername:80&quot; &quot;ProxyOverride&quot;=&quot;&lt;local&gt;&quot;In this file, ProxyServername is the name of your proxy server. You can also use the Internet Explorer Administration Kit (IEAK) to configure proxy server settings on client computers. For additional information about IEAK, visit the following Microsoft Web site: http://technet.microsoft.com/en-us/ie/bb219520.aspx PropertiesArticle ID: 819961 - Last Review: 09/11/2011 07:27:00 - Revision: 2.0 &lt;span&gt;Applies to&lt;/span&gt; &lt;p&gt; Windows 7 Enterprise, Windows 7 Enterprise N, Windows 7 Home Basic, Windows 7 Home Premium, Windows 7 Home Premium N, Windows 7 Professional, Windows 7 Professional N, Windows 7 Starter, Windows 7 Starter N, Windows 7 Ultimate, Windows 7 Ultimate N, Windows Internet Explorer 8, Microsoft Internet Explorer 6.0, Windows Internet Explorer 7 for Windows XP, Windows Internet Explorer 7 for Windows Server 2003 &lt;span&gt;Keywords: &lt;/span&gt; &lt;ul&gt;&lt;li&gt; kbisa2004yes kbinfo KB819961 &lt;/li&gt;&lt;/ul&gt; &lt;h5&gt;Feedback&lt;/h5&gt; &lt;span&gt;Was this information helpful?&lt;/span&gt; &lt;/p&gt;","permalink":"http://www.humen1.com/2016/11/how-to-configure-client-proxy-server-settings-by-using-a-registry-file.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"}],"title":"Node.js Application as a Windows Service (With Registry Fix) - Measuring Programming Progress by Lines of Code Is Like Measuring Aircraft Building Progress by Weight.","date":"2016/11/08","text":"npm install In my case, command nssm install MyWebService… was unsuccessful, the problem was that app.js can’t find config.json file. First you will need: Node.js application (project) which you want to run as a Windows Service Node.js NSSM 1 step: Set your Node.js application as Windows ServiceDownload nssm.exe and put file into you node.js project folder Put nssm.exe file into you node.js project folder Run Windows Command Processor (cmd.exe) as administrator and go to your node.js project folder Your node.js project folder Run command npm install npm install Run command node src\\app.js and allow access through Windows firewall Allow access through Windows firewall Run these two commands nssm.exe install MyWebService “C:\\Program Files\\nodejs\\node.exe” “C:\\Service\\src\\app.js” net start MyWebService net start MyWebService Now we need to fix this error. 2 step: Edit registryOpen registry editor (regedit.exe) and go to HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\MyWebService\\Parameters HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\MyWebService\\Parameters Now we need to change AppDirectory from C:\\Program Files\\nodejs to C:\\Service Change AppDirectory from C:\\Program Files\\nodejs to C:\\Service Restart computer and don’t forget to run Apache, MySQL or any other necessary servers for your project after restart. Node.js Application as a Windows Service","permalink":"http://www.humen1.com/2016/11/node-js-application-as-a-windows-service-with-registry-fix-measuring-programming-progress-by-lines-of-code-is-like-measuring-aircraft-building-progress-by-weight.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"vps","slug":"vps","permalink":"http://www.humen1.com/tags/vps/"},{"name":"aliyun","slug":"aliyun","permalink":"http://www.humen1.com/tags/aliyun/"},{"name":"ecs","slug":"ecs","permalink":"http://www.humen1.com/tags/ecs/"}],"title":"【“脏牛（Dirty Cow）”漏洞】CVE-2016-5195:Linux 内核本地提权漏洞 通告及修复","date":"2016/11/08","text":"漏洞编号：CVE-2016-5195漏洞名称：脏牛（Dirty COW）风险等级：高危漏洞危害：黑客可以通过远程入侵获取低权限用户后，在服务器本次利用该漏洞在全版本Linux系统上实现本地提权，从而获取到服务器root权限。 漏洞利用条件：黑客可以通过远程入侵获取低权限用户后,才能进一步在操作系统本地利用该漏洞。 漏洞影响范围 Linux Kernel &gt;= 2.6.22 的所有 Linux 系统 意味着从 2007 年发布 2.6.22 版本开始，直到2016年10月18日为止，这中间发行的所有 Linux 系统都受影响。 我们建议您使用以下方式自查是否存在此漏洞： 使用安骑士“安全基线检查 - 高危漏洞应急检查 ”功能自动检查，修复漏洞后，可以自动验证修复是否成功： 漏洞修复验证： 使用uname –a查看 Linux 系统的内核版本，如： Linux AYxxxx 2.6.32-431.23.3.el6.x86_64 #1 SMP Thu Jul 31 17:20:51 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux 上述内核版本2.6.32-431.23.3.el6.x86_64受漏洞影响。 Linux AYxxxx 2.6.18-308.el5 #1 SMP Tue Feb 21 20:06:06 EST 2012 x86_64 x86_64 x86_64 GNU/Linux 上述内核版本2.6.18-308.el5不受漏洞影响。 阿里云安全团队在第一时间针对 ECS 提供的 Linux 操作系统镜像进行测试，详细的受影响范围如下表： 漏洞修复方案 因为涉及到操作系统内核的升级，我们强烈建议您：正确关闭正在运行的服务，并做好业务数据备份工作。同时创建服务器磁盘快照，避免修复失败造成不可逆的影响。 1.CentOS 5/6/7 系列操作系统阿里云已经更新了CentOS 5/6/7Aliyun mirror源，可以直接在默认配置下，您可以更新软件列表，随后一键升级内核： 1).检查是否有内核升级包：yum check-update |grep kernel 2).升级内核：yum update kernel 3).确认下新版本的内核或 initrd/initramfs 是否有xen-vbd和virtio_blk驱动：lsinitrd /boot/initramfs-2.6.32-642.6.2.el6.x86_64.img |grep -i -E &#39;xen-blkfront|virtio_blk 查看补丁样例： #lsinitrd /boot/initramfs-2.6.32-642.6.2.el6.x86_64.img |grep -i -E &#39;xen-blkfront|virtio_blk&#39;（具体是版本而定，可以到cd /boot/ 目录下面查看对应的initrd文件（Centos5.1）或initramfs文件（centos6/7）） # lsinitrd /boot/initramfs-2.6.32-642.6.2.el6.x86_64.img |grep -i -E &apos;xen-blkfront|virtio_blk&apos; 4).如果有，则可以重启 5).如果没有，则需要给initrd/initramfs安装驱动,然后执行第三步后重启： centos 5: #mkinitrd -f --allow-missing \\（具体是版本而定，可以到cd /boot/ 目录下面查看，替换$target_initrd $vmlinuz） centos 6、7 : #mkinitrd -f --allow-missing \\安装驱动样例（本样例以Centos6.8 64bit为准）： #mkinitrd -f --allow-missing --with=xen-blkfront --preload=xen-blkfront --with=virtio_blk --preload=virtio_blk --with=virtio_pci --preload=virtio_pci --with=virtio_console --preload=virtio_console initramfs-2.6.32-642.6.2.el6.x86_64.img 2.6.32-642.6.2.el6.x86_64具体是版本而定，可以到cd /boot/ 目录下面查看，替换$target_initrd $vmlinuz 6).执行第三步后，查看是否有驱动，然后重启系统 # lsinitrd /boot/initramfs-2.6.32-642.6.2.el6.x86_64.img |grep -i -E &apos;xen-blkfront|virtio_blk&apos;7).查看升级后的内核版本：uname -a或者rpm -q --changelog kernel | grep &#39;CVE-2016-5195&#39;，也可以使用云盾安骑士验证 注：更新完毕后可能会安装两个内核，但不影响系统运行。 # uname -a或者 #rpm -q --changelog kernel | grep &apos;CVE-2016-5195&apos;Ubuntu 系列操作系统阿里云已经更新了Ubuntu mirror源，可以直接在默认配置下，您可以更新软件列表，随后一键升级内核： 1).查看是否有更新包：dpkg -l | grep linux 2).更新包列表：apt-get updateor apt update 3).升级内核： Ubuntu12.04版本：apt-get install linux-genericUbuntu14.04版本：apt-get upgrade或apt upgrade 4).然后重启系统 5).查看升级后的内核版本：uname -a或者zcat /usr/share/doc/linux-image-3.13.0-101-generic/changelog.Debian.gz | grep -i &#39;CVE-2016-5195&#39;，也可以使用云盾安骑士验证 注：更新完毕后可能会安装两个内核，但不影响系统运行。 # uname -a或者 # zcat /usr/share/doc/linux-image-3.13.0-101-generic/changelog.Debian.gz | grep -i &apos;CVE-2016-5195&apos;3.Debian 系列操作系统阿里云已经更新了Ubuntu mirror源，可以直接在默认配置下，您可以更新软件列表，随后一键升级内核： 1).查看是否有更新包：dpkg -l | grep linux 2).更新包列表：apt-get update 3).升级内核：apt-get upgrade 4).然后重启系统 5).查看升级后的内核版本：uname -a或者zcat /usr/share/doc/linux-image-3.16.0-4-amd64/changelog.Debian.gz | grep -i &#39;CVE-2016-5195&#39;，也可以使用云盾安骑士验证 注：更新完毕后可能会安装两个内核，但不影响系统运行。 # uname -a或者 # zcat /usr/share/doc/linux-image-3.16.0-4-amd64/changelog.Debian.gz |grep -i &apos;CVE-2016-5195&apos;4.SUSE Linux Enterprise Server 系列操作系统（仅限购买SLES企业服务用户）1).使用http://mirrors.aliyuncs.com/SLES/SLES12-SP1-Updates/sle-12-x86_64/ 源进行更新，您可以编辑vim /etc/zypp/repos.d/SLES12-SP1-Updates.repo关闭其他更新源，即：修改http://mirrors.aliyun.com/SLES/SLES12-SP1-Updates/sle-12-x86_64/ enabled=0，然后更新列表：zypper refresh 2).安装最新内核：zypper install kernel-default xen-kmp-default 3).确认下新版本的内核或 initrd / initramfs 是否有xen-vbd和virtio_blk驱动：lsinitrd /boot/initrd-3.12.62-60.64.8-default | grep -i -E &#39;xen-vbd|virtio_blk&#39; 查看补丁样例： lsinitrd /boot/initrd-3.12.62-60.64.8-default | grep -i -E &#39;xen-vbd|virtio_blk&#39; Arguments:--logfile --force --force-drivers &apos;xen-vbd xen-vnif xen-platform-pci.ko virtio virtio_console virtio_net virtio_blk virtio_pci&apos; 4).如果有，可以重启 5).如果没有，则需要给 initrd / initramfs 安装驱动,然后执行第三步后重启：mkinitrd -k /boot/vmlinuz-3.12.62-60.64.8-default -i /boot/initrd-3.12.62-60.64.8-default（具体版本根据实际安装为准） 6).查看升级后的内核版本：uname -a或者rpm -q --changelog kernel | grep &#39;CVE-2016-5195&#39;，也可以使用云盾安骑士验证 注：更新完毕后可能会安装两个内核，但不影响系统运行。 # uname -a或者 # rpm -q --changelog kernel-default | grep &apos;CVE-2016-5195&apos;5.Open SUSE 系列操作系统1).更新列表：zypper refresh 2).安装最新内核：zypper install kernel-default xen-kmp-default 3).确认下新版本的内核或 initrd / initramfs 是否有xen-vbd和virtio_blk驱动lsinitrd /boot/initrd-3.12.62-55-default | grep -i -E &#39;xen-vbd|virtio_blk&#39; 样例： # lsinitrd /boot/initrd-3.12.62-55-default | grep -i -E &#39;xen-vbd|virtio_blk&#39; lib/modules/3.12.62-55-default/kernel/drivers/block/virtio_blk.ko lib/modules/3.12.62-55-default/updates/blkfront/xen-vbd.ko 4).如果有，可以重启 5).如果没有，则需要给 initrd / initramfs 安装驱动,然后执行第三步后重启：# mkinitrd -k /boot/vmlinuz-3.12.62-55-default -i /boot/initrd-3.12.62-55-default（具体版本根据实际安装为准） 6).查看升级后的内核版本：uname -a或者rpm -q --changelog kernel | grep &#39;CVE-2016-5195&#39;，也可以使用云盾安骑士验证 注：更新完毕后可能会安装两个内核，但不影响系统运行。 # uname -a或者 # rpm -q --changelog kernel-default | grep &apos;CVE-2016-5195&apos;6.CoreOS 系列操作系统安装所有可用更新，包括新内核： update_engine_client -update7.重要提示 1）. 对于阿里云官方发布的其余系列的操作系统，Linux 官方正在研发漏洞对应的系统补丁，待补丁发布后，将系统更新到最新版本即可修复漏洞。 2）. 对于自定义镜像用户可以关注操作系统原厂商更新状态，自己根据自身业务判断升级内核，修复该漏洞。 参考资料 最后更新时间：2016.11.03 13:01","permalink":"http://www.humen1.com/2016/11/e3-80-90-e8-84-8f-e7-89-9b-ef-bc-88dirty-cow-ef-bc-89-e6-bc-8f-e6-b4-9e-e3-80-91cve-2016-5195linux-e5-86-85-e6-a0-b8-e6-9c-ac-e5-9c-b0-e6-8f-90-e6-9d-83-e6-bc-8f-e6-b4-9e.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"来，给你一个简单的方法来看进程占用内存的排行","date":"2016/10/08","text":"ps -e -o comm,rsz –sort=-rsz","permalink":"http://www.humen1.com/2016/10/e6-9d-a5-ef-bc-8c-e7-bb-99-e4-bd-a0-e4-b8-80-e4-b8-aa-e7-ae-80-e5-8d-95-e7-9a-84-e6-96-b9-e6-b3-95-e6-9d-a5-e7-9c-8b-e8-bf-9b-e7-a8-8b-e5-8d-a0-e7-94-a8-e5-86-85-e5-ad-98-e7-9a-84-e6-8e-92-e8-a1-8c.html","photos":[]},{"tags":[],"title":"Openwrt  Ssh-Key 登陆","date":"2016/10/05","text":"linux上公钥的位置在 ~/.ssh/authorized_keys 但是openwrt毕竟不是linux，auth keys 位置放在 /etc/dropbear 目录下 so， 执行以下命令即可 ln -s ~/.ssh/authorized_keys /etc/dropbear/authorized_keys","permalink":"http://www.humen1.com/2016/10/openwrt-ssh-key-e7-99-bb-e9-99-86.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Linux 查看进程的文件句柄数","date":"2016/08/02","text":"lsof -n |awk ‘{print $1}’|sort|uniq -c |sort -nr|more","permalink":"http://www.humen1.com/2016/08/linux-e6-9f-a5-e7-9c-8b-e8-bf-9b-e7-a8-8b-e7-9a-84-e6-96-87-e4-bb-b6-e5-8f-a5-e6-9f-84-e6-95-b0.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"shell","slug":"shell","permalink":"http://www.humen1.com/tags/shell/"}],"title":"学习Linux，Shell","date":"2016/06/24","text":"学习Linux，ShellTECH``linux``shell``posts Shell技巧 识别当前运行的是哪种shell 1.$ echo $02.-zsh 终端里删字符 backspace delete ctrl+h ctrl+w 删除一个单词 ctrl+u 删除行 搜索命令1.$ apropos keyword识别文件内容1.$ file 100k.jpg2.100k.jpg: JPEG image data, JFIF standard 1.02","permalink":"http://www.humen1.com/2016/06/e5-ad-a6-e4-b9-a0linux-ef-bc-8cshell.html","photos":[]},{"tags":[{"name":"mac","slug":"mac","permalink":"http://www.humen1.com/tags/mac/"},{"name":"homebrew","slug":"homebrew","permalink":"http://www.humen1.com/tags/homebrew/"},{"name":"mtr","slug":"mtr","permalink":"http://www.humen1.com/tags/mtr/"}],"title":"Mtr: Unable to Get Raw Sockets","date":"2016/06/21","text":"mtr: unable to get raw socketsTECH``posts``Mac``homebrew``mtr 用homebrew安装mtr 后有段提示：mtr requires root privileges so you will need to run sudo mtr. You should be certain that you trust any software you grant root privileges. 所以要吧mtr改成root属主并且激活suid位 1. $ sudo chown root:wheel /usr/local/Cellar/mtr/0.86/sbin/mtr2. $ sudo chmod u+s /usr/local/Cellar/mtr/0.86/sbin/mtr","permalink":"http://www.humen1.com/2016/06/mtr-unable-to-get-raw-sockets.html","photos":[]},{"tags":[{"name":"android","slug":"android","permalink":"http://www.humen1.com/tags/android/"},{"name":"c/c++","slug":"c-c","permalink":"http://www.humen1.com/tags/c-c/"}],"title":"Android NDK in Android Studio With SWIG - Suresh's Site","date":"2016/04/19","text":"This post focuses on using C++ inside of Android applications with automatic SWIG wrapper generation and the Android NDK - all inside of Android Studio. 来源： Android NDK in Android Studio with SWIG - Suresh’s Site","permalink":"http://www.humen1.com/2016/04/android-ndk-in-android-studio-with-swig-sureshs-site.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"},{"name":"supervisor","slug":"supervisor","permalink":"http://www.humen1.com/tags/supervisor/"},{"name":"systemd","slug":"systemd","permalink":"http://www.humen1.com/tags/systemd/"}],"title":"Supervisord Usage in Centos7.x (Via: Systemd)","date":"2016/04/05","text":"yum install python-setuptools python-pip pip install supervisor echo_supervisord_conf &gt; /etc/supervisord.conf create init script in : /usr/lib/systemd/system/supervisord.service\\[Unit\\] Description=supervisord - Supervisor process control system for UNIX Documentation=http://supervisord.org After=network.target \\[Service\\] Type=forking ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf ExecReload=/usr/bin/supervisorctl reload ExecStop=/usr/bin/supervisorctl shutdown User=root&lt;/li&gt; &lt;/ol&gt; \\[Install\\] WantedBy=multi-user.target &lt;pre&gt;&lt;code&gt;","permalink":"http://www.humen1.com/2016/04/supervisord-usage-in-centos7-x-via-systemd.html","photos":[]},{"tags":[],"title":"SSTable：有序字符串表","date":"2016/04/01","text":"假设我们有一大批数据（GB或TB量级）需要处理，处理过程可能分为好几个步骤，每个步骤必须由不同的二进制文件(程序)来处理 - 或者可以假设我们正在执行一系列的map-reduce任务！由于输入数据量很大，读取和写入数据的效率决定了运行时间。因此，不会使用随机读写，而是对数据进行流式读取，一旦处理完成，再通过流式写入将数据刷新到磁盘。通过这种方式，我们可以分摊磁盘I / O成本 。不需要磁盘寻道，直接连续的向前写入。 有序字符串表(Sorted String Table)是包含一组任意有序键 - 值对的文件，可以很好的处理重复键，不需要额外的空间来填充(padding)键或值，并且键值可以是任意的东西。顺序的读取整个文件，就可以获得一个有序的索引。如果文件非常大，可以在前面追加或创建独立的key:offset索引来加速访问。这就是SSTable，一个非常简单却非常有用的交换大量有序数据片段的方式。 来源： 图灵社区 : 阅读 : SSTable和日志结构化存储：LevelDB","permalink":"http://www.humen1.com/2016/04/sstable-ef-bc-9a-e6-9c-89-e5-ba-8f-e5-ad-97-e7-ac-a6-e4-b8-b2-e8-a1-a8.html","photos":[]},{"tags":[{"name":"Cassandra","slug":"Cassandra","permalink":"http://www.humen1.com/tags/Cassandra/"},{"name":"noSQL","slug":"noSQL","permalink":"http://www.humen1.com/tags/noSQL/"}],"title":"CQL Syntax","date":"2016/04/01","text":"This document describes the Cassandra Query Language (CQL) version 3. CQL v3 is not backward compatible with CQL v2 and differs from it in numerous ways. Note that this document describes the last version of the languages. However, the changes section provides the diff between the different versions of CQL v3. CQL v3 offers a model very close to SQL in the sense that data is put in tables containing rows of columns. For that reason, when used in this document, these terms (tables, rows and columns) have the same definition than they have in SQL. But please note that as such, they do not refer to the concept of rows and columns found in the internal implementation of Cassandra and in the thrift and CQL v2 API. 来源： CQL","permalink":"http://www.humen1.com/2016/04/cql-syntax.html","photos":[]},{"tags":[],"title":"Virtual Environments — the Hitchhiker's Guide to Python","date":"2016/03/25","text":"Virtual Environments¶ A Virtual Environment is a tool to keep the dependencies required by different projects in separate places, by creating virtual Python environments for them. It solves the “Project X depends on version 1.x but, Project Y needs 4.x” dilemma, and keeps your global site-packages directory clean and manageable. For example, you can work on a project which requires Django 1.3 while also maintaining a project which requires Django 1.0. virtualenv¶ virtualenv is a tool to create isolated Python environments. virtualenv creates a folder which contains all the necessary executables to use the packages that a Python project would need. Install virtualenv via pip: $ pip install virtualenv Basic Usage¶ Create a virtual environment for a project: $ cd my_project_folder $ virtualenv venv virtualenv venv will create a folder in the current directory which will contain the Python executable files, and a copy of the pip library which you can use to install other packages. The name of the virtual environment (in this case, it was venv) can be anything; omitting the name will place the files in the current directory instead. This creates a copy of Python in whichever directory you ran the command in, placing it in a folder named venv. You can also use a Python interpreter of your choice. $ virtualenv -p /usr/bin/python2.7 venv This will use the Python interpreter in /usr/bin/python2.7 To begin using the virtual environment, it needs to be activated: $ source venv/bin/activate The name of the current virtual environment will now appear on the left of the prompt (e.g. (venv)Your-Computer:your_project UserName$) to let you know that it’s active. From now on, any package that you install using pip will be placed in the venv folder, isolated from the global Python installation. Install packages as usual, for example: $ pip install requests If you are done working in the virtual environment for the moment, you can deactivate it: $ deactivate This puts you back to the system’s default Python interpreter with all its installed libraries. To delete a virtual environment, just delete its folder. (In this case, it would be rm -rf venv.) After a while, though, you might end up with a lot of virtual environments littered across your system, and its possible you’ll forget their names or where they were placed. Other Notes¶ Running virtualenv with the option &lt;b–&lt;no-site-packages will not include the packages that are installed globally. This can be useful for keeping the package list clean in case it needs to be accessed later. [This is the default behavior for virtualenv 1.7 and later.] In order to keep your environment consistent, it’s a good idea to “freeze” the current state of the environment packages. To do this, run $ pip freeze &gt; requirements.txt This will create a requirements.txt file, which contains a simple list of all the packages in the current environment, and their respective versions. You can see the list of installed packages without the requirements format using “pip list”. Later it will be easier for a different developer (or you, if you need to re-create the environment) to install the same packages using the same versions: $ pip install -r requirements.txt This can help ensure consistency across installations, across deployments, and across developers. Lastly, remember to exclude the virtual environment folder from source control by adding it to the ignore list. virtualenvwrapper¶ virtualenvwrapper provides a set of commands which makes working with virtual environments much more pleasant. It also places all your virtual environments in one place. To install (make sure virtualenv is already installed): $ pip install virtualenvwrapper $ export WORKON_HOME=~/Envs $ source /usr/local/bin/virtualenvwrapper.sh (Full virtualenvwrapper install instructions.) For Windows, you can use the virtualenvwrapper-win. To install (make sure virtualenv is already installed): $ pip install virtualenvwrapper-win In Windows, the default path for WORKON_HOME is %USERPROFILE%Envs Basic Usage¶ Create a virtual environment: $ mkvirtualenv venv This creates the venv folder inside ~/Envs. Work on a virtual environment: $ workon venv Alternatively, you can make a project, which creates the virtual environment, and also a project directory inside $PROJECT_HOME, which is cd -ed into when you workon myproject. $ mkproject myproject virtualenvwrapper provides tab-completion on environment names. It really helps when you have a lot of environments and have trouble remembering their names. workon also deactivates whatever environment you are currently in, so you can quickly switch between environments. Deactivating is still the same: $ deactivate To delete: $ rmvirtualenv venv Other useful commands¶ lsvirtualenv List all of the environments. cdvirtualenv Navigate into the directory of the currently activated virtual environment, so you can browse its site-packages, for example. cdsitepackages Like the above, but directly into site-packages directory. lssitepackages Shows contents of site-packages directory. Full list of virtualenvwrapper commands. virtualenv-burrito¶ With virtualenv-burrito, you can have a working virtualenv + virtualenvwrapper environment in a single command. autoenv¶ When you cd into a directory containing a .env, autoenv automagically activates the environment. Install it on Mac OS X using brew: $ brew install autoenv And on Linux: $ git clone git://github.com/kennethreitz/autoenv.git ~/.autoenv $ echo ‘source ~/.autoenv/activate.sh’ &gt;&gt; ~/.bashrc","permalink":"http://www.humen1.com/2016/03/virtual-environments-the-hitchhikers-guide-to-python-2.html","photos":[]},{"tags":[{"name":"Git","slug":"Git","permalink":"http://www.humen1.com/tags/Git/"}],"title":"Git取消修改，恢复版本","date":"2016/03/25","text":"[bash] #取消对文件的修改。还原到最近的版本，废弃本地做的修改。 git checkout – &lt;file&gt; #取消已经暂存的文件。即，撤销先前”git add”的操作 git reset HEAD &lt;file&gt;… #修改最后一次提交。用于修改上一次的提交信息，或漏提交文件等情况。 git commit –amend #回退所有内容到上一个版本 git reset HEAD^ #回退a.py这个文件的版本到上一个版本 git reset HEAD^ a.py #向前回退到第3个版本 git reset –soft HEAD~3 #将本地的状态回退到和远程的一样 git reset –hard origin/master #回退到某个版本 git reset 057d #回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit.(代码回滚到上个版本，并提交git) git revert HEAD [/bash]","permalink":"http://www.humen1.com/2016/03/git-e5-8f-96-e6-b6-88-e4-bf-ae-e6-94-b9-ef-bc-8c-e6-81-a2-e5-a4-8d-e7-89-88-e6-9c-ac.html","photos":[]},{"tags":[{"name":"nginx","slug":"nginx","permalink":"http://www.humen1.com/tags/nginx/"},{"name":"htpasswd","slug":"htpasswd","permalink":"http://www.humen1.com/tags/htpasswd/"},{"name":"密码","slug":"密码","permalink":"http://www.humen1.com/tags/%E5%AF%86%E7%A0%81/"}],"title":"How to Set Up Password Authentication With Nginx on Ubuntu 14.04 | DigitalOcean","date":"2016/03/04","text":"sudo sh -c “echo -n ‘sammy:’ &gt;&gt; /etc/nginx/.htpasswd”Next, add an encrypted password entry for the username by typing:sudo sh -c “openssl passwd -apr1 &gt;&gt; /etc/nginx/.htpasswd” 来源： How To Set Up Password Authentication with Nginx on Ubuntu 14.04 | DigitalOcean","permalink":"http://www.humen1.com/2016/03/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04-digitalocean.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"}],"title":"Dart","date":"2016/02/19","text":"来源： Dart","permalink":"http://www.humen1.com/2016/02/dart.html","photos":[]},{"tags":[{"name":"vpn","slug":"vpn","permalink":"http://www.humen1.com/tags/vpn/"},{"name":"vps","slug":"vps","permalink":"http://www.humen1.com/tags/vps/"},{"name":"香港","slug":"香港","permalink":"http://www.humen1.com/tags/%E9%A6%99%E6%B8%AF/"}],"title":"香港优质VPS HostHatch","date":"2016/02/18","text":"自己买了2个做项目托管和vpn。用了半年感觉比linode强多啦。实惠 &lt;猛戳虫洞&gt;","permalink":"http://www.humen1.com/2016/02/e9-a6-99-e6-b8-af-e4-bc-98-e8-b4-a8vps-hosthatch.html","photos":[]},{"tags":[{"name":"bitcoin","slug":"bitcoin","permalink":"http://www.humen1.com/tags/bitcoin/"},{"name":"块链","slug":"块链","permalink":"http://www.humen1.com/tags/%E5%9D%97%E9%93%BE/"},{"name":"比特币","slug":"比特币","permalink":"http://www.humen1.com/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"}],"title":"Bitcoin Block Explorer - Blockchain.info","date":"2016/02/17","text":"来源： Bitcoin Block Explorer - Blockchain.info","permalink":"http://www.humen1.com/2016/02/bitcoin-block-explorer-blockchain-info.html","photos":[]},{"tags":[{"name":"fallout","slug":"fallout","permalink":"http://www.humen1.com/tags/fallout/"},{"name":"辐射4","slug":"辐射4","permalink":"http://www.humen1.com/tags/%E8%BE%90%E5%B0%844/"}],"title":"The Art of Fallout 4 | Bethesda.net","date":"2016/02/12","text":"The official site for Bethesda, publisher of Fallout, DOOM, Dishonored, Skyrim, Wolfenstein, The Elder Scrolls, more. Your source for news, features &amp; community. 来源： The Art of Fallout 4 | Bethesda.net","permalink":"http://www.humen1.com/2016/02/the-art-of-fallout-4-bethesda-net.html","photos":[]},{"tags":[],"title":"letsencrypt.org  1st. Step","date":"2016/01/20","text":"https://letsencrypt.org/ 这是一个由很多个互联网巨头攒起来的非营利性组织。 来瞥一眼有哪些巨头： 好了，简单来说就一句话：提供免费的秒生web 证书！！！！！！！！！（此处省略n个！） 我就拿来测试了。 假设我们要给 ssl.humen1.net 生成证书 。生成证书的server ip 为 11.11.11.11 先将 ssl.humen1.net A 11.11.11.11 在server上配置nginx [bash] server { listen 80; listen 443 ssl; server_name ssl.humen1.net; ssl_certificate /etc/letsencrypt/live/ssl.humen1.net/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/ssl.humen1.net/privkey.pem; location / { root /data/letsencrypt; index index.html; } } [/bash] 安装letsencrypt [bash] $ git clone https://github.com/letsencrypt/letsencrypt $ cd letsencrypt $ ./letsencrypt-auto –help [/bash] ./letsencrypt-auto certonly –webroot -w /data/letsencrypt -d ssl.humen1.net","permalink":"http://www.humen1.com/2016/01/letsencrypt-org-1st-step.html","photos":[]},{"tags":[],"title":"Mysql 初始化@Centos7","date":"2016/01/14","text":"mysql 初始化@centos7 rm -rf /var/lib/mysql mysqld –initialize-insecure –user=mysql systemctl start mysqld mysql -u root –skip-password","permalink":"http://www.humen1.com/2016/01/mysql-e5-88-9d-e5-a7-8b-e5-8c-96centos7.html","photos":[]},{"tags":[{"name":"http","slug":"http","permalink":"http://www.humen1.com/tags/http/"},{"name":"tls","slug":"tls","permalink":"http://www.humen1.com/tags/tls/"}],"title":"TLS协议分析 与 现代加密通信协议设计 - Tech Ideas","date":"2016/01/12","text":"TLS协议分析 与 现代加密通信协议设计 来源： TLS协议分析 与 现代加密通信协议设计 - Tech Ideas","permalink":"http://www.humen1.com/2016/01/tls-e5-8d-8f-e8-ae-ae-e5-88-86-e6-9e-90-e4-b8-8e-e7-8e-b0-e4-bb-a3-e5-8a-a0-e5-af-86-e9-80-9a-e4-bf-a1-e5-8d-8f-e8-ae-ae-e8-ae-be-e8-ae-a1-tech-ideas.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"ssl","slug":"ssl","permalink":"http://www.humen1.com/tags/ssl/"},{"name":"http","slug":"http","permalink":"http://www.humen1.com/tags/http/"}],"title":"图解SSL/TLS协议 ","date":"2016/01/12","text":"来源： 图解SSL/TLS协议 - 阮一峰的网络日志","permalink":"http://www.humen1.com/2016/01/e5-9b-be-e8-a7-a3ssltls-e5-8d-8f-e8-ae-ae.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"node","slug":"node","permalink":"http://www.humen1.com/tags/node/"},{"name":"random","slug":"random","permalink":"http://www.humen1.com/tags/random/"}],"title":"Chance.js: Utility Library to Generate Anything Random for JavaScript","date":"2016/01/11","text":"一款随机的工具，挺好用的。我它来解决多个加权item的选择问题。不用自己写算法了：） Utility library to generate anything random for JavaScript 来源： Chance.js: Utility library to generate anything random for JavaScript","permalink":"http://www.humen1.com/2016/01/chance-js-utility-library-to-generate-anything-random-for-javascript.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"node","slug":"node","permalink":"http://www.humen1.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://www.humen1.com/tags/npm/"},{"name":"random","slug":"random","permalink":"http://www.humen1.com/tags/random/"}],"title":"Random-Weighted-Choice 从一坨加权的对象里选择一个","date":"2016/01/10","text":"Node.js module to make a random choice among weighted elements of table. 来源： random-weighted-choice","permalink":"http://www.humen1.com/2016/01/random-weighted-choice-e4-bb-8e-e4-b8-80-e5-9d-a8-e5-8a-a0-e6-9d-83-e7-9a-84-e5-af-b9-e8-b1-a1-e9-87-8c-e9-80-89-e6-8b-a9-e4-b8-80-e4-b8-aa.html","photos":[]},{"tags":[{"name":"mac","slug":"mac","permalink":"http://www.humen1.com/tags/mac/"},{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"console","slug":"console","permalink":"http://www.humen1.com/tags/console/"}],"title":"iTerm2 | Mac 最佳应用--神器","date":"2016/01/09","text":"来源： iTerm2 | Mac 最佳应用–神器","permalink":"http://www.humen1.com/2016/01/iterm2-mac-e6-9c-80-e4-bd-b3-e5-ba-94-e7-94-a8-e7-a5-9e-e5-99-a8.html","photos":[]},{"tags":[{"name":"mongo","slug":"mongo","permalink":"http://www.humen1.com/tags/mongo/"}],"title":"Install MongoDB on Windows — MongoDB Manual 3.2","date":"2016/01/08","text":"MongoDB Manual 3.2 Install MongoDB on Windows 来源： Install MongoDB on Windows — MongoDB Manual 3.2 添加windows service 成功 [bash] sc.exe create MongoDB binPath=”C:\\Program Files\\MongoDB\\Server\\3.2\\bin\\mongod.exe” –service –config=”C:\\Program Files\\MongoDB\\mongo.cfg” DisplayName= “MongoDB” start= “auto” [/bash]","permalink":"http://www.humen1.com/2016/01/install-mongodb-on-windows-mongodb-manual-3-2.html","photos":[]},{"tags":[],"title":"Babun - a Windows Shell You Will Love!","date":"2016/01/07","text":"a Windows shell you will love!来源： Babun - a windows shell you will love!","permalink":"http://www.humen1.com/2016/01/babun-a-windows-shell-you-will-love.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"google","slug":"google","permalink":"http://www.humen1.com/tags/google/"},{"name":"material","slug":"material","permalink":"http://www.humen1.com/tags/material/"},{"name":"angular","slug":"angular","permalink":"http://www.humen1.com/tags/angular/"}],"title":"Angular Material - Introduction","date":"2016/01/06","text":"来源： Angular Material - Introduction","permalink":"http://www.humen1.com/2016/01/angular-material-introduction.html","photos":[]},{"tags":[{"name":"google","slug":"google","permalink":"http://www.humen1.com/tags/google/"},{"name":"design","slug":"design","permalink":"http://www.humen1.com/tags/design/"},{"name":"icons","slug":"icons","permalink":"http://www.humen1.com/tags/icons/"},{"name":"material","slug":"material","permalink":"http://www.humen1.com/tags/material/"}],"title":"Material Icons - Google Design","date":"2016/01/06","text":"Material icons are beautifully crafted, delightful, and easy to use in your web, Android, and iOS projects. 来源： Material icons - Google Design","permalink":"http://www.humen1.com/2016/01/material-icons-google-design.html","photos":[]},{"tags":[{"name":"验证码","slug":"验证码","permalink":"http://www.humen1.com/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/"}],"title":"把“滑动解锁”用在验证码系统上，Minteye让用户把扭曲的文字/图片捋捋直就可“解锁”通过 |","date":"2016/01/06","text":"去国外网站逛过的人几乎应该都知道CAPTCHA——让你输入那些乱七八糟的、扭曲难辨的验证码以便证明你是个人。它的糟糕之处在于，哪怕电脑前真的是人，有时也免不了要多试几次才能成功。 避免spam难道就没有更好的办法了么？创业公司 minteye的做法非常讨巧，它“无需打字的解决方案”直观地运用了滑动条（对，就是和苹果著名的“滑动解锁”滑动条差不多），让用户把扭曲的文字/图片捋捋直就可“解锁”通过。","permalink":"http://www.humen1.com/2016/01/7headlines-e6-8a-8a-e6-bb-91-e5-8a-a8-e8-a7-a3-e9-94-81-e7-94-a8-e5-9c-a8-e9-aa-8c-e8-af-81-e7-a0-81-e7-b3-bb-e7-bb-9f-e4-b8-8a-ef-bc-8cminteye-e8-ae-a9-e7-94-a8-e6-88-b7-e6-8a-8a.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"}],"title":"一个很diao的类型判断库（JS）","date":"2016/01/05","text":"只贴地址 http://is.js.org/","permalink":"http://www.humen1.com/2016/01/e4-b8-80-e4-b8-aa-e5-be-88diao-e7-9a-84-e7-b1-bb-e5-9e-8b-e5-88-a4-e6-96-ad-e5-ba-93-ef-bc-88js-ef-bc-89.html","photos":[]},{"tags":[{"name":"osx","slug":"osx","permalink":"http://www.humen1.com/tags/osx/"},{"name":"dock","slug":"dock","permalink":"http://www.humen1.com/tags/dock/"}],"title":"OSX创建 Dock Stack","date":"2015/12/11","text":"打开终端 [code lang=bash] defaults write com.apple.dock persistent-others -array-add ‘{ “tile-data” = { “list-type” = 1 ; }; “tile-type” = “recents-tile”; }’ [/code] 然后 killall Dock","permalink":"http://www.humen1.com/2015/12/osx-e5-88-9b-e5-bb-ba-dock-stack.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"node","slug":"node","permalink":"http://www.humen1.com/tags/node/"}],"title":"package.json 里的依赖怎么写","date":"2015/10/02","text":"Dependencies 可选字段，指示当前包所依赖的其他包。 { “dependencies” : { “foo” : “1.0.0 - 2.9999.9999” , “bar” : “&gt;=1.0.2 &lt;2.1.2” , “baz” : “&gt;1.0.2 &lt;=2.3.4” , “boo” : “2.0.1” , “qux” : “&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0” , “asd” : “http://asdf.com/asdf.tar.gz&quot; , “til” : “1.2” , “elf” : “1.2.3” , “two” : “2.x” , “thr” : “3.3.x” } } 版本格式可以是下面任一种： version 完全匹配 version 大于这个版本 =version大于或等于这个版本 =version1 &lt;=version2. range1 || range2 满足任意一个即可 git… Git地址 user/repo devDependencies 可选字段。如果只需要下载使用某些模块，而不下载这些模块的测试和文档框架，放在这个下面比较不错。 peerDependencies 可选字段。兼容性依赖。如果你的包是插件，适合这种方式。 bundledDependencies 可选字段。发布包时同时打包的其他依赖。 optionalDependencies 可选字段。如果你想在某些依赖即使没有找到，或则安装失败的情况下，npm都继续执行。那么这些依赖适合放在这里。","permalink":"http://www.humen1.com/2015/10/package-json-e9-87-8c-e7-9a-84-e4-be-9d-e8-b5-96-e6-80-8e-e4-b9-88-e5-86-99.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"openwrt","slug":"openwrt","permalink":"http://www.humen1.com/tags/openwrt/"},{"name":"路由","slug":"路由","permalink":"http://www.humen1.com/tags/%E8%B7%AF%E7%94%B1/"}],"title":"Wndr4300 刷Openwrt 科学上网","date":"2015/07/23","text":"刷机 基础配置参考文件入口 需要的刷机文件@百度网盘 shadowsocks-spec chinadns-openwrt luci-app-shadowsocks luci-app-chinadns 初始安装软件@win [code lang=bash] C:\\Users\\seven\\Documents\\wdnr4300&gt;pscp.exe .ipk root@192.168.1.1:/opt/ 2015/07/23 14:38 27,161 ChinaDNS_1.3.1-1_ar71xx.ipk 2015/07/23 14:38 2,592 luci-app-chinadns_1.3.1-1_all.ipk 2015/07/23 14:38 3,131 luci-app-shadowsocks-spec_1.3.2-1_all.ipk 2015/07/23 14:38 117,469 shadowsocks-libev-spec_2.2.2-1_ar71xx.ipk [/code] @4300 [code lang=bash] # opkg install ip ipset libopenssl resolveip iptables-mod-tproxy # cd /opt # opkg install ./.ipk [/code] 问题： [code lang=text] C:\\Users\\seven\\Documents\\wdnr4300&gt;pscp.exe .ipk root@192.168.1.1:/opt/ root@192.168.1.1‘s password: ash: /usr/libexec/sftp-server: not found Fatal: Received unexpected end-of-file from server [/code] 解决： [code lang=text] # opkg update # opkg install openssh-sftp-server [/code] *修改4300 LAN IP 192.168.7.1** DNS#vim /etc/config/sec_resolv.conf [code lang=bash] nameserver 8.8.8.8 nameserver 8.8.4.4 nameserver 114.114.114.114 [/code] 无线和有线设置忽略了，直接在web界面设置就好主要是设密码什么的 pdnsd搭建DNS服务器@centos 服务器从 http://members.home.nl/p.a.rombouts/pdnsd/dl.html 下载pdnsd最新的rpm包 然后 yum localinstall pdnsd-x.x.x-par_sl6.x86_64.rpm 配置见： https://cokebar.info/archives/720 http://leeraw.com/?p=3621 搭建shadowsocks服务@centos 服务器 先安装git 从github上拉源码 https://github.com/shadowsocks/shadowsocks-libev cd shadowsocks-libev ./configure make &amp;&amp; make install 启动 &gt; nohup /usr/local/bin/ss-server -s SERVER_IP -p SERVER_PORT -k PASSWD -m aes-256-cfb &amp; &gt; 将上面的启动命令加到rc.local开机自启 配置 进阶https://cokebar.info/archives/850 交换机截图","permalink":"http://www.humen1.com/2015/07/wndr4300-e5-88-b7openwrt-e7-a7-91-e5-ad-a6-e4-b8-8a-e7-bd-91.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"ATS","slug":"ATS","permalink":"http://www.humen1.com/tags/ATS/"},{"name":"trafficserver","slug":"trafficserver","permalink":"http://www.humen1.com/tags/trafficserver/"}],"title":"TrafficServer源码：the Possible Operations or Msg Types Sent From Remote Client to TM","date":"2014/12/17","text":"[cpp] // trafficserver/mgmt/api/NetworkMessage.h typedef enum { FILE_READ, FILE_WRITE, RECORD_SET, RECORD_GET, PROXY_STATE_GET, PROXY_STATE_SET, RECONFIGURE, RESTART, BOUNCE, EVENT_RESOLVE, EVENT_GET_MLT, EVENT_ACTIVE, EVENT_REG_CALLBACK, EVENT_UNREG_CALLBACK, EVENT_NOTIFY, /* only msg sent from TM to client / SNAPSHOT_TAKE, SNAPSHOT_RESTORE, SNAPSHOT_REMOVE, SNAPSHOT_GET_MLT, DIAGS, STATS_RESET_NODE, STATS_RESET_CLUSTER, STORAGE_DEVICE_CMD_OFFLINE, RECORD_MATCH_GET, API_PING, SERVER_BACKTRACE, UNDEFINED_OP / This must be last */ } OpType; [/cpp]","permalink":"http://www.humen1.com/2014/12/trafficserver-e6-ba-90-e7-a0-81-ef-bc-9athe-possible-operations-or-msg-types-sent-from-remote-client-to-tm.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"},{"name":"shell","slug":"shell","permalink":"http://www.humen1.com/tags/shell/"}],"title":"在Shell 脚本里嵌入Python","date":"2014/12/08","text":"[shell] #!/bin/bash function pytest() { python - $@ &lt;&lt;EOT import sys,datetime print ‘Current Time is %s’ % datetime.datetime.now() print sys.argv EOT } RT=$(pytest $@) echo my python script says: $RT [/shell]","permalink":"http://www.humen1.com/2014/12/e5-9c-a8shell-e8-84-9a-e6-9c-ac-e9-87-8c-e5-b5-8c-e5-85-a5python.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"},{"name":"运维","slug":"运维","permalink":"http://www.humen1.com/tags/%E8%BF%90%E7%BB%B4/"},{"name":"snmp","slug":"snmp","permalink":"http://www.humen1.com/tags/snmp/"}],"title":"Snmp via Python [IF-MIB]","date":"2014/11/24","text":"依赖 pysnmp pysnmp-mibs [python] # -- coding: utf-8 -- ‘’’ Created on 14/11/20. @author: seven ‘’’ from pysnmp.entity.rfc3413.oneliner import cmdgen cmdGen = cmdgen.CommandGenerator() errorIndication, errorStatus, errorIndex, varBindTable = cmdGen.nextCmd( cmdgen.CommunityData(‘community_str’), cmdgen.UdpTransportTarget((‘211.xx.169.xx’, 161)), cmdgen.MibVariable(‘IF-MIB’, ‘ifNumber’), cmdgen.MibVariable(‘IF-MIB’, ‘ifDescr’), cmdgen.MibVariable(‘IF-MIB’, ‘ifType’), cmdgen.MibVariable(‘IF-MIB’, ‘ifMtu’), cmdgen.MibVariable(‘IF-MIB’, ‘ifSpeed’), cmdgen.MibVariable(‘IF-MIB’, ‘ifPhysAddress’), lookupValues=True ) if errorIndication: print(errorIndication) else: if errorStatus: print(‘%s at %s’ % ( errorStatus.prettyPrint(), errorIndex and varBindTable[-1][int(errorIndex) - 1] or ‘?’ ) ) else: for varBindTableRow in varBindTable: for name, val in varBindTableRow: print(‘%s = %s’ % (name.prettyPrint(), val.prettyPrint())) [/python]","permalink":"http://www.humen1.com/2014/11/snmp-via-python-if-mib.html","photos":[]},{"tags":[{"name":"mac","slug":"mac","permalink":"http://www.humen1.com/tags/mac/"}],"title":"Airmail 2 造成Mac Book Pro 极其卡的原因","date":"2014/11/17","text":"之前一直找不到原因，分析了cpu 和内存 都不是瓶颈。 突然发现 偏好设置》高级 里有一项 高级图形卡 被我启用了 我这笔记本是集显啊~ 于是关闭此选项后重启 Airmail 2. 果然！不卡了：D","permalink":"http://www.humen1.com/2014/11/airmail-2-e9-80-a0-e6-88-90mac-book-pro-e6-9e-81-e5-85-b6-e5-8d-a1-e7-9a-84-e5-8e-9f-e5-9b-a0.html","photos":[]},{"tags":[{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://www.humen1.com/tags/elasticsearch/"},{"name":"logstash","slug":"logstash","permalink":"http://www.humen1.com/tags/logstash/"},{"name":"log","slug":"log","permalink":"http://www.humen1.com/tags/log/"}],"title":"Elasticsearch_river 配置","date":"2014/08/12","text":"1. install es-river plugin /usr/share/elasticsearch/bin/plugin -install elasticsearch/elasticsearch-river-rabbitmq/2.0.0 2. install rabbitmq 2.1 add epel repo rpm –import https://fedoraproject.org/static/0608B895.txt wget http://mirrors.yun-idc.com/epel/6/i386/epel-release-6-8.noarch.rpm rpm -i epel-release-6-8.noarch.rpm 2.2 install erlang yum -y install erlang 2.3 install rabbitmq wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.3.4/rabbitmq-server-3.3.4-1.noarch.rpm rpm –import http://www.rabbitmq.com/rabbitmq-signing-key-public.asc yum -y install rabbitmq-server-3.3.4-1.noarch.rpm 2.4 start rabbitmq /etc/init.d/rabbitmq-server start 3 logstash conf … output{ elasticsearch_river { es_host =&gt; “localhost” index =&gt; “rt-%{+dd.HH.mm.ss}” rabbitmq_host =&gt; “localhost” workers =&gt; 8 } } … 4. restart elasticsearch 5. restart logstash","permalink":"http://www.humen1.com/2014/08/elasticsearch-river-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[{"name":"web","slug":"web","permalink":"http://www.humen1.com/tags/web/"},{"name":"压力测试","slug":"压力测试","permalink":"http://www.humen1.com/tags/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"},{"name":"性能测试","slug":"性能测试","permalink":"http://www.humen1.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"}],"title":"Siege Web 压力测试","date":"2014/08/11","text":"Wormhole","permalink":"http://www.humen1.com/2014/08/siege-web-e5-8e-8b-e5-8a-9b-e6-b5-8b-e8-af-95.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"d3","slug":"d3","permalink":"http://www.humen1.com/tags/d3/"},{"name":"可视化","slug":"可视化","permalink":"http://www.humen1.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"name":"数据","slug":"数据","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE/"}],"title":"D3 时间格式","date":"2014/07/29","text":"%a - abbreviated weekday name. %A - full weekday name. %b - abbreviated month name. %B - full month name. %c - date and time, as “%a %b %e %H:%M:%S %Y”. %d - zero-padded day of the month as a decimal number [01,31]. %e - space-padded day of the month as a decimal number [ 1,31]; equivalent to %_d. %H - hour (24-hour clock) as a decimal number [00,23]. %I - hour (12-hour clock) as a decimal number [01,12]. %j - day of the year as a decimal number [001,366]. %m - month as a decimal number [01,12]. %M - minute as a decimal number [00,59]. %L - milliseconds as a decimal number [000, 999]. %p - either AM or PM. %S - second as a decimal number [00,61]. %U - week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. %w - weekday as a decimal number [0(Sunday),6]. %W - week number of the year (Monday as the first day of the week) as a decimal number [00,53]. %x - date, as “%m/%d/%Y”. %X - time, as “%H:%M:%S”. %y - year without century as a decimal number [00,99]. %Y - year with century as a decimal number. %Z - time zone offset, such as “-0700”. %% - a literal “%” character.","permalink":"http://www.humen1.com/2014/07/d3-e6-97-b6-e9-97-b4-e6-a0-bc-e5-bc-8f.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"server","slug":"server","permalink":"http://www.humen1.com/tags/server/"},{"name":"timezone","slug":"timezone","permalink":"http://www.humen1.com/tags/timezone/"}],"title":"Tz","date":"2014/07/03","text":"Standard Offset Canonical ID Aliases -12:00 Etc/GMT+12 -11:00 Etc/GMT+11 -11:00 Pacific/Apia -11:00 Pacific/Midway -11:00 Pacific/Niue -11:00 Pacific/Pago_Pago Pacific/Samoa, US/Samoa -10:00 America/Adak America/Atka, US/Aleutian -10:00 Etc/GMT+10 -10:00 HST -10:00 Pacific/Fakaofo -10:00 Pacific/Honolulu US/Hawaii -10:00 Pacific/Johnston -10:00 Pacific/Rarotonga -10:00 Pacific/Tahiti -09:30 Pacific/Marquesas -09:00 America/Anchorage US/Alaska -09:00 America/Juneau -09:00 America/Nome -09:00 America/Yakutat -09:00 Etc/GMT+9 -09:00 Pacific/Gambier -08:00 America/Dawson -08:00 America/Los_Angeles US/Pacific, US/Pacific-New -08:00 America/Santa_Isabel -08:00 America/Tijuana America/Ensenada, Mexico/BajaNorte -08:00 America/Vancouver Canada/Pacific -08:00 America/Whitehorse Canada/Yukon -08:00 Etc/GMT+8 -08:00 PST8PDT -08:00 Pacific/Pitcairn -07:00 America/Boise -07:00 America/Cambridge_Bay -07:00 America/Chihuahua -07:00 America/Dawson_Creek -07:00 America/Denver America/Shiprock, Navajo, US/Mountain -07:00 America/Edmonton Canada/Mountain -07:00 America/Hermosillo -07:00 America/Inuvik -07:00 America/Mazatlan Mexico/BajaSur -07:00 America/Ojinaga -07:00 America/Phoenix US/Arizona -07:00 America/Yellowknife -07:00 Etc/GMT+7 -07:00 MST -07:00 MST7MDT -06:00 America/Bahia_Banderas -06:00 America/Belize -06:00 America/Cancun -06:00 America/Chicago US/Central -06:00 America/Costa_Rica -06:00 America/El_Salvador -06:00 America/Guatemala -06:00 America/Indiana/Knox America/Knox_IN, US/Indiana-Starke -06:00 America/Indiana/Tell_City -06:00 America/Managua -06:00 America/Matamoros -06:00 America/Menominee -06:00 America/Merida -06:00 America/Mexico_City Mexico/General -06:00 America/Monterrey -06:00 America/North_Dakota/Center -06:00 America/North_Dakota/New_Salem -06:00 America/Rainy_River -06:00 America/Rankin_Inlet -06:00 America/Regina Canada/East-Saskatchewan, Canada/Saskatchewan -06:00 America/Swift_Current -06:00 America/Tegucigalpa -06:00 America/Winnipeg Canada/Central -06:00 CST6CDT -06:00 Etc/GMT+6 -06:00 Pacific/Easter Chile/EasterIsland -06:00 Pacific/Galapagos -05:00 America/Atikokan America/Coral_Harbour -05:00 America/Bogota -05:00 America/Cayman -05:00 America/Detroit US/Michigan -05:00 America/Grand_Turk -05:00 America/Guayaquil -05:00 America/Havana Cuba -05:00 America/Indiana/Indianapolis America/Fort_Wayne, America/Indianapolis, US/East-Indiana -05:00 America/Indiana/Marengo -05:00 America/Indiana/Petersburg -05:00 America/Indiana/Vevay -05:00 America/Indiana/Vincennes -05:00 America/Indiana/Winamac -05:00 America/Iqaluit -05:00 America/Jamaica Jamaica -05:00 America/Kentucky/Louisville America/Louisville -05:00 America/Kentucky/Monticello -05:00 America/Lima -05:00 America/Montreal -05:00 America/Nassau -05:00 America/New_York US/Eastern -05:00 America/Nipigon -05:00 America/Panama -05:00 America/Pangnirtung -05:00 America/Port-au-Prince -05:00 America/Resolute -05:00 America/Thunder_Bay -05:00 America/Toronto Canada/Eastern -05:00 EST -05:00 EST5EDT -05:00 Etc/GMT+5 -04:30 America/Caracas -04:00 America/Anguilla -04:00 America/Antigua -03:00 America/Argentina/San_Luis -04:00 America/Aruba -04:00 America/Asuncion -04:00 America/Barbados -04:00 America/Blanc-Sablon -04:00 America/Boa_Vista -04:00 America/Campo_Grande -04:00 America/Cuiaba -04:00 America/Curacao -04:00 America/Dominica -04:00 America/Eirunepe -04:00 America/Glace_Bay -04:00 America/Goose_Bay -04:00 America/Grenada -04:00 America/Guadeloupe America/Marigot, America/St_Barthelemy -04:00 America/Guyana -04:00 America/Halifax Canada/Atlantic -04:00 America/La_Paz -04:00 America/Manaus Brazil/West -04:00 America/Martinique -04:00 America/Moncton -04:00 America/Montserrat -04:00 America/Port_of_Spain -04:00 America/Porto_Velho -04:00 America/Puerto_Rico -04:00 America/Rio_Branco America/Porto_Acre, Brazil/Acre -04:00 America/Santiago Chile/Continental -04:00 America/Santo_Domingo -04:00 America/St_Kitts -04:00 America/St_Lucia -04:00 America/St_Thomas America/Virgin -04:00 America/St_Vincent -04:00 America/Thule -04:00 America/Tortola -04:00 Antarctica/Palmer -04:00 Atlantic/Bermuda -04:00 Atlantic/Stanley -04:00 Etc/GMT+4 -03:30 America/St_Johns Canada/Newfoundland -03:00 America/Araguaina -03:00 America/Argentina/Buenos_Aires America/Buenos_Aires -03:00 America/Argentina/Catamarca America/Argentina/ComodRivadavia, America/Catamarca -03:00 America/Argentina/Cordoba America/Cordoba, America/Rosario -03:00 America/Argentina/Jujuy America/Jujuy -03:00 America/Argentina/La_Rioja -03:00 America/Argentina/Mendoza America/Mendoza -03:00 America/Argentina/Rio_Gallegos -03:00 America/Argentina/Salta -03:00 America/Argentina/San_Juan -03:00 America/Argentina/Tucuman -03:00 America/Argentina/Ushuaia -03:00 America/Bahia -03:00 America/Belem -03:00 America/Cayenne -03:00 America/Fortaleza -03:00 America/Godthab -03:00 America/Maceio -03:00 America/Miquelon -03:00 America/Montevideo -03:00 America/Paramaribo -03:00 America/Recife -03:00 America/Santarem -03:00 America/Sao_Paulo Brazil/East -03:00 Antarctica/Rothera -03:00 Etc/GMT+3 -02:00 America/Noronha Brazil/DeNoronha -02:00 Atlantic/South_Georgia -02:00 Etc/GMT+2 -01:00 America/Scoresbysund -01:00 Atlantic/Azores -01:00 Atlantic/Cape_Verde -01:00 Etc/GMT+1 +00:00 Africa/Abidjan +00:00 Africa/Accra +00:00 Africa/Bamako Africa/Timbuktu +00:00 Africa/Banjul +00:00 Africa/Bissau +00:00 Africa/Casablanca +00:00 Africa/Conakry +00:00 Africa/Dakar +00:00 Africa/El_Aaiun +00:00 Africa/Freetown +00:00 Africa/Lome +00:00 Africa/Monrovia +00:00 Africa/Nouakchott +00:00 Africa/Ouagadougou +00:00 Africa/Sao_Tome +00:00 America/Danmarkshavn +00:00 Atlantic/Canary +00:00 Atlantic/Faroe Atlantic/Faeroe +00:00 Atlantic/Madeira +00:00 Atlantic/Reykjavik Iceland +00:00 Atlantic/St_Helena +00:00 Etc/GMT Etc/GMT+0, Etc/GMT-0, Etc/GMT0, Etc/Greenwich, GMT, GMT+0, GMT-0, GMT0, Greenwich +00:00 Etc/UCT UCT +00:00 Etc/UTC Etc/Universal, Etc/Zulu, Universal, Zulu +00:00 Europe/Dublin Eire +00:00 Europe/Lisbon Portugal +00:00 Europe/London Europe/Belfast, Europe/Guernsey, Europe/Isle_of_Man, Europe/Jersey, GB, GB-Eire +00:00 UTC +00:00 WET +01:00 Africa/Algiers +01:00 Africa/Bangui +01:00 Africa/Brazzaville +01:00 Africa/Ceuta +01:00 Africa/Douala +01:00 Africa/Kinshasa +01:00 Africa/Lagos +01:00 Africa/Libreville +01:00 Africa/Luanda +01:00 Africa/Malabo +01:00 Africa/Ndjamena +01:00 Africa/Niamey +01:00 Africa/Porto-Novo +01:00 Africa/Tunis +01:00 Africa/Windhoek +01:00 CET +01:00 Etc/GMT-1 +01:00 Europe/Amsterdam +01:00 Europe/Andorra +01:00 Europe/Belgrade Europe/Ljubljana, Europe/Podgorica, Europe/Sarajevo, Europe/Skopje, Europe/Zagreb +01:00 Europe/Berlin +01:00 Europe/Brussels +01:00 Europe/Budapest +01:00 Europe/Copenhagen +01:00 Europe/Gibraltar +01:00 Europe/Luxembourg +01:00 Europe/Madrid +01:00 Europe/Malta +01:00 Europe/Monaco +01:00 Europe/Oslo Arctic/Longyearbyen, Atlantic/Jan_Mayen +01:00 Europe/Paris +01:00 Europe/Prague Europe/Bratislava +01:00 Europe/Rome Europe/San_Marino, Europe/Vatican +01:00 Europe/Stockholm +01:00 Europe/Tirane +01:00 Europe/Vaduz +01:00 Europe/Vienna +01:00 Europe/Warsaw Poland +01:00 Europe/Zurich +01:00 MET +02:00 Africa/Blantyre +02:00 Africa/Bujumbura +02:00 Africa/Cairo Egypt +02:00 Africa/Gaborone +02:00 Africa/Harare +02:00 Africa/Johannesburg +02:00 Africa/Kigali +02:00 Africa/Lubumbashi +02:00 Africa/Lusaka +02:00 Africa/Maputo +02:00 Africa/Maseru +02:00 Africa/Mbabane +02:00 Africa/Tripoli Libya +02:00 Asia/Amman +02:00 Asia/Beirut +02:00 Asia/Damascus +02:00 Asia/Gaza +02:00 Asia/Jerusalem Asia/Tel_Aviv, Israel +02:00 Asia/Nicosia Europe/Nicosia +02:00 EET +02:00 Etc/GMT-2 +02:00 Europe/Athens +02:00 Europe/Bucharest +02:00 Europe/Chisinau Europe/Tiraspol +02:00 Europe/Helsinki Europe/Mariehamn +02:00 Europe/Istanbul Asia/Istanbul, Turkey +02:00 Europe/Kaliningrad +02:00 Europe/Kiev +02:00 Europe/Minsk +02:00 Europe/Riga +02:00 Europe/Simferopol +02:00 Europe/Sofia +02:00 Europe/Tallinn +02:00 Europe/Uzhgorod +02:00 Europe/Vilnius +02:00 Europe/Zaporozhye +03:00 Africa/Addis_Ababa +03:00 Africa/Asmara Africa/Asmera +03:00 Africa/Dar_es_Salaam +03:00 Africa/Djibouti +03:00 Africa/Kampala +03:00 Africa/Khartoum +03:00 Africa/Mogadishu +03:00 Africa/Nairobi +03:00 Antarctica/Syowa +03:00 Asia/Aden +03:00 Asia/Baghdad +03:00 Asia/Bahrain +03:00 Asia/Kuwait +03:00 Asia/Qatar +03:00 Asia/Riyadh +03:00 Etc/GMT-3 +03:00 Europe/Moscow W-SU +03:00 Europe/Samara +03:00 Europe/Volgograd +03:00 Indian/Antananarivo +03:00 Indian/Comoro +03:00 Indian/Mayotte +03:30 Asia/Tehran Iran +04:00 Asia/Baku +04:00 Asia/Dubai +04:00 Asia/Muscat +04:00 Asia/Tbilisi +04:00 Asia/Yerevan +04:00 Etc/GMT-4 +04:00 Indian/Mahe +04:00 Indian/Mauritius +04:00 Indian/Reunion +04:30 Asia/Kabul +05:00 Antarctica/Mawson +05:00 Asia/Aqtau +05:00 Asia/Aqtobe +05:00 Asia/Ashgabat Asia/Ashkhabad +05:00 Asia/Dushanbe +05:00 Asia/Karachi +05:00 Asia/Oral +05:00 Asia/Samarkand +05:00 Asia/Tashkent +05:00 Asia/Yekaterinburg +05:00 Etc/GMT-5 +05:00 Indian/Kerguelen +05:00 Indian/Maldives +05:30 Asia/Colombo +05:30 Asia/Kolkata Asia/Calcutta +05:45 Asia/Kathmandu Asia/Katmandu +06:00 Antarctica/Vostok +06:00 Asia/Almaty +06:00 Asia/Bishkek +06:00 Asia/Dhaka Asia/Dacca +06:00 Asia/Novokuznetsk +06:00 Asia/Novosibirsk +06:00 Asia/Omsk +06:00 Asia/Qyzylorda +06:00 Asia/Thimphu Asia/Thimbu +06:00 Etc/GMT-6 +06:00 Indian/Chagos +06:30 Asia/Rangoon +06:30 Indian/Cocos +07:00 Antarctica/Davis +07:00 Asia/Bangkok +07:00 Asia/Ho_Chi_Minh Asia/Saigon +07:00 Asia/Hovd +07:00 Asia/Jakarta +07:00 Asia/Krasnoyarsk +07:00 Asia/Phnom_Penh +07:00 Asia/Pontianak +07:00 Asia/Vientiane +07:00 Etc/GMT-7 +07:00 Indian/Christmas +08:00 Antarctica/Casey +08:00 Asia/Brunei +08:00 Asia/Choibalsan +08:00 Asia/Chongqing Asia/Chungking +08:00 Asia/Harbin +08:00 Asia/Hong_Kong Hongkong +08:00 Asia/Irkutsk +08:00 Asia/Kashgar +08:00 Asia/Kuala_Lumpur +08:00 Asia/Kuching +08:00 Asia/Macau Asia/Macao +08:00 Asia/Makassar Asia/Ujung_Pandang +08:00 Asia/Manila +08:00 Asia/Shanghai PRC +08:00 Asia/Singapore Singapore +08:00 Asia/Taipei ROC +08:00 Asia/Ulaanbaatar Asia/Ulan_Bator +08:00 Asia/Urumqi +08:00 Australia/Perth Australia/West +08:00 Etc/GMT-8 +08:45 Australia/Eucla +09:00 Asia/Dili +09:00 Asia/Jayapura +09:00 Asia/Pyongyang +09:00 Asia/Seoul ROK +09:00 Asia/Tokyo Japan +09:00 Asia/Yakutsk +09:00 Etc/GMT-9 +09:00 Pacific/Palau +09:30 Australia/Adelaide Australia/South +09:30 Australia/Broken_Hill Australia/Yancowinna +09:30 Australia/Darwin Australia/North +10:00 Antarctica/DumontDUrville +10:00 Asia/Sakhalin +10:00 Asia/Vladivostok +10:00 Australia/Brisbane Australia/Queensland +10:00 Australia/Currie +10:00 Australia/Hobart Australia/Tasmania +10:00 Australia/Lindeman +10:00 Australia/Melbourne Australia/Victoria +10:00 Australia/Sydney Australia/ACT, Australia/Canberra, Australia/NSW +10:00 Etc/GMT-10 +10:00 Pacific/Chuuk Pacific/Truk, Pacific/Yap +10:00 Pacific/Guam +10:00 Pacific/Port_Moresby +10:00 Pacific/Saipan +10:30 Australia/Lord_Howe Australia/LHI +11:00 Antarctica/Macquarie +11:00 Asia/Anadyr +11:00 Asia/Kamchatka +11:00 Asia/Magadan +11:00 Etc/GMT-11 +11:00 Pacific/Efate +11:00 Pacific/Guadalcanal +11:00 Pacific/Kosrae +11:00 Pacific/Noumea +11:00 Pacific/Pohnpei Pacific/Ponape +11:30 Pacific/Norfolk +12:00 Antarctica/McMurdo Antarctica/South_Pole +12:00 Etc/GMT-12 +12:00 Pacific/Auckland NZ +12:00 Pacific/Fiji +12:00 Pacific/Funafuti +12:00 Pacific/Kwajalein Kwajalein +12:00 Pacific/Majuro +12:00 Pacific/Nauru +12:00 Pacific/Tarawa +12:00 Pacific/Wake +12:00 Pacific/Wallis +12:45 Pacific/Chatham NZ-CHAT +13:00 Etc/GMT-13 +13:00 Pacific/Enderbury +13:00 Pacific/Tongatapu +14:00 Etc/GMT-14 +14:00 Pacific/Kiritimati","permalink":"http://www.humen1.com/2014/07/tz.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"nginx","slug":"nginx","permalink":"http://www.humen1.com/tags/nginx/"},{"name":"bigdata","slug":"bigdata","permalink":"http://www.humen1.com/tags/bigdata/"},{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://www.humen1.com/tags/elasticsearch/"},{"name":"logstash","slug":"logstash","permalink":"http://www.humen1.com/tags/logstash/"},{"name":"es","slug":"es","permalink":"http://www.humen1.com/tags/es/"},{"name":"log","slug":"log","permalink":"http://www.humen1.com/tags/log/"},{"name":"syslog-ng","slug":"syslog-ng","permalink":"http://www.humen1.com/tags/syslog-ng/"}],"title":"使用 Elasticsearch+logstash 存储获取实时日志【Cdn Realtime Analytics】","date":"2014/07/02","text":"安装的我就不写了。 主要说下方案 nginx 实时吐日志给syslog-ng via pipe syslog-ng 向logstash 推送日志 via internet udp logstash 把日志塞进elasticsearch 并index 发送方： nginx.conf [bash] # … log_format real_time ‘- $time_iso8601 $host $request_time $status $bytes_sent’; server { listen 80; server_name my_test_rt; access_log /dev/realtime.pipe real_time; location /{ proxy_pass http://backend.com; } } # … [/bash] syslog-ng.conf [bash] source s_pipe { pipe(“/dev/realtime.pipe”); }; destination d_udp { udp(“127.0.0.1” port(9999) template (“$MSG\\n”) ); }; log {source(s_pipe); destination(d_udp); }; [/bash] [bash] #创建一个管道： makefifo /dev/realtime.pipe #先启动syslog-ng #不然nginx启动时会卡住 service syslog-ng start service nginx start [/bash] 接收方： /etc/logstash/conf.d/rt.conf [bash] input { udp { port =&gt;9999 } } filter { grok { pattern =&gt; [“%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:host} %{IPORHOST:domain} %{NUMBER:request_time} %{NUMBER:status} %{NUMBER:bytes_sent}” ] } mutate { remove_field =&gt; [ “message”, “@version” ] } } output { elasticsearch { host =&gt; “127.0.0.1” flush_size =&gt; 1 index =&gt; “rt-%{+YYYY.MM.dd.HH.mm}” } } [/bash] 把logstash 和 elasticsearch 都启动 。整个体系就运转起来了","permalink":"http://www.humen1.com/2014/07/e4-bd-bf-e7-94-a8-elasticsearchlogstash-e5-ad-98-e5-82-a8-e8-8e-b7-e5-8f-96-e5-ae-9e-e6-97-b6-e6-97-a5-e5-bf-97-e3-80-90cdn-realtime-analytics-e3-80-91.html","photos":[]},{"tags":[{"name":"bigdata","slug":"bigdata","permalink":"http://www.humen1.com/tags/bigdata/"},{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://www.humen1.com/tags/elasticsearch/"},{"name":"kibana","slug":"kibana","permalink":"http://www.humen1.com/tags/kibana/"},{"name":"logstash","slug":"logstash","permalink":"http://www.humen1.com/tags/logstash/"}],"title":"Elasticsearch+logstash+kibana 初探","date":"2014/05/25","text":"花了一点时间搭了个初步的测试环境，分析的apache日志。 鉴于网络上的资料都比较过时了，所以在这里log一下。测试环境 centos6.3 64bit 安装： elasticsearch [goto] 123456# Download and install the Public Signing Key rpm --import http://packages.elasticsearch.org/GPG-KEY-elasticsearch # Add the following in your /etc/yum.repos.d/elasticsearch.repo \\[elasticsearch-1.1\\] name=Elasticsearch repository for 1.1.x packages baseurl=http://packages.elasticsearch.org/elasticsearch/1.1/centos gpgcheck=1 gpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch enabled=1 # Install yum install elasticsearch logstash [goto] 12345678910# Add the key rpm --import http://packages.elasticsearch.org/GPG-KEY-elasticsearch # Add the following in your /etc/yum.repos.d/logstash.repo [logstash-1.4] name=logstash repository for 1.4.x packages baseurl=http://packages.elasticsearch.org/logstash/1.4/centos gpgcheck=1 gpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch enabled=1 # Install logstash with: yum install logstash kibana [download] 这个不用安装，解压然后放在httpd服务的目录里可以直接用是个纯html5应用（就是个网站），而且装在本机不需要配置，如果elasticsearch不在本机请编辑目录下的config.js指定url/****/ 配置： elasticsearch 不需要配置，直接run起 /etc/init.d/elasticsearch start P.S. 这个软件很奇葩，默认装的路径在 /usr/share 下。 logstash 配置文件默认是没有的，配置目录在 /etc/logstash/conf.d/ 比如我在此目录下创建了一个配置文件 12# /etc/logstash/conf.d/seven.conf input &#123; file &#123; path =&gt; &quot;/var/log/httpd/access\\_json.log&quot; type =&gt; &quot;apache&quot; # This format tells logstash to expect &apos;logstash&apos; json events from the file. format =&gt; json\\_event &#125; &#125; output &#123; elasticsearch &#123; host =&gt; &quot;127.0.0.1&quot; &#125; 解释一下，input 这里设置的apache日志格式是个json格式，这就意味着apache的日志要进行改造，这个方式比用redis，grok等方案更简单，apache的配置见后文。 重点注意： 123456789# /etc/init.d/logstash ... name=logstash pidfile=&quot;/var/run/$name.pid&quot; # 请把原来用户和用户组logstash改成root，不然没有权限读apache日志 LS_USER=root LS_GROUP=root LS_HOME=/var/lib/logstash LS_HEAP_SIZE=&quot;500m&quot; ... kibana 这个也不用配置，直接可以跑 apache [goto] 123456789# Create a log format called &apos;logstash\\_json&apos; that emits, in json, the parts of an http # request I care about. For more details on the features of the &apos;LogFormat&apos; # directive, see the apache docs: # http://httpd.apache.org/docs/2.2/mod/mod\\_log\\_config.html#formats LogFormat &quot;&#123; \\&quot;@timestamp\\&quot;: \\&quot;%&#123;%Y-%m-%dT%H:%M:%S%z&#125;t\\&quot;, \\&quot;@fields\\&quot;: &#123; \\&quot;client\\&quot;: \\&quot;%a\\&quot;, \\&quot;duration_usec\\&quot;: %D, \\&quot;status\\&quot;: %s, \\&quot;request\\&quot;: \\&quot;%U%q\\&quot;, \\&quot;method\\&quot;: \\&quot;%m\\&quot;, \\&quot;referrer\\&quot;: \\&quot;%&#123;Referer&#125;i\\&quot; &#125; &#125;&quot; logstash_json LogFormat &quot;&#123; \\&quot;@timestamp\\&quot;: \\&quot;%&#123;%Y-%m-%dT%H:%M:%S%z&#125;t\\&quot;, \\&quot;@message\\&quot;: \\&quot;%r\\&quot;, \\&quot;@fields\\&quot;: &#123; \\&quot;user-agent\\&quot;: \\&quot;%&#123;User-agent&#125;i\\&quot;, \\&quot;client\\&quot;: \\&quot;%a\\&quot;, \\&quot;duration_usec\\&quot;: %D, \\&quot;duration_sec\\&quot;: %T, \\&quot;status\\&quot;: %s, \\&quot;request_path\\&quot;: \\&quot;%U\\&quot;, \\&quot;request\\&quot;: \\&quot;%U%q\\&quot;, \\&quot;method\\&quot;: \\&quot;%m\\&quot;, \\&quot;referrer\\&quot;: \\&quot;%&#123;Referer&#125;i\\&quot; &#125; &#125;&quot; logstash_ext_json # Write our &apos;logstash_json&apos; logs to logs/access_json.log CustomLog logs/access_json.log logstash_ext_json 提供的cookbook[goto]里还有让apache同时支持传统raw data和json日志的方法，我没试过。","permalink":"http://www.humen1.com/2014/05/elasticsearchlogstashkibana-e5-88-9d-e6-8e-a2.html","photos":[]},{"tags":[{"name":"vsftp","slug":"vsftp","permalink":"http://www.humen1.com/tags/vsftp/"}],"title":"Vsftpd出现 500 OOPS: Cannot Change Directory 的解决办法","date":"2014/05/22","text":"我是用了虚拟用户的方案，出现这个问题是因为SElinux 没有关闭。 关闭： [bash] $ setenforce 0 [/bash]","permalink":"http://www.humen1.com/2014/05/vsftpd-e5-87-ba-e7-8e-b0-500-oops-cannot-change-directory-e7-9a-84-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95.html","photos":[]},{"tags":[{"name":"bigdata","slug":"bigdata","permalink":"http://www.humen1.com/tags/bigdata/"},{"name":"whoosh","slug":"whoosh","permalink":"http://www.humen1.com/tags/whoosh/"}],"title":"Whoosh 开始","date":"2014/05/20","text":"Whoosh is a fast, featureful full-text indexing and searching library implemented in pure Python. whoosh 是一个纯python实现的快速，多功能的全文索引和搜索库。 Programmers can use it to easily add search functionality to their applications and websites. 程序员可以轻松的给应用和网站添加搜索功能。 Every part of how Whoosh works can be extended or replaced to meet your needs exactly. whoosh的每个部分都可以扩展或者替换以迎合你的需求。 Some of Whoosh’s features include: Pythonic API. Pure-Python. No compilation or binary packages needed, no mysterious crashes. Fielded indexing and search. Fast indexing and retrieval – faster than any other pure-Python search solution I know of. Pluggable scoring algorithm (including BM25F), text analysis, storage, posting format, etc. Powerful query language. Production-quality pure Python spell-checker (as far as I know, the only one). whoosh的一些功能包括： python化的API. 纯Python. 不需要编译或者二进制包,没有神秘的崩溃. 派出索引和搜索 快速索引和取回 -- 比我知道的任何一个纯python搜索方案都快 可插拔的评分算法 (包括 BM25F), 文本分析, 存储, 发帖格式, 等. 强大的查询语句. 产品级的纯python拼写检查 (我所知的最快的，没有之一).","permalink":"http://www.humen1.com/2014/05/whoosh-e5-bc-80-e5-a7-8b.html","photos":[]},{"tags":[{"name":"字体","slug":"字体","permalink":"http://www.humen1.com/tags/%E5%AD%97%E4%BD%93/"}],"title":"Easy Install Microsoft's Corefonts With RPM","date":"2014/04/21","text":"Easy Install Microsoft’s corefonts with RPM. 在centos上装windows 字体","permalink":"http://www.humen1.com/2014/04/easy-install-microsofts-corefonts-with-rpm.html","photos":[]},{"tags":[{"name":"brew","slug":"brew","permalink":"http://www.humen1.com/tags/brew/"}],"title":"通过Homebrew安装gcc","date":"2014/04/12","text":"这种方法比较简单，前提是mac上已经安装homebrew了，具体命令： brew tap homebrew/versions brew install gcc49","permalink":"http://www.humen1.com/2014/04/e9-80-9a-e8-bf-87homebrew-e5-ae-89-e8-a3-85gcc.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"}],"title":"JavaScript | MDN","date":"2014/03/31","text":"JavaScript | MDN.","permalink":"http://www.humen1.com/2014/03/javascript-mdn.html","photos":[]},{"tags":[],"title":"简明 Vim 练级攻略 | 酷 壳 - CoolShell.cn","date":"2014/03/28","text":"简明 Vim 练级攻略 | 酷 壳 - CoolShell.cn.","permalink":"http://www.humen1.com/2014/03/e7-ae-80-e6-98-8e-vim-e7-bb-83-e7-ba-a7-e6-94-bb-e7-95-a5-e9-85-b7-e5-a3-b3-coolshell-cn.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"},{"name":"epoll","slug":"epoll","permalink":"http://www.humen1.com/tags/epoll/"},{"name":"socket","slug":"socket","permalink":"http://www.humen1.com/tags/socket/"}],"title":"How to Use Linux Epoll With Python","date":"2014/03/23","text":"How To Use Linux epoll with Python.","permalink":"http://www.humen1.com/2014/03/how-to-use-linux-epoll-with-python.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"}],"title":"Python Timelib","date":"2014/03/19","text":"可以通过pip安装这个库 我是为了要使用和php中的 strtotime函数才用到的，很实用 获取上周的时间戳 [python] from timelib import strtotime from datetime import date if __name__==’__main__‘: print date.fromtimestamp(strtotime(‘-2 week Monday’)) [/python]","permalink":"http://www.humen1.com/2014/03/python-timelib.html","photos":[]},{"tags":[],"title":"Anycast","date":"2014/03/18","text":"是一种网络寻址和路由的策略，使得资料可以根据路由拓朴来决定送到“最近”或“最好”的目的地。 这个词汇是反应单播、广播和多播。 在单播中，在网络位址和网络节点中存在一种关系：每一个目的位址单独对应一个接收节点。 在广播和多播中，在网络位址和网络节点中存在一对多的关系：每一个目的位址对应一群接收可以复制资讯的节点。 在任播中，在网络位址和网络节点中也存在一对多的关系：每一个节点对应一群接收节点，但在任何给定时间，只有其中之一可以接收到传送端来的资讯。 在互联网中，任播通常是使用边界网关协议来实作。 在过去，任播适合无连线协议（通常建立在用户数据报协议）多于连线导向协议（如会记录状态的传输控制协议）。然而，也有很多情况是传输控制协议使用任播的，包含运载网络如Prolexic。 使用传输控制协议任播。 因此，任播通常用于提供高可靠性和负载平衡。 摘自 维基百科","permalink":"http://www.humen1.com/2014/03/anycast.html","photos":[]},{"tags":[{"name":"网页优化","slug":"网页优化","permalink":"http://www.humen1.com/tags/%E7%BD%91%E9%A1%B5%E4%BC%98%E5%8C%96/"}],"title":"WebPagetest 2.12 - WebPagetest Documentation","date":"2014/03/15","text":"WebPagetest 2.12 - WebPagetest Documentation.","permalink":"http://www.humen1.com/2014/03/webpagetest-2-12-webpagetest-documentation.html","photos":[]},{"tags":[{"name":"监控","slug":"监控","permalink":"http://www.humen1.com/tags/%E7%9B%91%E6%8E%A7/"}],"title":"Ganglia Monitoring System","date":"2014/03/15","text":"Ganglia Monitoring System.","permalink":"http://www.humen1.com/2014/03/ganglia-monitoring-system.html","photos":[]},{"tags":[{"name":"运维","slug":"运维","permalink":"http://www.humen1.com/tags/%E8%BF%90%E7%BB%B4/"},{"name":"ops","slug":"ops","permalink":"http://www.humen1.com/tags/ops/"},{"name":"自动化","slug":"自动化","permalink":"http://www.humen1.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"}],"title":"Chef - Code Can | Chef","date":"2014/03/15","text":"Chef - Code Can | Chef.","permalink":"http://www.humen1.com/2014/03/chef-code-can-chef.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"ssh","slug":"ssh","permalink":"http://www.humen1.com/tags/ssh/"}],"title":"Anyterm - Introduction","date":"2014/03/07","text":"Anyterm - Introduction.","permalink":"http://www.humen1.com/2014/03/anyterm-introduction.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"eclipse","slug":"eclipse","permalink":"http://www.humen1.com/tags/eclipse/"}],"title":"解决Ubuntu 13.10 Eclipse菜单不见鸟","date":"2014/03/05","text":"编辑此文件 /usr/share/applications/eclipse.desktop [bash] #change Exec=/home/seven/eclipse/eclipse #to Exec=env UBUNTU_MENUPROXY= /home/seven/eclipse/eclipse [/bash]","permalink":"http://www.humen1.com/2014/03/e8-a7-a3-e5-86-b3ubuntu-13-10-eclipse-e8-8f-9c-e5-8d-95-e4-b8-8d-e8-a7-81-e9-b8-9f.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"}],"title":"Supervisor: A Process Control System — Supervisor 3.1a1-Dev Documentation","date":"2014/03/05","text":"Supervisor: A Process Control System — supervisor 3.1a1-dev documentation.","permalink":"http://www.humen1.com/2014/03/supervisor-a-process-control-system-supervisor-3-1a1-dev-documentation.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"ATS","slug":"ATS","permalink":"http://www.humen1.com/tags/ATS/"}],"title":"TS","date":"2014/03/04","text":"[caption id=”attachment_750” align=”aligncenter” width=”640”] TS[/caption]","permalink":"http://www.humen1.com/2014/03/ts.html","photos":[]},{"tags":[{"name":"firefox","slug":"firefox","permalink":"http://www.humen1.com/tags/firefox/"},{"name":"mozilla","slug":"mozilla","permalink":"http://www.humen1.com/tags/mozilla/"}],"title":"Get Involved: Volunteer Opportunities at Mozilla — Mozilla","date":"2014/02/13","text":"Get Involved: Volunteer Opportunities at Mozilla — Mozilla.","permalink":"http://www.humen1.com/2014/02/get-involved-volunteer-opportunities-at-mozilla-mozilla.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"node","slug":"node","permalink":"http://www.humen1.com/tags/node/"}],"title":"在windows下搭建Yeoman前端工作流攻略 - Avictory21的专栏 - 博客频道 - CSDN.NET","date":"2014/02/11","text":"在windows下搭建Yeoman前端工作流攻略 - avictory21的专栏 - 博客频道 - CSDN.NET. 献给前端工程师","permalink":"http://www.humen1.com/2014/02/e5-9c-a8windows-e4-b8-8b-e6-90-ad-e5-bb-bayeoman-e5-89-8d-e7-ab-af-e5-b7-a5-e4-bd-9c-e6-b5-81-e6-94-bb-e7-95-a5-avictory21-e7-9a-84-e4-b8-93-e6-a0-8f-e5-8d-9a-e5-ae-a2-e9-a2-91-e9-81-93-csdn-n.html","photos":[]},{"tags":[{"name":"bios","slug":"bios","permalink":"http://www.humen1.com/tags/bios/"},{"name":"hp","slug":"hp","permalink":"http://www.humen1.com/tags/hp/"}],"title":"Pavilion Dv4-1103tx Bios刷黑屏后。。。","date":"2014/02/07","text":"网上找了很多，大致方向是对的 断电 然后win+b 不过找bios 文件确实。。。 官网上找的驱动都太新了！！ 好不容易淘到了可行的 30F7.BIN 下载解压到U盘（fat格式的空盘）去电池断电源，按住win+b ，插电源，开power，松开win+b。待机器自动断电后拔掉U盘，开机就好。","permalink":"http://www.humen1.com/2014/02/pavilion-dv4-1103tx-bios-e5-88-b7-e9-bb-91-e5-b1-8f-e5-90-8e-e3-80-82-e3-80-82-e3-80-82.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"apache","slug":"apache","permalink":"http://www.humen1.com/tags/apache/"},{"name":"web","slug":"web","permalink":"http://www.humen1.com/tags/web/"},{"name":"http","slug":"http","permalink":"http://www.humen1.com/tags/http/"}],"title":"AH01630: Client Denied by Server Configuration","date":"2014/01/26","text":"升级到apache2.4 配置语法也变了 Order Allow, Deny Allow from all 需要改为： Require all granted 这样问题就解决了","permalink":"http://www.humen1.com/2014/01/ah01630-client-denied-by-server-configuration.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"运维","slug":"运维","permalink":"http://www.humen1.com/tags/%E8%BF%90%E7%BB%B4/"},{"name":"nginx","slug":"nginx","permalink":"http://www.humen1.com/tags/nginx/"},{"name":"ssl","slug":"ssl","permalink":"http://www.humen1.com/tags/ssl/"}],"title":"Juho Mäkinens Blog » Optimize Nginx Ssl Termination Cpu Usage With Cipher Selection","date":"2014/01/22","text":"Juho Mäkinens blog » Optimize nginx ssl termination cpu usage with cipher selection. 用对算法很重要","permalink":"http://www.humen1.com/2014/01/juho-makinens-blog-optimize-nginx-ssl-termination-cpu-usage-with-cipher-selection.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"node","slug":"node","permalink":"http://www.humen1.com/tags/node/"}],"title":"About This Documentation Node.js v0.10.24 Manual & Documentation","date":"2014/01/18","text":"About this Documentation Node.js v0.10.24 Manual &amp; Documentation.","permalink":"http://www.humen1.com/2014/01/about-this-documentation-node-js-v0-10-24-manual-documentation.html","photos":[]},{"tags":[{"name":"appcleaner","slug":"appcleaner","permalink":"http://www.humen1.com/tags/appcleaner/"}],"title":"FreeMacSoft","date":"2014/01/16","text":"FreeMacSoft.","permalink":"http://www.humen1.com/2014/01/freemacsoft.html","photos":[]},{"tags":[{"name":"运维","slug":"运维","permalink":"http://www.humen1.com/tags/%E8%BF%90%E7%BB%B4/"},{"name":"服务器","slug":"服务器","permalink":"http://www.humen1.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"title":"6.6. Non-Uniform Memory Access (NUMA) Machines","date":"2014/01/14","text":"6.6. Non-Uniform Memory Access (NUMA) Machines. 再追一篇 解释NUMA的文章，硬件的东西不能钻太深啊，要命。","permalink":"http://www.humen1.com/2014/01/6-6-non-uniform-memory-access-numa-machines.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"mongo","slug":"mongo","permalink":"http://www.humen1.com/tags/mongo/"},{"name":"运维","slug":"运维","permalink":"http://www.humen1.com/tags/%E8%BF%90%E7%BB%B4/"}],"title":"记一次MongoDB性能问题 | 火丁笔记","date":"2014/01/14","text":"记一次MongoDB性能问题 | 火丁笔记. 网上搜罗的一篇文章 理论上现在用的多路CPU服务器都有这个问题，要注意！！","permalink":"http://www.humen1.com/2014/01/e8-ae-b0-e4-b8-80-e6-ac-a1mongodb-e6-80-a7-e8-83-bd-e9-97-ae-e9-a2-98-e7-81-ab-e4-b8-81-e7-ac-94-e8-ae-b0.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"google","slug":"google","permalink":"http://www.humen1.com/tags/google/"},{"name":"framework","slug":"framework","permalink":"http://www.humen1.com/tags/framework/"},{"name":"web","slug":"web","permalink":"http://www.humen1.com/tags/web/"},{"name":"前端","slug":"前端","permalink":"http://www.humen1.com/tags/%E5%89%8D%E7%AB%AF/"}],"title":"AngularJS - 维基百科，自由的百科全书","date":"2014/01/07","text":"AngularJS - 维基百科，自由的百科全书.","permalink":"http://www.humen1.com/2014/01/angularjs-e7-bb-b4-e5-9f-ba-e7-99-be-e7-a7-91-ef-bc-8c-e8-87-aa-e7-94-b1-e7-9a-84-e7-99-be-e7-a7-91-e5-85-a8-e4-b9-a6.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"}],"title":"PeerJS - Simple Peer-to-Peer With WebRTC","date":"2014/01/07","text":"PeerJS - Simple peer-to-peer with WebRTC.","permalink":"http://www.humen1.com/2014/01/peerjs-simple-peer-to-peer-with-webrtc.html","photos":[]},{"tags":[],"title":"自建一个本地Dns归属地查询系统：）","date":"2014/01/06","text":"1.首先要搞个dns 服务器，自己用bind架一个就好，2个关键性配置文件如下 /opt/bind/etc/named.conf [text] options { listen-on port 53 { localhost; }; allow-query { any; }; directory “/opt/bind/var”; recursion yes; allow-transfer { none; }; }; logging { channel default_debug { file “/opt/bind/var/named.run”; severity dynamic; }; channel query_log { file “/opt/bind/var/query.log”; severity debug; print-time yes; print-category yes; }; category queries{ query_log; }; }; zone “.” IN { type master; file “anyhosts”; }; key “rndc-key” { algorithm hmac-md5; secret “tLUFCQE/OZkFMPo2NMERMA==”; }; controls { inet 127.0.0.1 port 953 allow { 127.0.0.1; } keys { “rndc-key”; }; }; [/text] /opt/bind/var/anyhosts [text] $TTL 60 $ORIGIN . @ IN SOA ns1. root.localhost. ( 20051213; 7000; 3000; 15000; 86400; ); @ 86400 IN NS ns1 ns1 86400 IN A 127.0.0.1 * IN A xxx.xxx.xxx.xxx [/text] 注意：xxx.xxx.xxx.xxx是这台ns服务器的外网ip 2. 需要一个顶级域名，这里用我自己的域名代替，我的域名为 humen1.net. 去域名提供商那里解析以下域名 记录名——–记录类型——–记录值 ldns ———NS ——–ns1.humen1.net. ns1 ———A ——–xxx.xxx.xxx.xxx 3. 配置apache vhosts 配置如下 [bash] &lt;VirtualHost :80&gt; ServerName .ldns.humen1.net DocumentRoot /ldns DirectoryIndex index.php index.html index.htm [/bash] 4. 写一个php脚本在 /ldns 目录下 index.php [php] &lt;?php $str=array(); exec(“tail -n 50 /opt/bind/var/query.log”,$str); $str=implode(“\\n\\n”,$str); $host= $_SERVER[‘HTTP_HOST’]; $pattern=’/(client\\s(?P\\d\\.\\d\\.\\d\\.\\d)#\\d*\\s\\(‘.$host.’\\):)/‘; $jsonp=$_GET[“jsonpcallback”]; if (preg_match($pattern,$str,$ma)) { echo $jsonp.’({“error”:”0”,”ip”:”‘.$ma[‘ip’].’”})’; print $ips=file_get_contents(“http://ip.taobao.com/service/getIpInfo.php?ip=&quot;.$ma\\[&#39;ip&#39;\\]); }else{ echo $jsonp. ‘({“error”:”1”)}’; } ?&gt; [/php] 5. 使用 curl http://xxxyyyzzz.ldns.humen1.net 注意 xxxyyyzzz是随机数保证不要重复哦~~","permalink":"http://www.humen1.com/2014/01/e8-87-aa-e5-bb-ba-e4-b8-80-e4-b8-aa-e6-9c-ac-e5-9c-b0dns-e5-bd-92-e5-b1-9e-e5-9c-b0-e6-9f-a5-e8-af-a2-e7-b3-bb-e7-bb-9f-ef-bc-9a-ef-bc-89.html","photos":[]},{"tags":[],"title":"WebRTC 网页实时通信 - 维基百科，自由的百科全书","date":"2014/01/06","text":"WebRTC - 维基百科，自由的百科全书.","permalink":"http://www.humen1.com/2014/01/webrtc-e7-bd-91-e9-a1-b5-e5-ae-9e-e6-97-b6-e9-80-9a-e4-bf-a1-e7-bb-b4-e5-9f-ba-e7-99-be-e7-a7-91-ef-bc-8c-e8-87-aa-e7-94-b1-e7-9a-84-e7-99-be-e7-a7-91-e5-85-a8-e4-b9-a6.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"}],"title":"PeerCDN","date":"2014/01/06","text":"PeerCDN. 浏览器 p2p CDN","permalink":"http://www.humen1.com/2014/01/peercdn.html","photos":[]},{"tags":[{"name":"network","slug":"network","permalink":"http://www.humen1.com/tags/network/"}],"title":"Netstat统计tcp状态","date":"2014/01/06","text":"[bash]netstat -ant | awk ‘/^tcp/{++State[$NF]} END {for (key in State) print key,State[key]}’[/bash]","permalink":"http://www.humen1.com/2014/01/netstat-e7-bb-9f-e8-ae-a1tcp-e7-8a-b6-e6-80-81.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"}],"title":"Centos下安装pycurl | 狂人居","date":"2013/12/24","text":"Centos下安装pycurl | 狂人居.","permalink":"http://www.humen1.com/2013/12/centos-e4-b8-8b-e5-ae-89-e8-a3-85pycurl-e7-8b-82-e4-ba-ba-e5-b1-85.html","photos":[]},{"tags":[{"name":"lvs","slug":"lvs","permalink":"http://www.humen1.com/tags/lvs/"}],"title":"Lvs-Tun 配置Memo","date":"2013/12/24","text":"director:192.168.8.220, vip:192.168.8.224 realserver:192.168.8.221 director.sh [bash] #!/bin/sh VIP=192.168.8.224 RIP=192.168.8.221 modprobe ip_vs modprobe ipip /etc/init.d/iptables stop ifconfig eth0:0 down ifconfig eth0:0 $VIP broadcast $VIP netmask 255.255.255.255 up route add -host $VIP dev eth0:0 ipvsadm -A -t $VIP:80 -s rr ipvsadm -a -t $VIP:80 -r $RIP -i ipvsadm [/bash] realserver.sh [bash] #!/bin/sh VIP=192.168.8.224 RIP=192.168.8.221 modprobe ipip /etc/init.d/iptables stop ifconfig tunl0 down ifconfig tunl0 $VIP broadcast $VIP netmask 255.255.255.255 up route add -host $VIP dev tunl0 echo 0 &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter echo 0 &gt; /proc/sys/net/ipv4/conf/all/rp_filter arptables -A IN -j DROP -d $VIP arptables -A OUT -j DROP -d $VIP /etc/init.d/arptables_jf save [/bash]","permalink":"http://www.humen1.com/2013/12/lvs-tun-e9-85-8d-e7-bd-aememo.html","photos":[]},{"tags":[{"name":"ssh","slug":"ssh","permalink":"http://www.humen1.com/tags/ssh/"}],"title":"Ubuntu 中把Ppk转换成 Openssh Key","date":"2013/12/17","text":"先装putty tool [sh] sudo apt-get install putty-tools [/sh] 然后转换 [sh] #private key puttygen /path/to/puttykey.ppk -O private-openssh -o id_rsa #public key puttygen /path/to/puttykey.ppk -O public-openssh -o id_rsa.pub [/sh]","permalink":"http://www.humen1.com/2013/12/ubuntu-e4-b8-ad-e6-8a-8appk-e8-bd-ac-e6-8d-a2-e6-88-90-openssh-key.html","photos":[]},{"tags":[{"name":"产品","slug":"产品","permalink":"http://www.humen1.com/tags/%E4%BA%A7%E5%93%81/"}],"title":"细说产品的“魅力属性” - 交互设计 | TaoBaoUED","date":"2013/12/11","text":"细说产品的“魅力属性” - 交互设计 | TaoBaoUED.","permalink":"http://www.humen1.com/2013/12/e7-bb-86-e8-af-b4-e4-ba-a7-e5-93-81-e7-9a-84-e9-ad-85-e5-8a-9b-e5-b1-9e-e6-80-a7-e4-ba-a4-e4-ba-92-e8-ae-be-e8-ae-a1-taobaoued.html","photos":[]},{"tags":[{"name":"监控","slug":"监控","permalink":"http://www.humen1.com/tags/%E7%9B%91%E6%8E%A7/"}],"title":"Smokeping 发送告警邮件","date":"2013/11/27","text":"smokeping 默认用sendmail发邮件，这样不好。 改了一下源码 这样可以使用 我QQ的smtp server来发告警邮件了 首先需要安装 Authen::SASL 模块（auth 需要用的） 我用CPAN装的，不细说了 修改 smokeping/lib/Smokeping.pm [perl] #头上加 use Authen::SASL; #定位到sendmail函数，改成下面这样 sub sendmail ($$$){ my $from = shift; my $to = shift; $to = $1 if $to =~ /&lt;(.?)&gt;/; my $body = shift; if ($cfg-&gt;{General}{mailhost} and my $smtp = Net::SMTP-&gt;new([split /\\s,\\s/, $cfg-&gt;{General}{mailhost}],Timeout=&gt;5) ){ $smtp-&gt;auth(split(/\\s,\\s/, $cfg-&gt;{General}{mailusr}),split(/\\s,\\s/, $cfg-&gt;{General}{mailpwd})); $smtp-&gt;mail($from); $smtp-&gt;to(split(/\\s,\\s*/, $to)); $smtp-&gt;data(); $smtp-&gt;datasend($body); $smtp-&gt;dataend(); $smtp-&gt;quit; } elsif ($cfg-&gt;{General}{sendmail} or -x “/usr/lib/sendmail”){ open (M, “|-“) || exec (($cfg-&gt;{General}{sendmail} || “/usr/lib/sendmail”),”-f”,$from,$to); print M $body; close M; } else { warn “ERROR: not sending mail to $to, as all methodes failed\\n”; } } #找到 ‘_vars =&gt;’ ,把 mailusr mailpwd 加进去。不然不能启动哦！General configuration values valid for the whole SmokePing setup. DOC _vars =&gt; [ qw(owner imgcache imgurl datadir dyndir pagedir piddir sendmail offset smokemail cgiurl mailhost mailusr mailpwd snpphost contact display_name syslogfacility syslogpriority concurrentprobes changeprocessnames tmail changecgiprogramname linkstyle precreateperms ) ], [/perl] 然后修改配置文件 /etc/config [perl] mailhost = smtp.qq.com mailusr = noreply@qq.com mailpwd = xxxxxxxxx [/perl]","permalink":"http://www.humen1.com/2013/11/smokeping-e5-8f-91-e9-80-81-e5-91-8a-e8-ad-a6-e9-82-ae-e4-bb-b6.html","photos":[]},{"tags":[],"title":"Twitter It!","date":"2013/10/07","text":"这两天在研究twitter，赶脚有点晚：）","permalink":"http://www.humen1.com/2013/10/twitter-it.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"}],"title":"backbone.js","date":"2013/09/24","text":"","permalink":"http://www.humen1.com/2013/09/backbone-js.html","photos":[]},{"tags":[{"name":"TCP","slug":"TCP","permalink":"http://www.humen1.com/tags/TCP/"}],"title":"AIMD","date":"2013/09/11","text":"Additive Increase Multiplicative Decrease: 当TCP发送方感受到端到端路径无拥塞时就线性的增加其发送速度，当察觉到路径拥塞时就乘性减小其发送速度。 TCP拥塞控制协议的线性增长阶段被称为避免拥塞。 当TCP发送端收到ACK，并且没有检测到丢包事件时，拥塞窗口加1；当TCP发送端检测到丢包事件后，拥塞窗口除以2。 [cpp] While(Sending_Not_Finish){ if(Not_Loss_Packet){ CongWin++; }else CongWin=[CongWin/2]; //[]的意思是取整 } [/cpp]","permalink":"http://www.humen1.com/2013/09/aimd.html","photos":[]},{"tags":[{"name":"TCP","slug":"TCP","permalink":"http://www.humen1.com/tags/TCP/"}],"title":"TCP 看图说话","date":"2013/09/11","text":"","permalink":"http://www.humen1.com/2013/09/tcp-e7-9c-8b-e5-9b-be-e8-af-b4-e8-af-9d.html","photos":[]},{"tags":[{"name":"thunderbird","slug":"thunderbird","permalink":"http://www.humen1.com/tags/thunderbird/"}],"title":"解决Thunderbird不自动接收子目录的问题","date":"2013/09/11","text":"菜单路径 编辑-》首选项-》高级-》常规-》配置编辑器 搜索 mail.server.default.check_all_folders_for_new 把值改成true","permalink":"http://www.humen1.com/2013/09/e8-a7-a3-e5-86-b3thunderbird-e4-b8-8d-e8-87-aa-e5-8a-a8-e6-8e-a5-e6-94-b6-e5-ad-90-e7-9b-ae-e5-bd-95-e7-9a-84-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"},{"name":"rest","slug":"rest","permalink":"http://www.humen1.com/tags/rest/"}],"title":"Slim Framework","date":"2013/07/30","text":"微型Restful框架 传送门》》》","permalink":"http://www.humen1.com/2013/07/slim-framework.html","photos":[]},{"tags":[{"name":"虚拟化","slug":"虚拟化","permalink":"http://www.humen1.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"}],"title":"LXC","date":"2013/07/20","text":"LXC：Linux 容器工具 容器可以提供轻量级的虚拟化，以便隔离进程和资源，而且不需要提供指令解释机制以及全虚拟化的其他复杂性。本文循序渐进地介绍容器工具 Linux® Containers（LXC）。作者在文中演示如何设置和使用它们。","permalink":"http://www.humen1.com/2013/07/lxc.html","photos":[]},{"tags":[{"name":"osx","slug":"osx","permalink":"http://www.humen1.com/tags/osx/"},{"name":"apache","slug":"apache","permalink":"http://www.humen1.com/tags/apache/"}],"title":"OS X 下 Apache 报403","date":"2013/07/15","text":"错误如下： You don’t have permission to access / … 我启用了 http-vhosts.conf DocumentRoot 设在了我的home目录里具体目录为 /User/seven/www， 属主是seven这个用户 我发现os x apache 的用户是 _www 但是系统里没有这个用户的信息，一番research后找到了解决方案。 到/etc/apache2/users 下创建文件 Seven.conf [text] &lt;Directory “/Users/seven/www/“&gt; Options Indexes MultiViews AllowOverride All Order allow,deny Allow from all [/text] 重启apache就OK了 [bash] apachectl restart [/bash]","permalink":"http://www.humen1.com/2013/07/os-x-e4-b8-8b-apache-e6-8a-a5403.html","photos":[]},{"tags":[{"name":"微信","slug":"微信","permalink":"http://www.humen1.com/tags/%E5%BE%AE%E4%BF%A1/"}],"title":"微信我吧～","date":"2013/07/08","text":"扫一扫","permalink":"http://www.humen1.com/2013/07/e5-be-ae-e4-bf-a1-e6-88-91-e5-90-a7-ef-bd-9e.html","photos":[]},{"tags":[{"name":"css","slug":"css","permalink":"http://www.humen1.com/tags/css/"}],"title":"css3pie.com","date":"2013/06/27","text":"这个组件可以解决圆角和阴影在各浏览器中的兼容问题 猛击这里","permalink":"http://www.humen1.com/2013/06/css3pie-com.html","photos":[]},{"tags":[{"name":"TFS","slug":"TFS","permalink":"http://www.humen1.com/tags/TFS/"},{"name":"文件系统","slug":"文件系统","permalink":"http://www.humen1.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"}],"title":"TFS 介绍","date":"2013/06/18","text":"简介TFS（Taobao !FileSystem）是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统，主要针对海量的非结构化数据，它构筑在普通的Linux机器 集群上，可为外部提供高可靠和高并发的存储访问。TFS为淘宝提供海量小文件存储，通常文件大小不超过1M，满足了淘宝对小文件存储的需求，被广泛地应用 在淘宝各项应用中。它采用了HA架构和平滑扩容，保证了整个文件系统的可用性和扩展性。同时扁平化的数据组织结构，可将文件名映射到文件的物理地址，简化 了文件的访问流程，一定程度上为TFS提供了良好的读写性能。 TFS的总体结构一个TFS集群由两个!NameServer节点（一主一备）和多个!DataServer节点组成。这些服务程序都是作为一个用户级的程序运行在普通Linux机器上的。 在TFS中，将大量的小文件(实际数据文件)合并成为一个大文件，这个大文件称为块(Block), 每个Block拥有在集群内唯一的编号(Block Id), Block Id在!NameServer在创建Block的时候分配, !NameServer维护block与!DataServer的关系。Block中的实际数据都存储在!DataServer上。而一 台!DataServer服务器一般会有多个独立!DataServer进程存在，每个进程负责管理一个挂载点，这个挂载点一般是一个独立磁盘上的文件目 录，以降低单个磁盘损坏带来的影响。 !NameServer主要功能是: 管理维护Block和!DataServer相关信息,包括!DataServer加入，退出, 心跳信息, block和!DataServer的对应关系建立，解除。正常情况下，一个块会在!DataServer上存在， 主!NameServer负责Block的创建，删除，复制，均衡，整理， !NameServer不负责实际数据的读写，实际数据的读写由!DataServer完成。 !DataServer主要功能是: 负责实际数据的存储和读写。 同时为了考虑容灾，!NameServer采用了HA结构，即两台机器互为热备，同时运行，一台为主，一台为备，主机绑定到对外vip，提供服务；当主机 器宕机后，迅速将vip绑定至备份!NameServer，将其切换为主机，对外提供服务。图中的HeartAgent就完成了此功能。 TFS的块大小可以通过配置项来决定，通常使用的块大小为64M。TFS的设计目标是海量小文件的存储，所以每个块中会存储许多不同的小文 件。!DataServer进程会给Block中的每个文件分配一个ID(File ID，该ID在每个Block中唯一)，并将每个文件在Block中的信息存放在和Block对应的Index文件中。这个Index文件一般都会全部 load在内存，除非出现!DataServer服务器内存和集群中所存放文件平均大小不匹配的情况。 另外，还可以部署一个对等的TFS集群，作为当前集群的辅集群。辅集群不提供来自应用的写入，只接受来自主集群的写入。当前主集群的每个数据变更操作都会重放至辅集群。辅集群也可以提供对外的读，并且在主集群出现故障的时候，可以接管主集群的工作。 平滑扩容原有TFS集群运行一定时间后，集群容量不足，此时需要对TFS集群扩容。由于DataServer与NameServer之间使用心跳机制通信，如果系 统扩容，只需要将相应数量的新!DataServer服务器部署好应用程序后启动即可。这些!DataServer服务器会向!NameServer进行 心跳汇报。!NameServer会根据!DataServer容量的比率和!DataServer的负载决定新数据写往哪台!DataServer的服 务器。根据写入策略，容量较小，负载较轻的服务器新数据写入的概率会比较高。同时，在集群负载比较轻的时候，!NameServer会 对!DataServer上的Block进行均衡，使所有!DataServer的容量尽早达到均衡。 进行均衡计划时，首先计算每台机器应拥有的blocks平均数量，然后将机器划分为两堆，一堆是超过平均数量的，作为移动源；一类是低于平均数量的，作为移动目的。 移动目的的选择：首先一个block的移动的源和目的，应该保持在同一网段内，也就是要与另外的block不同网段；另外，在作为目的的一定机器内，优先选择同机器的源到目的之间移动，也就是同台!DataServer服务器中的不同!DataServer进程。 当有服务器故障或者下线退出时（单个集群内的不同网段机器不能同时退出），不影响TFS的服务。此时!NameServer会检测到备份数减少的Block，对这些Block重新进行数据复制。 在创建复制计划时，一次要复制多个block, 每个block的复制源和目的都要尽可能的不同，并且保证每个block在不同的子网段内。因此采用轮换选择(roundrobin)算法，并结合加权平均。 由于DataServer之间的通信是主要发生在数据写入转发的时候和数据复制的时候，集群扩容基本没有影响。假设一个Block为64M，数量级为 1PB。那么NameServer上会有 1 * 1024 * 1024 * 1024 / 64 = 16.7M个block。假设每个Block的元数据大小为0.1K，则占用内存不到2G。 存储机制在TFS中，将大量的小文件(实际用户文件)合并成为一个大文件，这个大文件称为块(Block)。TFS以Block的方式组织文件的存储。每一个 Block在整个集群内拥有唯一的编号，这个编号是由NameServer进行分配的，而DataServer上实际存储了该Block。 在!NameServer节点中存储了所有的Block的信息，一个Block存储于多个!DataServer中以保证数据的冗余。对于数据读写请求， 均先由!NameServer选择合适的!DataServer节点返回给客户端，再在对应的!DataServer节点上进行数据操 作。!NameServer需要维护Block信息列表，以及Block与!DataServer之间的映射关系，其存储的元数据结构如下： 在!DataServer节点上，在挂载目录上会有很多物理块，物理块以文件的形式存在磁盘上，并在!DataServer部署前预先分配，以保证后续的 访问速度和减少碎片产生。为了满足这个特性，!DataServer现一般在EXT4文件系统上运行。物理块分为主块和扩展块，一般主块的大小会远大于扩 展块，使用扩展块是为了满足文件更新操作时文件大小的变化。每个Block在文件系统上以“主块+扩展块”的方式存储。每一个Block可能对应于多个物 理块，其中包括一个主块，多个扩展块。 在DataServer端，每个Block可能会有多个实际的物理文件组成：一个主Physical Block文件，N个扩展Physical Block文件和一个与该Block对应的索引文件。Block中的每个小文件会用一个block内唯一的fileid来标识。!DataServer会 在启动的时候把自身所拥有的Block和对应的Index加载进来。 容错机制 集群容错 TFS可以配置主辅集群，一般主辅集群会存放在两个不同的机房。主集群提供所有功能，辅集群只提供读。主集群会把所有操作重放到辅集群。这样既提供了负载均衡，又可以在主集群机房出现异常的情况不会中断服务或者丢失数据。 !NameServer容错 Namserver主要管理了!DataServer和Block之间的关系。如每个!DataServer拥有哪些Block，每个Block存放在哪 些!DataServer上等。同时，!NameServer采用了HA结构，一主一备，主NameServer上的操作会重放至备 NameServer。如果主NameServer出现问题，可以实时切换到备NameServer。 另外!NameServer和!DataServer之间也会有定时的heartbeat，!DataServer会把自己拥有的Block发送给!NameServer。!NameServer会根据这些信息重建!DataServer和Block的关系。 !DataServer容错 TFS采用Block存储多份的方式来实现!DataServer的容错。每一个Block会在TFS中存在多份，一般为3份，并且分布在不同网段的不 同!DataServer上。对于每一个写入请求，必须在所有的Block写入成功才算成功。当出现磁盘损坏!DataServer宕机的时候，TFS启 动复制流程，把备份数未达到最小备份数的Block尽快复制到其他DataServer上去。 TFS对每一个文件会记录校验crc，当客户端发现crc和文件内容不匹配时，会自动切换到一个好的block上读取。此后客户端将会实现自动修复单个文 件损坏的情况。 并发机制对于同一个文件来说，多个用户可以并发读。 现有TFS并不支持并发写一个文件。一个文件只会有一个用户在写。这在TFS的设计里面对应着是一个block同时只能有一个写或者更新操作。 TFS文件名的结构TFS的文件名由块号和文件号通过某种对应关系组成，最大长度为18字节。文件名固定以T开始，第二字节为该集群的编号(可以在配置项中指定，取值范围 1~9)。余下的字节由Block ID和File ID通过一定的编码方式得到。文件名由客户端程序进行编码和解码，它映射方式如下图： TFS客户程序在读文件的时候通过将文件名转换为BlockID和FileID信息，然后可以在!NameServer取得该块所 在!DataServer信息（如果客户端有该Block与!DataServere的缓存，则直接从缓存中取），然后与!DataServer进行读取 操作。 TFS性能数据 软件环境描述 【测试机软件情况描述】 (1) Red Hat Enterprise Linux AS release 4 (Nahant Update 8) (2) gcc (GCC) 3.4.6 20060404 (Red Hat 3.4.6-11) (3) 部署了TFS客户端程序 【服务器软件情况描述】 (1) Red Hat Enterprise Linux Server release 5.4 (Tikanga) (2) gcc (GCC) 3.4.6 20060404 (Red Hat 3.4.6-9) (3) 部署了2台!DataServer程序。 【服务器软件情况描述】 (1) Red Hat Enterprise Linux Server release 5.4 (Tikanga) (2) gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-46) (3) 部署了2台!NameServer（HA）程序。 硬件环境描述 【测试机硬件情况描述】 (1) 一枚八核Intel(R) Xeon(R) CPU E5520 @ 2.27GHz (2) 内存总数8299424 kB 【服务器硬件情况描述】cpu/memory等 (1) 一枚八核Intel(R) Xeon(R) CPU E5520 @ 2.27GHz (2) 内存总数8165616 kB 随机读取1K50K大小的文件性能 Read的TPS随着线程数的增加而增加，增长逐渐趋缓，到90线程的时候达到第一个高峰，此时再增加读线程，则TPS不再稳定增长。 随机写入1K50K大小的文件 Write的TPS在线程数60左右达到高峰，此时再增加写入线程，TPS不再稳定增长。 在不同线程写压力下的读文件性能 可以看出随着写压力的增加，读文件的TPS会大幅下滑。当写压力达到一定程度时读文件TPS趋缓。 同时，对平均大小为20K的文件进行了测试，测试中读:写：更新:删除操作的比率为100：18：1：1时，在!DataServer服务器磁盘util访问达到80%以上时，响应时间如下： TYPE SUCCCOUNT FAILCOUNT AVG(us) MIN(us) MAX(us) read 100000 0 20886 925 1170418 write 18000 0 17192 2495 1660686 update 1000 0 48489 5755 1205119 delete 1000 0 14221 382 591651 TYPE：操作类型 SUCCCOUNT：成功个数 FAILCOUNT：失败个数 AVG：平均响应时间 MIN：最短响应时间 MAX: 最大响应时间","permalink":"http://www.humen1.com/2013/06/tfs-e4-bb-8b-e7-bb-8d.html","photos":[]},{"tags":[{"name":"openstack","slug":"openstack","permalink":"http://www.humen1.com/tags/openstack/"},{"name":"云","slug":"云","permalink":"http://www.humen1.com/tags/%E4%BA%91/"}],"title":"Openstack","date":"2013/06/18","text":"http://www.openstack.org/ 收藏","permalink":"http://www.humen1.com/2013/06/openstack.html","photos":[]},{"tags":[],"title":"自定义排序","date":"2013/06/04","text":"[code language=”php”] function microtime_float() { list ( $usec, $sec ) = explode ( “ “, microtime () ); return (( float ) $usec + ( float ) $sec); } function cmp($a, $b) { if ($a == $b) { return 0; } return ($a &lt; $b) ? - 1 : 1; } /** * **** */ $time_start = microtime_float (); $ss = array (); for($j = 0; $j &lt; 3000; ++ $j) { $n = $j + rand ( 0, 999999 ) / 0.000001; array_push ( $ss, $n ); } usort ( $ss, “cmp” ); $tim = microtime_float () - $time_start; print_r ( $ss ); echo “Did nothing in “ . sprintf ( “%.2f”, $tim ) . “ seconds\\n”; [/code]","permalink":"http://www.humen1.com/2013/06/e8-87-aa-e5-ae-9a-e4-b9-89-e6-8e-92-e5-ba-8f.html","photos":[]},{"tags":[{"name":"小窍门","slug":"小窍门","permalink":"http://www.humen1.com/tags/%E5%B0%8F%E7%AA%8D%E9%97%A8/"}],"title":"Synergy  让不同电脑不同系统使用同一套键鼠","date":"2013/05/20","text":"synergy 是一个键盘鼠标共享软件，通过网络让不同主机（跨平台， linux / win / mac）共享一套键盘鼠标。它还是免费的！ 马上去下载","permalink":"http://www.humen1.com/2013/05/synergy-e8-ae-a9-e4-b8-8d-e5-90-8c-e7-94-b5-e8-84-91-e4-b8-8d-e5-90-8c-e7-b3-bb-e7-bb-9f-e4-bd-bf-e7-94-a8-e5-90-8c-e4-b8-80-e5-a5-97-e9-94-ae-e9-bc-a0.html","photos":[]},{"tags":[{"name":"squid","slug":"squid","permalink":"http://www.humen1.com/tags/squid/"}],"title":"Squid Request Status ","date":"2013/05/04","text":"TCP_HIT A valid copy of the requested object was in the cache. TCP_MISS The requested object was not in the cache. TCP_REFRESH_HIT The requested object was cached but STALE. The IMS query for the object resulted in “304 not modified”. TCP_REF_FAIL_HIT The requested object was cached but STALE. The IMS query failed and the stale object was delivered. TCP_REFRESH_MISS The requested object was cached but STALE. The IMS query returned the new content. TCP_CLIENT_REFRESH_MISS The client issued a “no-cache” pragma, or some analogous cache control command along with the request. Thus, the cache has to refetch the object. TCP_IMS_HIT The client issued an IMS request for an object which was in the cache and fresh. TCP_SWAPFAIL_MISS The object was believed to be in the cache, but could not be accessed. TCP_NEGATIVE_HIT Request for a negatively cached object, e.g. “404 not found”, for which the cache believes to know that it is inaccessible. Also refer to the explainations for negative_ttl in your squid.conf file. TCP_MEM_HIT A valid copy of the requested object was in the cache and it was in memory, thus avoiding disk accesses. TCP_DENIED Access was denied for this request. TCP_OFFLINE_HIT The requested object was retrieved from the cache during offline mode. The offline mode never validates any object, see offline_mode in squid.conf file. UDP_HIT A valid copy of the requested object was in the cache. UDP_MISS The requested object is not in this cache. UDP_DENIED Access was denied for this request. UDP_INVALID An invalid request was received. UDP_MISS_NOFETCH During “-Y” startup, or during frequent failures, a cache in hit only mode will return either UDP_HIT or this code. Neighbours will thus only fetch hits. NONE Seen with errors and cachemgr requests. The following codes are no longer available in Squid-2: ERR_* Errors are now contained in the status code. TCP_CLIENT_REFRESH See: TCP_CLIENT_REFRESH_MISS. TCP_SWAPFAIL See: TCP_SWAPFAIL_MISS. TCP_IMS_MISS Deleted, TCP_IMS_HIT used instead. UDP_HIT_OBJ Hit objects are no longer available. UDP_RELOADING See: UDP_MISS_NOFETCH.","permalink":"http://www.humen1.com/2013/05/squid-request-status.html","photos":[]},{"tags":[{"name":"squid","slug":"squid","permalink":"http://www.humen1.com/tags/squid/"}],"title":"Squid Hierarchy Codes","date":"2013/05/04","text":"NONE For TCP HIT, TCP failures, cachemgr requests and all UDP requests, there is no hierarchy information. DIRECT The object was fetched from the origin server. SIBLING_HIT The object was fetched from a sibling cache which replied with UDP_HIT. PARENT_HIT The object was requested from a parent cache which replied with UDP_HIT. DEFAULT_PARENT No ICP queries were sent. This parent was chosen because it was marked “default” in the config file. SINGLE_PARENT The object was requested from the only parent appropriate for the given URL. FIRST_UP_PARENT The object was fetched from the first parent in the list of parents. NO_PARENT_DIRECT The object was fetched from the origin server, because no parents existed for the given URL. FIRST_PARENT_MISS The object was fetched from the parent with the fastest (possibly weighted) round trip time. CLOSEST_PARENT_MISS This parent was chosen, because it included the the lowest RTT measurement to the origin server. See also the closest-only peer configuration option. CLOSEST_PARENT The parent selection was based on our own RTT measurements. CLOSEST_DIRECT Our own RTT measurements returned a shorter time than any parent. NO_DIRECT_FAIL The object could not be requested because of a firewall configuration, see also never_direct and related material, and no parents were available. SOURCE_FASTEST The origin site was chosen, because the source ping arrived fastest. ROUNDROBIN_PARENT No ICP replies were received from any parent. The parent was chosen, because it was marked for round robin in the config file and had the lowest usage count. CACHE_DIGEST_HIT The peer was chosen, because the cache digest predicted a hit. This option was later replaced in order to distinguish between parents and siblings. CD_PARENT_HIT The parent was chosen, because the cache digest predicted a hit. CD_SIBLING_HIT The sibling was chosen, because the cache digest predicted a hit. NO_CACHE_DIGEST_DIRECT This output seems to be unused? CARP The peer was selected by CARP. PINNED The server connection was pinned by NTLM or Negotiate authentication requirements. ORIGINAL_DST The server connection was limited to the client provided destination IP. This only occurs on interception proxies when Host security is enabled. ANY_PARENT part of src/peer_select.c:hier_strings[]. INVALID CODE part of src/peer_select.c:hier_strings[].","permalink":"http://www.humen1.com/2013/05/squid-hierarchy-codes.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"squid","slug":"squid","permalink":"http://www.humen1.com/tags/squid/"}],"title":"Squid Logformat （适用版本2.7）","date":"2013/05/04","text":"摘抄下官方手册，部分翻译 [text] Usage: logformat Defines an access log format. The is a string with embedded % format codes % format codes all follow the same basic structure where all but the formatcode is optional. Output strings are automatically escaped as required according to their context and the output format modifiers are usually not needed, but can be specified if an explicit output format is desired. % [“|[|’|#] [-] [[0]width] [{argument}] formatcode “ output in quoted string format [ output in squid text log format as used by log_mime_hdrs # output in URL quoted format ‘ output as-is - left aligned width field width. If starting with 0 the output is zero padded {arg} argument such as header name etc Format codes: &gt;a Client source IP address / 客户端 IP &gt;A Client FQDN / 客户端完整域名，是指主机名+全路径 &gt;p Client source port / 客户端端口 &lt;A Server IP address or peer name / 服务器ip 或者 对端名 la Local IP address (http_port) / 本地ip地址 lp Local port number (http_port) / 本地端口号 oa Our outgoing IP address (tcp_outgoing_address) / 传出的ip地址 ts Seconds since epoch / unix时间戳 tu subsecond time (milliseconds) / 毫秒 tl Local time. Optional strftime format argument / 本地时间 default %d/%b/%Y:%H:%M:%S %z tg GMT time. Optional strftime format argument / 格林尼治标准时间 default %d/%b/%Y:%H:%M:%S %z tr Response time (milliseconds) / 响应时间（毫秒） &gt;h Request header. Optional header name argument on the format header[:[separator]element] /请求头 h / 响应头 un User name /用户名 ul User name from authentication /认证的用户名 ui User name from ident us User name from SSL ue User name from external acl helper Hs HTTP status code / http 状态码 Ss Squid request status (TCP_MISS etc) / squid 请求状态 Sh Squid hierarchy status (DEFAULT_PARENT etc) / squid 层次结构状态 mt MIME content type / MIME内容类型 rm Request method (GET/POST etc) /请求方法 ru Request URL /请求的url rp Request URL-Path excluding hostname /不包含主机名的请求url rv Request protocol version / 请求协议版本 ea Log string returned by external acl &lt;st Reply size including HTTP headers /响应大小，包括HTTP头 &gt;st Request size including HTTP headers /请求大小，包括HTTP头 st Request+Reply size including HTTP headers /请求大小+响应大小，包括HTTP头 sn Unique sequence number per log line entry /唯一序列号 % a literal % character [/text]","permalink":"http://www.humen1.com/2013/05/squid-logformat-ef-bc-88-e9-80-82-e7-94-a8-e7-89-88-e6-9c-ac2-7-ef-bc-89.html","photos":[]},{"tags":[{"name":"cdn","slug":"cdn","permalink":"http://www.humen1.com/tags/cdn/"},{"name":"haproxy","slug":"haproxy","permalink":"http://www.humen1.com/tags/haproxy/"}],"title":"Haproxy 配置","date":"2013/05/04","text":"自己的测试环境 squid listen :8081 haproxy listen :80 [bash] lobal maxconn 1024 #限制单个进程的最大连接数 chroot /haproxy #安装路径 uid 99 #运行用户 99==nobody gid 99 #运行组 99==nobody daemon #as 守护进程 quiet nbproc 10 #启动多少个进程 pidfile /haproxy/run.pid # pid 文件的路径 defaults log global mode http option httplog option dontlognull log 127.0.0.1 local3 info #日志级别[err warning info debug] retries 3 #在一个服务器上连接失败后重试次数 option redispatch #连接失败或断开后允许当前会话被重新分配 maxconn 1024 #连后端服务器的最大连接数 contimeout 100ms #连接超时 clitimeout 10000ms #客户端的连接超时 srvtimeout 10000ms #服务端的连接超时 listen cluster 0.0.0.0:80 #监听 host：port mode http #http 7层模式 balance roundrobin # 负载方式 option httpclose option forwardfor server internalweb1 127.0.0.1:8081 weight 5 #weight 权重 #check 健康检查 【我没配置】 #inter n 两次check间隔时间ms（检查粒度） #rise n 指定成功检测n次后服务可用 #fall n 指定检测n次失败后服务不可用 #maxconn n 指定最大并发连接数 [/bash] 参考网址","permalink":"http://www.humen1.com/2013/05/haproxy-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Ubuntu 13.04  更新的好快","date":"2013/05/04","text":"http://releases.ubuntu.com/13.04/","permalink":"http://www.humen1.com/2013/05/ubuntu-13-04-e6-9b-b4-e6-96-b0-e7-9a-84-e5-a5-bd-e5-bf-ab.html","photos":[]},{"tags":[{"name":"书","slug":"书","permalink":"http://www.humen1.com/tags/%E4%B9%A6/"},{"name":"程序员","slug":"程序员","permalink":"http://www.humen1.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"}],"title":"软件开发的“魔力三角”","date":"2013/05/03","text":"软件开发的“魔力三角”。它表明，在更多的特性、更紧迫的进度和更高的质量三者之间做选择的话，你只能满足其中两个，而剩下的那个将无法得到满足。 ———— 摘自 《程序员度量》ISBN 978-7-111-40140-7 / P22","permalink":"http://www.humen1.com/2013/05/e8-bd-af-e4-bb-b6-e5-bc-80-e5-8f-91-e7-9a-84-e9-ad-94-e5-8a-9b-e4-b8-89-e8-a7-92.html","photos":[]},{"tags":[{"name":"dell","slug":"dell","permalink":"http://www.humen1.com/tags/dell/"},{"name":"idrac","slug":"idrac","permalink":"http://www.humen1.com/tags/idrac/"}],"title":"Dell 服务器远程安装 Centos 脉创方案","date":"2013/05/03","text":"手头的服务器大多是dell R410&amp;R610，都有 iDrac 。服务器的配置很不错，需要充分的利用。 远程开关机这些自然不在话下。于是寻思着如果能重装系统呢？ 也问了几个牛B的运维大大，给的方案有这么些 1.netinstall - 这个很传统，很耗带宽（不过是上行带宽的话IDC也无所谓哦～） 2.自己做centos 软件源 - 这个很牛，直接在IDC内部做个发布版本的yum镜像，一样的耗带宽，不过比方案1省很多 以上2个方案适合在一个物理地点集中托管很多服务器，但是我们的应用决定了我们有很多分散的物理地点，每个物理地点托管的机器不超过20台，所以… 自己想了2个方案: 3. 用USB安装，现在usb很便宜一个30元左右，成本合理（遇到的问题后面再说） 4. 刻录光盘放在服务器里的CD中，随时可重装系统（遇到的问题后面再说） 问题来了。。。来的很快： 方案3在安装过程中很ok但是装完了发现因为是usb启动引导的，所以grub把引导区写在usb上了 。。。 囧～ 虽然可以通过改grub来纠正这个错误，但是！ 首先我没能搞定，其次，我都搞不定运维肯定也搞不定！！ 方案4 完全没问题，光盘这种介质在现在是多么的便宜，合下来1张系统盘只要1.3元成本～ 这是我梦想的解决方案啊！！！！ 但是！！ 有个致命的弱点：系统装完后光驱会弹出！！！ 本来采取远程安装就是不想依赖机房运维，如果每次装系统都要机房值班推光驱，这太让我不能接受了！ 后来一次再和我们运维总监聊的过程中给我一个很好的启发：可以将光盘镜像存在usb里（插服务器里），然后用iDrac的虚拟介质引导安装！ 说干就干： 第一步，分离光盘镜像 把引导部分抽离 成启动iso 这个iso是安装时引导用 最终我分离的iso为35m （可以进一步优化） 这部分是要从本地传给服务器的。 建立一个工作目录，网上一般叫 myiso/ 目录结构如下 myiso/ ======isolinux/ =============== 然后在myiso上一个目录跑一下这个命令 [bash] mkisofs -o myiso.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table myiso [/bash] 这样你就有个用来做虚拟介质的镜像了 》》》 myiso.iso 补充： 要说isolinux这个目录和里面的文件的来源，是我从 centos的安装镜像里解压出来的～ 对的，完全用官方的东西哦 又补充：boost.msg &amp;&amp; isolinux.cfg是可以修改的，比如我改的 isolinux.cfg如下 [text] prompt 1 timeout 600 display boot.msg menu title Welcome to CentOS 6.3! label linux menu label ^Install or upgrade an existing system menu default kernel vmlinuz append initrd=initrd.img label rescue menu label ^Rescue installed system kernel vmlinuz append initrd=initrd.img rescue [/text] 第二步,简简单单的把U盘格式一下（fat32）然后把 官方镜像iso里的 images/ 和镜像本身放入U盘， Done！ 第二.一步，把u盘插入dell 服务器内部usb接口 ：） 第三步，启动idrac虚拟终端，挂载虚拟介质（myiso.iso） 第四步，开始安装centos， 此处略去50字。。。","permalink":"http://www.humen1.com/2013/05/dell-e6-9c-8d-e5-8a-a1-e5-99-a8-e8-bf-9c-e7-a8-8b-e5-ae-89-e8-a3-85-centos-e8-84-89-e5-88-9b-e6-96-b9-e6-a1-88.html","photos":[]},{"tags":[{"name":"模板","slug":"模板","permalink":"http://www.humen1.com/tags/%E6%A8%A1%E6%9D%BF/"}],"title":"后台管理用模板","date":"2013/04/28","text":"一个很好的网站 收费的 传送》》》","permalink":"http://www.humen1.com/2013/04/e5-90-8e-e5-8f-b0-e7-ae-a1-e7-90-86-e7-94-a8-e6-a8-a1-e6-9d-bf.html","photos":[]},{"tags":[],"title":"NAT 网络地址转换","date":"2013/04/28","text":"在计算机网络中，网络地址转换（Network Address Translation或简称NAT，也叫做网络掩蔽或者IP掩蔽（IP masquerading））是一种在IP封包通过路由器或防火墙时重写源IP地址或/和目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。 20世纪90年代中期，NAT是作为一种解决IPv4地址短缺以避免保留IP地址困难的方案而流行起来的。网络地址转换的在很多国家都有很广泛的使用。所以NAT就成了家庭和小型办公室网络连接上的路由器的一个标准特征，因为对他们来说，申请多余的IP地址的代价要高于所带来的效益。 在一个典型的配置中，一个本地网络使用一个专有网络的指定子网（比如192.168.x.x或10.x.x.x）和连在这个网络上的一个路由器。这个路由器占有这个网络地址空间的一个专有地址（比如 192.168.0.1），同时它还通过一个或多个因特网服务提供商提供的公有的IP地址（叫做“过载” NAT）连接到因特网上。当信息由本地网络向因特网传递时，源地址被立即从专有地址转换为公用地址。由路由器跟踪每个连接上的基本数据，主要是目的地址和端口。 当有回复返回路由器时，它通过输出阶段记录的连接跟踪数据来决定该转发给内部网的哪个主机；如果有多个公用地址可用，当数据包返回时，TCP或UDP客户机的端口号可以用来分解数据包。对于因特网上的一个系统，路由器本身充当通信的源和目的地址。 流行在网络上的一种看法认为，IPv6的广泛采用将使得NAT不再需要，因为NAT只是一个处理IPv4的地址空间不足的方法。 摘自wikipedia","permalink":"http://www.humen1.com/2013/04/nat-e7-bd-91-e7-bb-9c-e5-9c-b0-e5-9d-80-e8-bd-ac-e6-8d-a2.html","photos":[]},{"tags":[{"name":"人工智能","slug":"人工智能","permalink":"http://www.humen1.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}],"title":"Artificial Neural Network","date":"2013/04/15","text":"人工神经网络（artificial neural network，缩写ANN），简称神经网络（neural network，缩写NN），是一种模仿生物神经网络的结构和功能的数学模型或计算模型。神经网络由大量的人工神经元联结进行计算。大多数情况下人工神经网络能在外界信息的基础上改变内部结构，是一种自适应系统。现代神经网络是一种非线性统计性数据建模工具，常用来对输入和输出间复杂的关系进行建模，或用来探索数据的模式。 神经网络是一种运算模型[1]，由大量的节点（或称“神经元”，或“单元”）和之间相互联接构成。每个节点代表一种特定的输出函数，称为激励函数（activation function）。每两个节点间的连接都代表一个对于通过该连接信号的加权值，称之为权重（weight），这相当于人工神经网络的记忆。网络的输出则依网络的连接方式，权重值和激励函数的不同而不同。而网络自身通常都是对自然界某种算法或者函数的逼近，也可能是对一种逻辑策略的表达。 它的构筑理念是受到生物（人或其他动物）神经网络功能的运作启发而产生的。人工神经网络通常是通过一个基于数学统计学类型的学习方法（Learning Method）得以优化，所以人工神经网络也是数学统计学方法的一种实际应用，通过统计学的标准数学方法我们能够得到大量的可以用函数来表达的局部结构空间，另一方面在人工智能学的人工感知领域，我们通过数学统计学的应用可以来做人工感知方面的决定问题(也就是说通过统计学的方法，人工神经网络能够类似人一样具有简单的决定能力和简单的判断能力)，这种方法比起正式的逻辑学推理演算更具有优势。 维基百科-人工神经网络","permalink":"http://www.humen1.com/2013/04/artificial-neural-network.html","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"}],"title":"Pyrex - a Language for Writing Python Extension Modules","date":"2013/04/13","text":"http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/ 补充： 官方wiki 对 Pyrex的说明 http://wiki.python.org/moin/Pyrex","permalink":"http://www.humen1.com/2013/04/pyrex-a-language-for-writing-python-extension-modules.html","photos":[]},{"tags":[{"name":"centos","slug":"centos","permalink":"http://www.humen1.com/tags/centos/"}],"title":"Centos官方制作安装u盘的说明","date":"2013/04/12","text":"记录一下，本人尚未实验过 http://wiki.centos.org/HowTos/InstallFromUSBkey","permalink":"http://www.humen1.com/2013/04/centos-e5-ae-98-e6-96-b9-e5-88-b6-e4-bd-9c-e5-ae-89-e8-a3-85u-e7-9b-98-e7-9a-84-e8-af-b4-e6-98-8e.html","photos":[]},{"tags":[{"name":"syslog-ng","slug":"syslog-ng","permalink":"http://www.humen1.com/tags/syslog-ng/"}],"title":"Syslog-Ng Configuring Multithreading","date":"2013/04/01","text":"To enable multithreading globally, use the threaded option: [text] options {threaded(yes) ; }; [/text] To enable multithreading only for a selected source or destination, use the flags(“threaded”) option: [text] source s_tcp_syslog { tcp(ip(127.0.0.1) port(1999) flags(“syslog-protocol”, “threaded”) ); }; [/text]","permalink":"http://www.humen1.com/2013/04/syslog-ng-configuring-multithreading.html","photos":[]},{"tags":[],"title":"Syslog-Ng 启动报错 [ error='Permission Denied (13)' ]","date":"2013/04/01","text":"配置了远程记录日志，重启后报错，配置没有问题，所以不贴了，报错内容如下： [bash] 启动 syslog-ng：Error binding socket; addr=’AF_INET(0.0.0.0:6000)’, error=’Permission denied (13)’ Error initializing source driver; source=’s_test2_network’, id=’s_test2_network#0’ Error initializing message pipeline; [失败] [/bash] 问题出在 SELinux上，关掉就OK 特此记录。","permalink":"http://www.humen1.com/2013/04/syslog-ng-e5-90-af-e5-8a-a8-e6-8a-a5-e9-94-99-errorpermission-denied-13.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Top释疑","date":"2013/03/28","text":"[bash] top - 17:00:51 up 98 days, 4:59, 2 users, load average: 0.00, 0.00, 0.00 Tasks: 164 total, 1 running, 160 sleeping, 0 stopped, 3 zombie Cpu(s): 0.2%us, 0.1%sy, 0.0%ni, 99.6%id, 0.1%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 1880380k total, 1672504k used, 207876k free, 233416k buffers Swap: 4030456k total, 2884k used, 4027572k free, 1018268k cached [/bash] 第一行： top - 17:00:51 - 当前时间 up 98 days, 4:59, - 系统连续运行了多少时间 2 users, - 当前登录用户数 load average: 0.00, 0.00, 0.00 - 系统负载【任务队列的平均长度】 分别表示 1/5/15 分钟的值 第二行： Tasks: 164 total, - 进程总数 1 running, - 正在运行的进程数 160 sleeping, - 睡眠中的进程数 0 stopped, - 停止的进程数 3 zombie - 僵尸进程数 第三行： Cpu(s): 0.2%us, - 用户空间CPU使用率 0.1%sy, - 内核空间CPU使用率 0.0%ni, - 用户空间内改变过优先级的进程的CPU使用率 99.6%id, - 空闲CPU 0.1%wa, - 等待输入输出的CPU使用率 第四行： Mem: 1880380k total, - 总物理内存 1672504k used, - 使用的物理内存 207876k free, - 空闲物理内存 233416k buffers - 用来内核缓存的内存 第五行： Swap: 4030456k total, - 交换分区总量 2884k used, - 使用的交换分区 4027572k free, - 空闲的交换分区 1018268k cached - 缓冲的交换分区总量","permalink":"http://www.humen1.com/2013/03/top-e9-87-8a-e7-96-91.html","photos":[]},{"tags":[],"title":"Socket状态图","date":"2013/03/25","text":"","permalink":"http://www.humen1.com/2013/03/socket-e7-8a-b6-e6-80-81-e5-9b-be.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"make","slug":"make","permalink":"http://www.humen1.com/tags/make/"},{"name":"python","slug":"python","permalink":"http://www.humen1.com/tags/python/"}],"title":"用Make 编译Python项目","date":"2013/03/07","text":"python编译后性能并不会提升，但是1来可以减少文件量，2来可以对明文的代码封装，还是挺好的。 makefile #编译后文件的去处 BINDIR := ../bin #源代码所在目录 BASEDIR := ../src #编译参数 可选 DBGFLAGS ?= -O ifeq ($(findstring -O,$(DBGFLAGS)),-O) COM := .pyo else COM := .pyc endif define dirflow FILES := $(wildcard $(1)) DIRS := $$(foreach e, $$(FILES), $$(if $$(wildcard $$(e)/), $$(eval DIRS := $$(DIRS) $$(e)))) FILES := $$(filter-out $$(DIRS),$$(FILES)) ALLFILES := $$(ALLFILES) $$(FILES) $$(foreach e,$$(DIRS),$$(eval $$(call dirflow,$$(e)/))) endef $(eval $(call dirflow ,$(BASEDIR))) sources := $(filter %.py,$(ALLFILES)) clean_com := $(patsubst %.py, _clean_%.py, $(sources)) MKDIR := mkdir -p TEST := test -d RM := rm -rf .PHONY : all all:$(sources) %.py:bin_dir @echo Go into $(dir $@) $(shell $(TEST) $(subst $(BASEDIR),$(BINDIR),$(dir $@)) || $(MKDIR) $(subst $(BASEDIR),$(BINDIR),$(dir $@))) python $(DBGFLAGS) -m py_compile $@ mv $(patsubst %.py, %$(COM), $@) $(subst $(BASEDIR),$(BINDIR),$(dir $@)) @echo Compile $@ done. bin_dir: $(shell $(TEST) $(BINDIR) || $(MKDIR) $(BINDIR)) .PHONY: clean clean: $(clean_com) $(RM) $(BINDIR) $(clean_com):bin_dir $(RM)$(patsubst _clean_%.py, %$(COM), $@)","permalink":"http://www.humen1.com/2013/03/e7-94-a8make-e7-bc-96-e8-af-91python-e9-a1-b9-e7-9b-ae.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"类UNIX操作系统中查看BOIS信息","date":"2013/02/19","text":"DMI (Desktop Management Interface, DMI)就是帮助收集电脑系统信息的管理系统。 使用 Dmidecode 这个工具可以查看硬件的各种信息。 Dmidecode 应该在主流的 Linux 发行版中都可以找到，因此你只需通过所用发行版的包管理器安装即可，如： aptitude install dmidecode # Debian/Ubuntu yum install dmidecode # Fedora pacman -S dmidecode # Arch Linux emerge -av dmidecode # Gentoo 在linux上，我们可以使用dmidecode来查找DMI信息，其中的“system information”就包含了这些系统信息，如： -t 是指定要查看的信息类型 可以看下dmidecode的在线帮助，还有很多种信息的","permalink":"http://www.humen1.com/2013/02/e7-b1-bbunix-e6-93-8d-e4-bd-9c-e7-b3-bb-e7-bb-9f-e4-b8-ad-e6-9f-a5-e7-9c-8bbois-e4-bf-a1-e6-81-af.html","photos":[]},{"tags":[{"name":"vsftp","slug":"vsftp","permalink":"http://www.humen1.com/tags/vsftp/"}],"title":"Vsftp配置虚拟用户，目标：把用户限定在自己的目录中","date":"2013/01/24","text":"0. Notice 环境是64位的Centos6.3 牵涉到的用户 实体用户 vsftpuser （linux用户） 虚拟用户 ftpuser 这个只是vsftp 配置中的用户，非linux 用户 1.安装vsftp （此处略去50字） 2.生成密码数据库 用户密码文件 /etc/vsftpd/vuser.list，一行用户一行密码 [text] ftpuser ftppass [/text] 生成密码库的命令如下： [bash] db_load -T -t hash -f /etc/vsftpd/vuser.list /etc/vsftpd/vuser.db chmod 600 /etc/vsftpd/vuser.db [/bash] 2.1 /etc/pam.d/vsftpd.vu [text] auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser [/text] 3.配置主文件 /etc/vsftpd/vsftpd.conf [text] #disable anonymous anonymous_enable=NO #user config local_enable=YES write_enable=YES local_umask=022 ###virtual user config### guest_enable=YES guest_username=vsftpuser user_config_dir=/etc/vsftpd/user.d chroot_local_user=YES chroot_list_enable=YES chroot_list_file=/etc/vsftpd/chroot_list #server config dirmessage_enable=YES xferlog_enable=YES xferlog_std_format=YES connect_from_port_20=YES listen=YES pam_service_name=vsftpd.vu tcp_wrappers=YES use_localtime=YES pasv_enable=YES anon_world_readable_only=NO allow_writeable_chroot=YES [/text] 4. chroot 编辑文件 /etc/vsftpd/chroot_list [text] #实体用户 vsftpuser [/text] 5.创建实体用户用来做所有虚拟用户的handler [bash] useradd -s /sbin/nologin -d /home/vsftpuser vsftpuser [/bash] 6.虚拟用户配置文件 /etc/vsftpd/user.d/ftpuser [text] #虚拟用户根目录 local_root=/home/vsftpuser/ftpuser anon_upload_enable=YES anon_mkdir_write_enable=YES anon_other_write_enable=YES [/text] 7.创建虚拟用户根目录 [bash] mkdir /home/vsftpuser/ftpuser chown vsftpuser.vsftpuser /home/vsftpuser/ftpuser [/bash] 8.重启 [bash] /etc/init.d/vsftpd restart [/bash]","permalink":"http://www.humen1.com/2013/01/vsftp-e9-85-8d-e7-bd-ae-e8-99-9a-e6-8b-9f-e7-94-a8-e6-88-b7-ef-bc-8c-e7-9b-ae-e6-a0-87-ef-bc-9a-e6-8a-8a-e7-94-a8-e6-88-b7-e9-99-90-e5-ae-9a-e5-9c-a8-e8-87-aa-e5-b7-b1-e7-9a-84-e7-9b-ae-e5-bd-95.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"lime","slug":"lime","permalink":"http://www.humen1.com/tags/lime/"},{"name":"游戏开发","slug":"游戏开发","permalink":"http://www.humen1.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"}],"title":"Limejs 中文指南 #1 the Timeline","date":"2013/01/05","text":"时间轴 Director 一切都从Director开始，Director是所有游戏都需要的基础对象，它把所有LimeJS的逻辑连接到了网页上的单独空间。如果你熟悉flash的话，你可以把它当作stage（舞台），如果你是cocos2d用户，你可以把它视为cocos2d自身的Director。如果你对两者都不熟悉，你就把它当成一个前端控制器。 每个游戏只有一个Director。它掌控了游戏的全局viewport（视点），并且控制哪个scenes（场景）是可见的。在建立游戏逻辑的开始，你需要创建一个Director实例。它的构造函数的参数包括DOM容器元素、stage（舞台）宽和高（像素）。 var director = new dfkit.Director(document.body,320,460); Scene Scene（场景）是一个包含可视元素的用于覆盖整个viewport（视点）的独立部分。这表示同一时间点上只有一个scene（场景）是激活的。例如：在一般的游戏逻辑里，你可能需要一个菜单场景，一个游戏结算的场景。通过调用 director.replaceScene(scene) 或者 director.pushScene(scene)来让一个场景可视。不同点是后者不会移除之前的scene（场景），只是将其隐藏方便之后通过director.popScene()激活。 var scene = new lime.Scene(); director.replaceScene(scene); Transitions 单纯用replaceScene()在场景间快速切换可能吸引不了眼球。为了做的更好些可以在调用replaceScene()时用 transition 和 duration 属性。transition定义了当前场景消失和新场景激活的动画效果。当前支持 Slide（滑动）和 Move（位移）以及 Dissolve（淡入）效果。 director.replaceScene(menuscene,lime.transition.SlideInRight); director.replaceScene(gamescene,lime.transition.Dissolve,2); ScheduleManager（调度管理） Lime中的所有东西都是基于repaint-dirty （重绘-不一致）模式。也就是说当你每次改变了某些东西，你的方法调用并不等于 DOM或者Canvas2dContext调用。你设置的属性将会被标记为dirty并在下一帧被重绘。这允许我们只更新一次，更新那些需要更新的内容、并无状态的保存所有内容。无状态保存更新允许我们在任何时候切换渲染方法。因为JS没有提供任何on-enter-frame事件，所以我们使用了一个静态的lime.sheduleManager对象来模拟。它提供以下方法： schedule(callback, context) – 在每一帧里调用一个方法。Context是this作用域。 unschedule(callback, context) – 清除之前的schedule方法。 scheduleWithDelay(callback, context, delay, opt_limit) – 和schedule类似，但是回调函数只有在超过delay（自上一次执行的延迟时间）秒数时候才会被调用。 callAfter(callback, context, delay) – 在delay指定的时间后调用一次回调函数。 不要在代理里使用JS自带的setTimeout()和setInterval()方法。lime.scheduleManager给你提供了能实现同一功能但却更丰富的方法。你的回调函数只有超过距离上次执行delay的时间后才会被再次执行。这使你能够让动画更加平滑，即使实在CPU性能急剧改变的情况下。 var velocity = 2; lime.scheduleManager.schedule(function(dt){ var position = this.getPosition(); position.x += velocity * dt; // if dt is bigger we just move more this.setPosition(position); },ball); Pausing（暂停） 使用scheduleManager代替timer发放可以充分利用暂停功能。当你希望暂停游戏时，只需调用Director对象的setPaused(true)。这将会暂停所有计划中的方法和动画。一旦你调用setPaused(false)，所有的代码又会继续执行，就如同什么都没发生一般。当你的游戏暂停时，lime.PauseScene将会被激活。如果你想自定义暂停场景，你可以覆盖这个类的功能。 mygame.director.setPaused(true); Layers（层） 现在我们准备在屏幕上放点东西了。为了更好的管理你的显示对象，我们引入了lime.Layer对象，你可以把它想象成Photoshop里的图层。Layer可以用来装东西。它和其他的可视对象的行为相同，只是它没有body和尺寸，它们只能用来包含子对象。所以你只需创建好它们，添加到树中，设置合适的位置把子对象添加进去。必须申明的是，Layer不是必须的，你可以在场景中加入任何对象，Layer让你的生活更简单。 var layer = new lime.Layer().setPosition(100,100); scene.appendChild(layer); for(var i=0;i&lt;5;i++){ var box = customMakeBoxFunc().setPosition(i*50,0); layer.appendChild(box); }","permalink":"http://www.humen1.com/2013/01/limejs-e4-b8-ad-e6-96-87-e6-8c-87-e5-8d-97-1-the-timeline.html","photos":[]},{"tags":[],"title":"Starming 星光社 - 给你最好的文字最美的画面","date":"2012/12/30","text":"Starming 星光社 - 给你最好的文字最美的画面. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 里面好多素材～～","permalink":"http://www.humen1.com/2012/12/starming-e6-98-9f-e5-85-89-e7-a4-be-e7-bb-99-e4-bd-a0-e6-9c-80-e5-a5-bd-e7-9a-84-e6-96-87-e5-ad-97-e6-9c-80-e7-be-8e-e7-9a-84-e7-94-bb-e9-9d-a2.html","photos":[]},{"tags":[],"title":"Genghis, the Single-File MongoDB Admin App.","date":"2012/12/26","text":"Genghis, the single-file MongoDB admin app.. 分享一个php的mongodb 可视化管理工具，一个文件就搞定","permalink":"http://www.humen1.com/2012/12/genghis-the-single-file-mongodb-admin-app.html","photos":[]},{"tags":[],"title":"魔力红乐队_百度百科","date":"2012/12/18","text":"魔力红乐队_百度百科.","permalink":"http://www.humen1.com/2012/12/e9-ad-94-e5-8a-9b-e7-ba-a2-e4-b9-90-e9-98-9f-e7-99-be-e5-ba-a6-e7-99-be-e7-a7-91.html","photos":[]},{"tags":[],"title":"使用Google App Engine、Google Closure Library与Clojure编写HTML 5应用","date":"2012/12/14","text":"使用Google App Engine、Google Closure Library与Clojure编写HTML 5应用.","permalink":"http://www.humen1.com/2012/12/e4-bd-bf-e7-94-a8google-app-engine-e3-80-81google-closure-library-e4-b8-8eclojure-e7-bc-96-e5-86-99html-5-e5-ba-94-e7-94-a8.html","photos":[]},{"tags":[{"name":"google","slug":"google","permalink":"http://www.humen1.com/tags/google/"}],"title":"Closure Library API Documentation (Closure Library API Documentation - JavaScript)","date":"2012/12/14","text":"Closure Library API Documentation (Closure Library API Documentation - JavaScript). 值得学习一下","permalink":"http://www.humen1.com/2012/12/closure-library-api-documentation-closure-library-api-documentation-javascript.html","photos":[]},{"tags":[{"name":"httpd","slug":"httpd","permalink":"http://www.humen1.com/tags/httpd/"}],"title":"使用Mpm-Itk让 Apache 以特定的用户身份运行虚拟主机","date":"2012/12/12","text":"使用mpm-itk模块让 apache 以特定的用户身份运行虚拟主机 1.安装 [bash] rpm -Uvh http://repo.webtatic.com/yum/centos/5/latest.rpm yum install–enablerepo=webtatic httpd httpd-itk [/bash] 2.配置 [bash] vi /etc/sysconfig/httpd [/bash] [text] HTTPD=/usr/sbin/httpd.itk [/text] [bash] vi /etc/httpd/conf.d/php.conf [/bash] [text] LoadModule php5_module modules/libphp5.so [/text] 在 标签里加上 [text] AssignUserId goup users [/text] 3.重启httpd","permalink":"http://www.humen1.com/2012/12/e4-bd-bf-e7-94-a8mpm-itk-e6-a8-a1-e5-9d-97-e8-ae-a9-apache-e4-bb-a5-e7-89-b9-e5-ae-9a-e7-9a-84-e7-94-a8-e6-88-b7-e8-ba-ab-e4-bb-bd-e8-bf-90-e8-a1-8c-e8-99-9a-e6-8b-9f-e4-b8-bb-e6-9c-ba-centos-5-5.html","photos":[]},{"tags":[{"name":"解析url","slug":"解析url","permalink":"http://www.humen1.com/tags/%E8%A7%A3%E6%9E%90url/"}],"title":"PHP: Parse_url  解析 URL，返回其组成部分","date":"2012/12/11","text":"PHP: parse_url - Manual. mixed parse_url ( string $url [, int $component = -1 ] ) 本函数解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。 本函数_不是_用来验证给定 URL 的合法性的，只是将其分解为下面列出的部分。不完整的 URL 也被接受， parse_url() 会尝试尽量正确地将其解析。 2个参数 url 要解析的 URL。无效字符将使用 ___ 来替换。 component 指定 PHP_URL_SCHEME、 PHP_URL_HOST、 PHP_URL_PORT、 PHP_URL_USER、PHP_URL_PASS、 PHP_URL_PATH、 PHP_URL_QUERY 或 PHP_URL_FRAGMENT 的其中一个来获取 URL 中指定的部分的 string。 （除了指定为 PHP_URL_PORT 后，将返回一个integer 的值）。 返回值 对严重不合格的 URL， parse_url() 可能会返回 FALSE。 如果省略了 component 参数，将返回一个关联数组 array，在目前至少会有一个元素在该数组中。数组中可能的键有以下几种： scheme - 如 http host port user pass path query - 在问号 ? 之后 fragment - 在散列符号 # 之后 如果指定了 component 参数， parse_url() 返回一个 string （或在指定为 PHP_URL_PORT 时返回一个integer）而不是 array。如果 URL 中指定的组成部分不存在，将会返回 NULL。","permalink":"http://www.humen1.com/2012/12/php-parse-url-e8-a7-a3-e6-9e-90-url-ef-bc-8c-e8-bf-94-e5-9b-9e-e5-85-b6-e7-bb-84-e6-88-90-e9-83-a8-e5-88-86.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"}],"title":"Nide - Beautiful IDE for Node.JS","date":"2012/12/09","text":"Nide - Beautiful IDE for Node.JS.","permalink":"http://www.humen1.com/2012/12/nide-beautiful-ide-for-node-js.html","photos":[]},{"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.humen1.com/tags/Javascript/"},{"name":"game dev","slug":"game-dev","permalink":"http://www.humen1.com/tags/game-dev/"}],"title":"LimeJS HTML5 Game Framework","date":"2012/12/09","text":"LimeJS HTML5 Game Framework. 收藏一下","permalink":"http://www.humen1.com/2012/12/limejs-html5-game-framework.html","photos":[]},{"tags":[{"name":"ssd","slug":"ssd","permalink":"http://www.humen1.com/tags/ssd/"}],"title":"Linux Ssd 格式化命令","date":"2012/12/06","text":"新+了个ssd 设备 /dev/sdb1 （分区已经分好）以下是格式化命令 mkfs.ext4 -K -E stride=128,stripe-width=128 -O ^has_journal /dev/sdb1","permalink":"http://www.humen1.com/2012/12/linux-ssd-e6-a0-bc-e5-bc-8f-e5-8c-96-e5-91-bd-e4-bb-a4.html","photos":[]},{"tags":[],"title":"计算机常用的存储单位","date":"2012/12/05","text":"一般硬件制造商会如此计算： 1KB=1024B 1MB=1024KB 1GB=1024MB 1TB=1024GB 1PB=1024TB 1EB=1024PB 1ZB =1024EB 1YB =1024ZB 1BB=1024YB [1] 1TB=1,099,511,627,776B","permalink":"http://www.humen1.com/2012/12/e8-ae-a1-e7-ae-97-e6-9c-ba-e5-b8-b8-e7-94-a8-e7-9a-84-e5-ad-98-e5-82-a8-e5-8d-95-e4-bd-8d.html","photos":[]},{"tags":[],"title":"IDC 牌照放开","date":"2012/12/03","text":"http://search.miit.gov.cn:8080/gips/contentSearch?id=15039303","permalink":"http://www.humen1.com/2012/12/idc-e7-89-8c-e7-85-a7-e6-94-be-e5-bc-80.html","photos":[]},{"tags":[],"title":"CentOS 5.4 Yum 设置Remi 源","date":"2012/12/03","text":"依赖epel 可以在这个页面找到装法 http://fedoraproject.org/wiki/EPEL remi的装法在这个页面 http://remi-mirror.dedipower.com/","permalink":"http://www.humen1.com/2012/12/centos-5-4-yum-e8-ae-be-e7-bd-aeremi-e6-ba-90.html","photos":[]},{"tags":[],"title":"关注下directspace提供的VPS服务","date":"2012/06/21","text":"http://directspace.net/ 据说性价比超高","permalink":"http://www.humen1.com/2012/06/e5-85-b3-e6-b3-a8-e4-b8-8bdirectspace-e6-8f-90-e4-be-9b-e7-9a-84vps-e6-9c-8d-e5-8a-a1.html","photos":[]},{"tags":[],"title":"XHTML 和 DOCTYPE 切换","date":"2012/06/21","text":"为 Web页指定 DOCTYPE 会影响浏览器呈现页的方式。Internet Explorer、Mozilla Firefox 和 Opera 全都支持一种名为“DOCTYPE 切换”（也叫“DOCTYPE 嗅探”）的功能。 引入 DOCTYPE 切换的目的是使浏览器能够正确地呈现符合标准的 Web 站点以及旧式 Web 站点。大多数 Web 站点被开发为呈现 HTML 页而不是 XHTML 页。浏览器通过判断是否存在 DOCTYPE 来确定何时应该使用标准来呈现页。 Internet Explorer 6+ 支持两种呈现模式，分别叫做 Quirks 模式和 Standards 模式。当 Internet Explorer 呈现包含有效 XHTML（或 HTML 4.0）DOCTYPE 的页时，它会以 Standards 模式呈现该页；否则，它会以 Quirks模式呈现该页 Opera 浏览器 (Opera 7+) 支持与 Internet Explorer 相同的两种呈现模式：Quirks 和 Standards Mozilla Firefox 1+ 支持三种呈现模式：Quirks 模式、Almost Standards 模式和 Standards 模式。Firefox 的 Almost Standards 模式对应于 Internet Explorer 和 Opera 的 Standards 模式。当页包含有效的 XHTML 1.0 Transitional DOCTYPE（并且该页被分配为 text/html MIME 类型）时，Firefox 会以 Almost Standards 模式呈现该页。当页包含 XHTML 1.0 Strict 或 XHTML 1.1 DOCTYPE（或者该页被分配为 XML MIME 类型）时，该页将以 Standards 模式呈现 可以通过临时向页中添加以下客户端脚本（该脚本在最新版本的 Internet Explorer、Firefox 和 Opera 中有效）确定浏览器的当前呈现模式。 alert( document.compatMode ); 您需要关心浏览器的呈现模式，因为它会影响将层叠样式表应用于该页的方式。如果将现有 HTML 页转换为 XHTML 页，那么在浏览器中打开它们时，它们可能看起来非常不同。 例如，Internet Explorer 以不同方式计算页元素的大小，这取决于呈现模式（它使用不同的 CSS Box Model）。在 Quirks 模式下，元素的宽度是通过将元素的内容、内边距、边框和边距相加而计算得到的。在 Standards 模式下，元素的宽度是只考虑元素内容的宽度而计算得到的。","permalink":"http://www.humen1.com/2012/06/xhtml-e5-92-8c-doctype-e5-88-87-e6-8d-a2.html","photos":[]},{"tags":[],"title":"游戏常规指标数据分析图","date":"2012/05/17","text":"","permalink":"http://www.humen1.com/2012/05/e6-b8-b8-e6-88-8f-e5-b8-b8-e8-a7-84-e6-8c-87-e6-a0-87-e6-95-b0-e6-8d-ae-e5-88-86-e6-9e-90-e5-9b-be.html","photos":[]},{"tags":[],"title":"大型上市游戏公司重要职能架构","date":"2012/04/22","text":"首席执行官【CEO】 美国人在20世纪60年代进行公司治理结构改革创新时的产物、它的出现在某种意义上代表着将原来董事会手中一些决策权过渡到经营层手中、CEO概念最早出现在一些网络企业。在那里CEO往往是自封的、也很少有人去研究这一称谓对企业到底意味着什么。但是，当“CEO”在中国叫得越来越响时候、高层人员称谓改变不是一件小事、设立CEO职位不仅仅是对时尚追赶。事实上，CEO做的事情重点在于“执行”。大多数中国公司往往CEO做的事情恰恰不是“执行”，更像是“董事长”。 首席财政官或财务总监【CFO】 现代公司中最重要、最有价值顶尖管理职位之一、掌握着企业神经系统(财务信息)和血液系统(现金资源)灵魂人物。做一名成功CFO需要具备丰富金融理论知识和实务经验。公司理财与金融市场交互、项目估价、风险管理、产品研发、战略规划、企业核心竞争力识别与建立及洞悉信息技术及电子商务对企业冲击等都是CFO职责范围内事。大型公司运作中CFO是穿插在金融市场操作和公司内部财务管理之间角色。担当CFO人才大多是拥有多年在金融市场驰骋经验的人。在美国优秀的CFO常常在华尔街做过成功基金经理人。 首席营运官【COO】 负责公司日常营运、辅助CEO工作。一般来讲COO负责公司职能管理组织体系建设、并代表CEO处理企业日常职能事务。如公司未设有总裁职务则COO还要承担整体业务管理职能、主管企业营销与综合业务拓展、负责建立公司整个销售策略与政策、组织生产经营、协助CEO制定公司业务发展计划、对公司经营绩效进行考核。也有把运营总监称呼为COO的。 首席市场官【CMO】 指市场总监 首席技术官【CTO】 技术总监 销售总监【CSO】 渠道销售总监 公关总监【CPO】 政府事务、媒体、重要公司与人物公共关系，主要是搞定人。 首席信息官【CIO】 大多数公司把这个职位变成了盯人盯票，有点象明朝时候的“东厂”，所以说中国是个很神奇的国家。 开发总监【CDO】 人事总监 【CHO】 首席品牌官【CBO】 首席文化官【CCO】 首席知识官【CKO】 首席谈判官【CNO】 质量总监【CQO】 评估总监【CVO】 首席发言人【CAO】 专门负责解答媒体、债权人和用户等有关问题询问。 首席商业计划官【CBO】 首席财务官助理之一、专门针对不同投资人制订相应BP。 首席成本控制官【CCO】 凡超过XXXX元以上支出必须由CC0批准。 首席域名官【CDO】 负责公司域名注册、网站清盘时域名拍卖、域名法律纠纷等相关问题。 首席交换官【CEO】 一般由国际CEO自由联盟随时更换、常设短期职能岗位、类似足球教练。 首席方针制订官【CGO】 规划公司宏伟蓝图、一般是5年以后目标。 首席协调官【CHO】 调解投资者和经营者之间的冲突、确保公司内部矛盾不要泄露。 首席检查官【CIO】 检查公司内部工作状况、监督员工工作态度。 首席执法官【CJO】 解决内部劳资纠纷、包括员工对降薪、辞退补偿等所引起问题。 网络连接专员【CKO】 最繁忙的岗位之一、当中国电信网络连接中断时及时向员工通报。 首席律师【CLO】 负责公司被控侵权时应诉以及各种合同文本审核。主要是灭人的打手。 首席媒体官【CMO】 保持和媒体之间友好关系为公司随时发布新闻做准备，类似首席代表。 首席新闻官【CNO】 向媒体披露公司被黑、裁员、被收购等重大新闻。一般由公司市场总监担任，类似政府部门新闻发言人，主要由司长级部门领导担任，公司声音的统一出口。 首席隐私官【CPO】 负责公司内部员工Email、ICQ、OICQ等通信内容监控。 数量指标编造专家【CQO】 负责注册用户数量、页面浏览、营业收入等指标编造。 首席裁员官【CRO】 负责与裁员有关事务、直接向股东大会负责、包括董事长在内都不得干预工作。 首席战略官【CSO】 由已经退位公司主要创建人担任，在政府机关一般称为调研员或顾问。 首席联盟官【CUO】 以战略联盟名义专门寻找有收购自己意向的公司。 投资者关系【CVO】 首席财务官另一重要助理。 首席网络写手【CWO】 负责将小事扩大化、通过炒作达到扩大公司名度目的，御用文人，比如给陈天桥，史玉柱编故事，造神。 形象代言人【CXO】 （中国特有）一般由学历不高且没有什么网络知识的年轻人担任。 公司元老【CYO】 荣誉称号授予在公司工作满X年员工（通常空缺）。","permalink":"http://www.humen1.com/2012/04/e5-a4-a7-e5-9e-8b-e4-b8-8a-e5-b8-82-e6-b8-b8-e6-88-8f-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81-e8-81-8c-e8-83-bd-e6-9e-b6-e6-9e-84.html","photos":[]},{"tags":[],"title":"Linux 套接字选项定义","date":"2012/04/17","text":"1.closesocket（一般不会立即关闭而经历TIME_WAIT的过程）后想继续重用该socket： BOOL bReuseaddr=TRUE; setsockopt(s,SOL_SOCKET ,SO_REUSEADDR,(const char)&amp;bReuseaddr,sizeof(BOOL)); 2. 如果要已经处于连接状态的soket在调用closesocket后强制关闭，不经历 TIME_WAIT的过程： BOOL bDontLinger = FALSE; setsockopt(s,SOL_SOCKET,SO_DONTLINGER,(const char)&amp;bDontLinger,sizeof(BOOL)); 3.在send(),recv()过程中有时由于网络状况等原因，发收不能预期进行,而设置收发时限： int nNetTimeout=1000;//1秒 //发送时限 setsockopt(socket，SOL_S0CKET,SO_SNDTIMEO，(char )&amp;nNetTimeout,sizeof(int)); //接收时限 setsockopt(socket，SOL_S0CKET,SO_RCVTIMEO，(char )&amp;nNetTimeout,sizeof(int)); *4.在send()的时候，返回的是实际发送出去的字节(同步)或发送到socket缓冲区的字节 (异步);系统默认的状态发送和接收一次为8688字节(约为8.5K)；在实际的过程中发送数据 和接收数据量比较大，可以设置socket缓冲区，而避免了send(),recv()不断的循环收发： //接收缓冲区 int nRecvBuf=321024;//设置为32K *setsockopt(s,SOL_SOCKET,SO_RCVBUF,(const char)&amp;nRecvBuf,sizeof(int)); //发送缓冲区 int nSendBuf=321024;//设置为32K setsockopt(s,SOL_SOCKET,SO_SNDBUF,(const char)&amp;nSendBuf,sizeof(int)); 5. 如果在发送数据的时，希望不经历由系统缓冲区到socket缓冲区的拷贝而影响 程序的性能： int nZero=0; setsockopt(socket，SOL_S0CKET,SO_SNDBUF，(char )&amp;nZero,sizeof(nZero)); 6.同上在recv()完成上述功能(默认情况是将socket缓冲区的内容拷贝到系统缓冲区)： int nZero=0; setsockopt(socket，SOL_S0CKET,SO_RCVBUF，(char )&amp;nZero,sizeof(int)); *7.一般在发送UDP数据报的时候，希望该socket发送的数据具有广播特性： BOOL bBroadcast=TRUE; **setsockopt(s,SOL_SOCKET,SO_BROADCAST,(const char)&amp;bBroadcast,sizeof(BOOL)); 8.在client连接服务器过程中，如果处于非阻塞模式下的socket在connect()的过程中可 以设置connect()延时,直到accpet()被呼叫(本函数设置只有在非阻塞的过程中有显著的 作用，在阻塞的函数调用中作用不大) BOOL bConditionalAccept=TRUE; setsockopt(s,SOL_SOCKET,SO_CONDITIONAL_ACCEPT,(const char)&amp;bConditionalAccept,sizeof(BOOL)); 9.如果在发送数据的过程中(send()没有完成，还有数据没发送)而调用了closesocket(),以前我们 一般采取的措施是”从容关闭”shutdown(s,SD_BOTH),但是数据是肯定丢失了，如何设置让程序满足具体 应用的要求(即让没发完的数据发送出去后在关闭socket)？ struct linger { u_short l_onoff; u_short l_linger; }; linger m_sLinger; m_sLinger.l_onoff=1;//(在closesocket()调用,但是还有数据没发送完毕的时候容许逗留) // 如果m_sLinger.l_onoff=0;则功能和2.)作用相同; m_sLinger.l_linger=5;//(容许逗留的时间为5秒) setsockopt(s,SOL_SOCKET,SO_LINGER,(const char)&amp;m_sLinger,sizeof(linger)); linux 套接字选项定义（二） 设置套接口的选项。 #include &lt;winsock.h&gt; int PASCAL FAR setsockopt( SOCKET s, int level, int optname, const char FAR* optval, int optlen); s：标识一个套接口的描述字。 level：选项定义的层次；目前仅支持SOL_SOCKET和IPPROTO_TCP层次。 optname：需设置的选项。 optval：指针，指向存放选项值的缓冲区。 optlen：optval缓冲区的长度。 注释： setsockopt()函数用于任意类型、任意状态套接口的设置选项值。尽管在不同协议层上存在选项，但本函数仅定义了最高的“套接口”层次上的选项。选项影响套接口的操作，诸如加急数据是否在普通数据流中接收，广播数据是否可以从套接口发送等等。 有两种套接口的选项：一种是布尔型选项，允许或禁止一种特性；另一种是整形或结构选项。允许一个布尔型选项，则将optval指向非零整形数；禁止一个选项optval指向一个等于零的整形数。对于布尔型选项，optlen应等于sizeof(int)；对其他选项，optval指向包含所需选项的整形数或结构，而optlen则为整形数或结构的长度。SO_LINGER选项用于控制下述情况的行动：套接口上有排队的待发送数据，且closesocket()调用已执行。参见closesocket()函数中关于SO_LINGER选项对closesocket()语义的影响。应用程序通过创建一个linger结构来设置相应的操作特性： struct linger { int l_onoff; int l_linger; }; 为了允许SO_LINGER，应用程序应将l_onoff设为非零，将l_linger设为零或需要的超时值（以秒为单位），然后调用setsockopt()。为了允许SO_DONTLINGER（亦即禁止SO_LINGER），l_onoff应设为零，然后调用setsockopt()。 缺省条件下，一个套接口不能与一个已在使用中的本地地址捆绑（参见bind()）。但有时会需要“重用”地址。因为每一个连接都由本地地址和远端地址的组合唯一确定，所以只要远端地址不同，两个套接口与一个地址捆绑并无大碍。为了通知WINDOWS套接口实现不要因为一个地址已被一个套接口使用就不让它与另一个套接口捆绑，应用程序可在bind()调用前先设置SO_REUSEADDR选项。请注意仅在bind()调用时该选项才被解释；故此无需（但也无害）将一个不会共用地址的套接口设置该选项，或者在bind()对这个或其他套接口无影响情况下设置或清除这一选项。 一个应用程序可以通过打开SO_KEEPALIVE选项，使得WINDOWS套接口实现在TCP连接情况下允许使用“保持活动”包。一个WINDOWS套接口实现并不是必需支持“保持活动”，但是如果支持的话，具体的语义将与实现有关，应遵守RFC1122“Internet主机要求－通讯层”中第4.2.3.6节的规范。如果有关连接由于“保持活动”而失效，则进行中的任何对该套接口的调用都将以WSAENETRESET错误返回，后续的任何调用将以WSAENOTCONN错误返回。 TCP_NODELAY选项禁止Nagle算法。Nagle算法通过将未确认的数据存入缓冲区直到蓄足一个包一起发送的方法，来减少主机发送的零碎小数据包的数目。但对于某些应用来说，这种算法将降低系统性能。所以TCP_NODELAY可用来将此算法关闭。应用程序编写者只有在确切了解它的效果并确实需要的情况下，才设置TCP_NODELAY选项，因为设置后对网络性能有明显的负面影响。TCP_NODELAY是唯一使用IPPROTO_TCP层的选项，其他所有选项都使用SOL_SOCKET层。 如果设置了SO_DEBUG选项，WINDOWS套接口供应商被鼓励（但不是必需）提供输出相应的调试信息。但产生调试信息的机制以及调试信息的形式已超出本规范的讨论范围。 setsockopt()支持下列选项。其中“类型”表明optval所指数据的类型。 选项 类型 意义 SO_BROADCAST BOOL允许套接口传送广播信息。 SO_DEBUG BOOL记录调试信息。 SO_DONTLINER BOOL不要因为数据未发送就阻塞关闭操作。设置本选项相当于将SO_LINGER的l_onoff元素置为零。 SO_DONTROUTE BOOL禁止选径；直接传送。 SO_KEEPALIVE BOOL发送“保持活动”包。 SO_LINGER struct linger FAR* 如关闭时有未发送数据，则逗留。 SO_OOBINLINE BOOL在常规数据流中接收带外数据。 SO_RCVBUF int为接收确定缓冲区大小。 SO_REUSEADDR BOOL允许套接口和一个已在使用中的地址捆绑（参见bind()）。 SO_SNDBUF int指定发送缓冲区大小。 TCP_NODELAY BOOL禁止发送合并的Nagle算法。 setsockopt()不支持的BSD选项有： 选项名 类型 意义 SO_ACCEPTCONN BOOL套接口在监听。 SO_ERROR int获取错误状态并清除。 SO_RCVLOWAT int接收低级水印。 SO_RCVTIMEO int接收超时。 SO_SNDLOWAT int发送低级水印。 SO_SNDTIMEO int发送超时。 SO_TYPE int套接口类型。 IP_OPTIONS 在IP头中设置选项。 返回值： 若无错误发生，setsockopt()返回。否则的话，返回SOCKET_ERROR错误，应用程序可通过WSAGetLastError()获取相应错误代码。 错误代码： WSANOTINITIALISED：在使用此API之前应首先成功地调用WSAStartup()。 WSAENETDOWN：WINDOWS套接口实现检测到网络子系统失效。 WSAEFAULT：optval不是进程地址空间中的一个有效部分。 WSAEINPROGRESS：一个阻塞的WINDOWS套接口调用正在运行中。 WSAEINVAL：level值非法，或optval中的信息非法。 WSAENETRESET：当SO_KEEPALIVE设置后连接超时。 WSAENOPROTOOPT：未知或不支持选项。其中，SOCK_STREAM类型的套接口不支持SO_BROADCAST选项，SOCK_DGRAM类型的套接口不支持SO_DONTLINGER 、SO_KEEPALIVE、SO_LINGER和SO_OOBINLINE选项。 WSAENOTCONN：当设置SO_KEEPALIVE后连接被复位。 WSAENOTSOCK：描述字不是一个套接口。 参见： bind(), getsockopt(), ioctlsocket(), socket(), WSAAsyncSelect().","permalink":"http://www.humen1.com/2012/04/linux-e5-a5-97-e6-8e-a5-e5-ad-97-e9-80-89-e9-a1-b9-e5-ae-9a-e4-b9-89.html","photos":[]},{"tags":[],"title":"提高 Linux 上 Socket 性能","date":"2012/04/17","text":"原文地址 http://www.ibm.com/developerworks/cn/linux/l-hisock.html 在开发 socket 应用程序时，首要任务通常是确保可靠性并满足一些特定的需求。利用本文中给出的 4 个提示，您就可以从头开始为实现最佳性能来设计并开发 socket 程序。本文内容包括对于 Sockets API 的使用、两个可以提高性能的 socket 选项以及 GNU/Linux 优化。 为了能够开发性能卓越的应用程序，请遵循以下技巧： 最小化报文传输的延时。 最小化系统调用的负载。 为 Bandwidth Delay Product 调节 TCP 窗口。 动态优化 GNU/Linux TCP/IP 栈。 技巧 1. 最小化报文传输的延时 在通过 TCP socket 进行通信时，数据都拆分成了数据块，这样它们就可以封装到给定连接的 TCP payload（指 TCP 数据包中的有效负荷）中了。TCP payload 的大小取决于几个因素（例如最大报文长度和路径），但是这些因素在连接发起时都是已知的。为了达到最好的性能，我们的目标是使用尽可能多的可用数据来填充 每个报文。当没有足够的数据来填充 payload 时（也称为最大报文段长度（maximum segment size） 或 MSS），TCP 就会采用 Nagle 算法自动将一些小的缓冲区连接到一个报文段中。这样可以通过最小化所发送的报文的数量来提高应用程序的效率，并减轻整体的网络拥塞问题。 尽管 John Nagle 的算法可以通过将这些数据连接成更大的报文来最小化所发送的报文的数量，但是有时您可能希望只发送一些较小的报文。一个简单的例子是 telnet 程序，它让用户可以与远程系统进行交互，这通常都是通过一个 shell 来进行的。如果用户被要求用发送报文之前输入的字符来填充某个报文段，那么这种方法就绝对不能满足我们的需要。 另外一个例子是 HTTP 协议。通常，客户机浏览器会产生一个小请求（一条 HTTP 请求消息），然后 Web 服务器就会返回一个更大的响应（Web 页面）。 解决方案 您应该考虑的第一件事情是 Nagle 算法满足一种需求。由于这种算法对数据进行合并，试图构成一个完整的 TCP 报文段，因此它会引入一些延时。但是这种算法可以最小化在线路上发送的报文的数量，因此可以最小化网络拥塞的问题。 但是在需要最小化传输延时的情况中，Sockets API 可以提供一种解决方案。要禁用 Nagle 算法，您可以设置 TCP_NODELAY socket 选项，如清单 1 所示。 int sock, flag, ret;/* Create new stream socket /sock = socket( AF_INET, SOCK_STREAM, 0 );/\\ Disable the Nagle (TCP No Delay) algorithm /flag = 1;ret = *setsockopt**( sock, IPPROTO_TCP, TCP_NODELAY, (char *)&amp;flag, sizeof(flag) );if (ret == -1) { printf(“Couldn’t setsockopt(TCP_NODELAY)\\n”); exit(-1);} 技巧 2. 最小化系统调用的负载 任何时候通过一个 socket 来读写数据时，您都是在使用一个系统调用（system call）_。这个调用（例如 read 或 write）跨越了用户空间应用程序与内核的边界。另外，在进入内核之前，您的调用会通过 C 库来进入内核中的一个通用函数（system_call()）。从 system_call() 中，这个调用会进入文件系统层，内核会在这儿确定正在处理的是哪种类型的设备。最后，调用会进入 socket 层，数据就是在这里进行读取或进行排队从而通过 socket 进行传输的（这涉及数据的副本）。 这个过程说明系统调用不仅仅是在应用程序和内核中进行操作的，而且还要经过应用程序和内核中的很多层次。这个过程耗费的资源很高，因此调用次数越多，通过这个调用链进行的工作所需要的时间就越长，应用程序的性能也就越低。 由于我们无法避免这些系统调用，因此惟一的选择是最小化使用这些调用的次数。幸运的是，我们可以对这个过程进行控制。 _解决方案 在将数据写入一个 socket 时，尽量一次写入所有的数据，而不是执行多次写数据的操作。对于读操作来说，最好传入可以支持的最大缓冲区，因为如果没有足够多的数据，内核也会试图填充 整个缓冲区（另外还需要保持 TCP 的通告窗口为打开状态）。这样，您就可以最小化调用的次数，并可以实现更好的整体性能。 技巧 3. 为 Bandwidth Delay Product 调节 TCP 窗口 TCP 的性能取决于几个方面的因素。两个最重要的因素是链接带宽（link bandwidth）_（报文在网络上传输的速率）和 _往返时间（round-trip time） 或 RTT（发送报文与接收到另一端的响应之间的延时）。这两个值确定了称为 Bandwidth Delay Product_（BDP）的内容。 给定链接带宽和 RTT 之后，您就可以计算出 BDP 的值了，不过这代表什么意义呢？BDP 给出了一种简单的方法来计算理论上最优的 TCP socket 缓冲区大小（其中保存了排队等待传输和等待应用程序接收的数据）。如果缓冲区太小，那么 TCP 窗口就不能完全打开，这会对性能造成限制。如果缓冲区太大，那么宝贵的内存资源就会造成浪费。如果您设置的缓冲区大小正好合适，那么就可以完全利用可用的 带宽。下面我们来看一个例子： BDP = link_bandwidth * RTT 如果应用程序是通过一个 100Mbps 的局域网进行通信，其 RRT 为 50 ms，那么 BDP 就是： 100MBps * 0.050 sec / 8 = 0.625MB = 625KB 注意：此处除以 8 是将位转换成通信使用的字节。 因此，我们可以将 TCP 窗口设置为 BDP 或 1.25MB。但是在 Linux 2.6 上默认的 TCP 窗口大小是 110KB，这会将连接的带宽限制为 2.2MBps，计算方法如下： throughput = window_size / RTT 110KB / 0.050 = 2.2MBps 如果使用上面计算的窗口大小，我们得到的带宽就是 12.5MBps，计算方法如下： 625KB / 0.050 = 12.5MBps 差别的确很大，并且可以为 socket 提供更大的吞吐量。因此现在您就知道如何为您的 socket 计算最优的缓冲区大小了。但是又该如何来改变呢？ _解决方案 Sockets API 提供了几个 socket 选项，其中两个可以用于修改 socket 的发送和接收缓冲区的大小。清单 2 展示了如何使用 SO_SNDBUF 和 SO_RCVBUF 选项来调整发送和接收缓冲区的大小。 注意：尽管 socket 缓冲区的大小确定了通告 TCP 窗口的大小，但是 TCP 还在通告窗口内维护了一个拥塞窗口。因此，由于这个拥塞窗口的存在，给定的 socket 可能永远都不会利用最大的通告窗口。 int ret, sock, sock_buf_size;sock = socket( AF_INET, SOCK_STREAM, 0 );sock_buf_size = BDP;ret = setsockopt( sock, SOL_SOCKET, SO_SNDBUF, (char )&amp;sock_buf_size, sizeof(sock_buf_size) );ret = *setsockopt**( sock, SOL_SOCKET, SO_RCVBUF, (char *)&amp;sock_buf_size, sizeof(sock_buf_size) ); 在 Linux 2.6 内核中，发送缓冲区的大小是由调用用户来定义的，但是接收缓冲区会自动加倍。您可以进行 getsockopt 调用来验证每个缓冲区的大小。 巨帧（jumbo frame） 我们还可以考虑将包的大小从 1,500 字节修改为 9,000 字节（称为巨帧）。在本地网络中可以通过设置最大传输单元（Maximum Transmit Unit，MTU）来设置巨帧，这可以极大地提高性能。 就 window scaling 来说，TCP 最初可以支持最大为 64KB 的窗口（使用 16 位的值来定义窗口的大小）。采用 window scaling（RFC 1323）扩展之后，您就可以使用 32 位的值来表示窗口的大小了。GNU/Linux 中提供的 TCP/IP 栈可以支持这个选项（以及其他一些选项）。 提示：Linux 内核还包括了自动对这些 socket 缓冲区进行优化的能力（请参阅下面 表 1 中的 tcp_rmem 和 tcp_wmem），不过这些选项会对整个栈造成影响。如果您只需要为一个连接或一类连接调节窗口的大小，那么这种机制也许不能满足您的需要了。 技巧 4. 动态优化 GNU/Linux TCP/IP 栈 标准的 GNU/Linux 发行版试图对各种部署情况都进行优化。这意味着标准的发行版可能并没有对您的环境进行特殊的优化。 解决方案 GNU/Linux 提供了很多可调节的内核参数，您可以使用这些参数为您自己的用途对操作系统进行动态配置。下面我们来了解一下影响 socket 性能的一些更重要的选项。 在 /proc 虚拟文件系统中存在一些可调节的内核参数。这个文件系统中的每个文件都表示一个或多个参数，它们可以通过 cat 工具进行读取，或使用 echo 命令进行修改。清单 3 展示了如何查询或启用一个可调节的参数（在这种情况中，可以在 TCP/IP 栈中启用 IP 转发）。 [root@camus]# cat /proc/sys/net/ipv4/ip_forward0[root@camus]# echo “1” &gt; /poc/sys/net/ipv4/ip_forward[root@camus]# cat /proc/sys/net/ipv4/ip_forward1[root@camus]# TCP/IP 栈性能使用的可调节内核参数 可调节的参数 默认值 选项说明 /proc/sys/net/core/rmem_default “110592” 定义默认的接收窗口大小；对于更大的 BDP 来说，这个大小也应该更大。 /proc/sys/net/core/rmem_max “110592” 定义接收窗口的最大大小；对于更大的 BDP 来说，这个大小也应该更大。 /proc/sys/net/core/wmem_default “110592” 定义默认的发送窗口大小；对于更大的 BDP 来说，这个大小也应该更大。 /proc/sys/net/core/wmem_max “110592” 定义发送窗口的最大大小；对于更大的 BDP 来说，这个大小也应该更大。 /proc/sys/net/ipv4/tcp_window_scaling “1” 启用 RFC 1323 定义的 window scaling；要支持超过 64KB 的窗口，必须启用该值。 /proc/sys/net/ipv4/tcp_sack “1” 启用有选择的应答（Selective Acknowledgment），这可以通过有选择地应答乱序接收到的报文来提高性能（这样可以让发送者只发送丢失的报文段）；（对于广域网通信来说）这个选项应该启用，但是这会增加对 CPU 的占用。 /proc/sys/net/ipv4/tcp_fack “1” 启用转发应答（Forward Acknowledgment），这可以进行有选择应答（SACK）从而减少拥塞情况的发生；这个选项也应该启用。 /proc/sys/net/ipv4/tcp_timestamps “1” 以一种比重发超时更精确的方法（请参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用这个选项。 /proc/sys/net/ipv4/tcp_mem “24576 32768 49152” 确 定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。第一个值是内存使用的下限。第二个值是内存压力模式开始对缓冲区使用应用压力的上限。第三个值是内存上限。在这个层次上可以将报文丢弃，从而减 少对内存的使用。对于较大的 BDP 可以增大这些值（但是要记住，其单位是内存页，而不是字节）。 /proc/sys/net/ipv4/tcp_wmem “4096 16384 131072” 为自动调优定义每个 socket 使用的内存。第一个值是为 socket 的发送缓冲区分配的最少字节数。第二个值是默认值（该值会被 wmem_default 覆盖），缓冲区在系统负载不重的情况下可以增长到这个值。第三个值是发送缓冲区空间的最大字节数（该值会被 wmem_max 覆盖）。 /proc/sys/net/ipv4/tcp_rmem “4096 87380 174760” 与 tcp_wmem 类似，不过它表示的是为自动调优所使用的接收缓冲区的值。 /proc/sys/net/ipv4/tcp_low_latency “0” 允许 TCP/IP 栈适应在高吞吐量情况下低延时的情况；这个选项应该禁用。 /proc/sys/net/ipv4/tcp_westwood “0” 启用发送者端的拥塞控制算法，它可以维护对吞吐量的评估，并试图对带宽的整体利用情况进行优化；对于 WAN 通信来说应该启用这个选项。 /proc/sys/net/ipv4/tcp_bic “1” 为快速长距离网络启用 Binary Increase Congestion；这样可以更好地利用以 GB 速度进行操作的链接；对于 WAN 通信应该启用这个选项。 与任何调优努力一样，最好的方法实际上就是不断进行实验。您的应用程序的行为、处理器的速度以及可用内存的多少都会影响到这些参数影响性能的方式。 在某些情况中，您认为有益的操作可能恰恰是有害的（反之亦然）。因此，我们需要逐一试验各个选项，然后检查每个选项的结果。换而言之，我们需要相信自己的 经验，但是对每次修改都要进行验证。 提示：下面介绍一个有关永久性配置的问题。注意，如果您重新启动了 GNU/Linux 系统，那么您所需要的任何可调节的内核参数都会恢复成默认值。为了将您所设置的值作为这些参数的默认值，可以使用 /etc/sysctl.conf 在系统启动时将这些参数配置成您所设置的值。 GNU/Linux 工具 GNU/Linux 对我非常有吸引力，这是因为其中有很多工具可以使用。尽管其中大部分都是命令行工具，但是它们都非常有用，而且非常直观。GNU/Linux 提供了几个工具 —— 有些是 GNU/Linux 自己提供的，有些是开放源码软件 —— 用于调试网络应用程序，测量带宽/吞吐量，以及检查链接的使用情况。 表 2 列出最有用的几个 GNU/Linux 工具，以及它们的用途。表 3 列出了 GNU/Linux 发行版没有提供的几个有用工具。有关表 3 中工具的更多信息请参阅 任何 GNU/Linux 发行版中都可以找到的工具 GNU/Linux 工具 用途 ping 这是用于检查主机的可用性的最常用的工具，但是也可以用于识别带宽延时产品计算的 RTT。 traceroute 打印某个连接到网络主机所经过的包括一系列路由器和网关的路径（路由），从而确定每个 hop 之间的延时。 netstat 确定有关网络子系统、协议和连接的各种统计信息。 tcpdump 显示一个或多个连接的协议级的报文跟踪信息；其中还包括时间信息，您可以使用这些信息来研究不同协议服务的报文时间。 表 3. GNU/Linux 发行版中没有提供的有用性能工具 GNU/Linux 工具 用途 netlog 为应用程序提供一些有关网络性能方面的信息。 nettimer 为瓶颈链接带宽生成一个度量标准；可以用于协议的自动优化。 Ethereal 以一个易于使用的图形化界面提供了 tcpump（报文跟踪）的特性。 iperf 测量 TCP 和 UDP 的网络性能；测量最大带宽，并汇报延时和数据报的丢失情况。","permalink":"http://www.humen1.com/2012/04/e6-8f-90-e9-ab-98-linux-e4-b8-8a-socket-e6-80-a7-e8-83-bd.html","photos":[]},{"tags":[],"title":"论述基于“流”状态的游戏设计的4大特征","date":"2012/03/27","text":"作者：Sean Baron 你本来可能只是打算坐下来玩几分钟游戏；而过了好几个小时后，你才后知后觉地意识到自己正在扮演一个柔术演员的角色，并一直努力地在游戏中获取更高分数。此时的你可能会问自己：时间怎么过得这么快？我是在什么时候沉浸到游戏中？ 也许你并未真正沉浸于游戏中，但是如果你认为自己是一名游戏玩家，你便可能已经遇到过类似的情况。而当你面对任何游戏都无法自拔之时，你便深陷这种情形中了。 特别是当你在玩一款优秀的游戏时更能够深刻体会到这种感受。如果游戏开发者能够塑造并添加具有强大用户粘性的设计要素，他们便可能创造出有趣，且畅销的好游戏。 幸运的是，一些心理学家已经察觉并研究了这种能够提高用户粘性的内容；他们甚至为其命名为：认知流。我将在以下内容中详细介绍这种“流”及其四大特征。我将从心理角度阐述每一个特征，并提供给游戏开发者一些重要的建议。 介绍 在20世纪70年代，心理学家Mihaly Csikszentmihalyi通过实验发现了“流”的存在。他发现人们的技能以及他们所面对的任务难度将导致不同的认知和情感状态的产生。如果人们的技能太低但却面对过于复杂的任务，他们便会感到焦虑。相反地，如果是技能高超之人面对过于简单的任务，他也会对此感到厌烦。而当人们的技能和任务难度成正比时，他们便会进入“流”状态。 在这种状态下，人们便会体验到： 1.极度专注于任务。 2.具有主动控制感。 3.整合行动和意识。 4.失去自我意识。 5.忘却了时间的流逝。 6.感受到完成任务是继续前进的唯一方法。 Csikszentmihalyi同样也提到了任务中能够推动技能和任务难度平衡的四大特征（能够提到流状态的概率）。这些特征分别是： 1.拥有明确的目标和管理规则。 2.以个人能力为基准完成目标。 3.明确且即时地反馈执行力和目标完成状况。 4.减少外部干扰，便于集中注意力。 如果游戏开发者希望玩家能够在游戏中产生“流”状态，他们就需要好好研究这四大任务特征。以下我将更加详细地分析这四大特征。 特征1：游戏应该拥有明确的目标和管理规则。 “我完全被搞糊涂了。一个非玩家角色（NPC）告诉我我应该做什么，但是我却因为房间中央的战利品而分神了，并且这时候我还发现了来自四面八方的Giant Spiders。此时我不但不能再访问NPC，我还注意到这个地牢中的所有房间都拥有相同的形状以及相同的颜色，我对此更加迷糊了！我不知道该去哪里也不知道如何才能到达目的地。过了15分钟后我才找到我需要面对的谜题，但是现在我却不知道该使用库存中20个任务道具中的哪一个去揭开谜题。过了一会后，我最终放弃了任务。” 如果玩家不知道目标是什么，不知道自己该如何完成目标或者使用何种技能去解决谜题，他们的“流”状态便会瓦解。并且他们将最终停止游戏。 为何明确的目标和管理规则对于人们来说如此重要？因为我们的信息处理和关注能力都非常局限；我们不可能完全消化所有来自屏幕上或者说话人口中的信息。尽管我们能够同时处理许多基于图像或声音的信息，但是这种处理能力也是非常局限。 特别是当我们的注意力出现分散时，这种处理局限便会更加明显。除此之外，如果任务相关信息过快呈现于人们眼前或者同时展开了多条信息，人们也会明显感受到信息处理的局限性。不管是何种情况，人们都会终止任务的执行。因为此时的人们会充满各种交流，觉得自己不可能完成任务，而因此抑制了内心“流”的发展。 关于信息处理的另外一大重要元素便是确保指示与任务的一致性。如果你能够确保任务和信息/指示保持一致，人们便能够更加容易理解并使用这些信息。 信息处理和注意力问题将直接影响我们解决问题与做决定的能力。如果你的信息处理出了问题，那么人们对于任务目标和规则的理解也会受到牵连。也就是如果人们不能理解问题的本质，他们便会感到焦虑而不愿意去尝试着解决问题。最终，这种挫败感将导致“流”状态的下降并因此影响人们解决问题的能力。 如果面对过多的打击，人们可能会后退求助于他们早前所使用的解决问题方法。但是开发者却不一定能够考虑到这种逆转。 明确目标和管理规则是一种切实可行的方法。获取目标是一种有报答的行为，从而因此能够推动个体继续努力完成目标。不论完成目标能够让你的角色获得升级还是争取更多分数，你都会因此而更加坚定达到目标的最终信念。目标——成就——奖励，如此循环不仅能够让玩家对游戏更加着迷，而且能够推动他们“流”状态的发展。 游戏设计师该如何解决目标和规则问题？如果设计师们能够考虑上述所提到的心理元素，他们便能够轻松地解决这些规则和目标问题。 * 不论是用户界面还是游戏屏幕上的任何内容都应该明确地向玩家指示他们的任务。情境线索，HUD信息以及NPC等也都应该确保目标的浅显易懂。 * 因为注意力的分散会影响理解力，所以设计师应该避免在玩家面对高度刺激感时刻（游戏邦注：如玩家在《光晕2》中面对Flood的肆虐或者在《天际》中需要避开成群的Draugr时）提供目标和指示内容。 * 在提供重要信息时更需要小心谨慎，以此确保信息和任务/目标保持一致。《死亡空间》中的指示线索便是一个典型的例子。开发者通过在玩家所处环境周围覆盖关于下个目标的相关提示，从而让玩家能够清楚地知道自己该如何前进。 * 而关于规则，玩家则希望能够在游戏过程中尝试更多不同的游戏技巧。 但是，在关卡或游戏中间段引入新的机制则会抑制“流”状态的发展。不过有时候这么做却是必要的，并且能够提高游戏的乐趣以及游戏玩法的多元化（例如，在《半条命》中主人公Gordon Freeman第一次获得Zero-point能量场操纵器时）。 但是当你提供新技能给玩家时，你还需要谨慎地面对如何培养他们使用新技能的问题（例如，当Gordon使用Zero-point能量场操纵器去追赶Dog时）的。 * 将小目标（如清除一地的野猪）与更大的目标（如获得足量的XP进行升级）并且与更大的目标（如进入特定关卡的齿轮）相互联系起来。这种联系将创造一系列的奖励体验，从而因此吸引更多玩家玩游戏并构建起“目标——成就——奖励”循环。 如果玩家能够较容易完成目标，他们便更乐意继续游戏。不过就像之前所说的，我们必须平衡玩家技能与任务难度之间的比例。 特征2：游戏只能要求玩家执行自己能力范围内的行动。 “我知道我应该朝着Fiend攻击的相反方向发动进攻，这么做才能够避开他的攻击，并朝着我的相反方向打击他。但是事实上我却做不到这一点。不知道是因为我不够放松还是这是我初次游戏，我的行动都非常笨拙。对此我感到非常沮丧。” 理解玩家的能力局限并培养他们的技能非常重要。如果玩家没有能力完成目标，那么即使你的目标和规则再明确，他们也不会感受到游戏体验的乐趣。 为什么游戏只能要求玩家执行自己能力范围内的行动？ 因为如果不这么做，“玩家便会停止游戏！”还有许多心理元素拥有值得借鉴之处： 压力和执行力影响着“流”。如果玩家的能力不足以帮助他们完成游戏目标，他们便会倍感压力从而使得自己的执行力大大下降。最终瓦解了他们的“流”状态并破坏了游戏体验的乐趣。 目标难度和玩家的毅力。随着目标难度的提升（与玩家技能紧密相关），玩家关于完成这些目标的耐性也会被慢慢磨平，从而最终不愿意继续游戏。 游戏设计师该如何处理涉及玩家技能与任务难度的问题？ 每个玩家都拥有自己的执行力-压力曲线（见图2）。这就意味着一名压力值为+7（随机值）的玩家可能拥有非常高的执行力，而另外一名同时拥有+7压力值的玩家就可能就执行力欠佳。 这同样也意味着游戏难度的层次（如简单，中等，困难）设置不合理也会导致糟糕的游戏体验。 游戏开发者应该在游戏中设置能够调整不同游戏情况以适应不同难度的AI，从而对玩家的执行力产生积极的影响（例如《求生之路》系列游戏中的AI Director）。 对于这种AI，你应该着重考虑执行力和乐趣之间的关系。有些玩家在面对越来越困难的任务时执行力也会慢慢提高，但是在这种复杂的挑战下他们却不一定能够感受到游戏的乐趣。在这种情况下，他们反倒会充满焦虑感（如图1所示）。游戏开发者便是从那些拥有较高执行力同时也属于较高流失率玩家中意识到这一点（如，即使玩家因为任务难度的改变而离开游戏，但是他们的执行力却仍保持稳定）。 另外一个需要考虑的元素便是，这些AI该如何针对不同多人玩家团队（如《求生之路2》战役中的4名玩家）设置难度。如此看来，开发者必须深刻意识到任务难度的变化将从不同方面影响着不同能力的玩家。因此，开发者首先需要考虑如何在不破坏游戏的前提下平衡同一个团队中最优秀玩家或最糟糕玩家，从而做出最合理的难度改变。 逐步向玩家传输游戏中的特殊技能。如果你的游戏中没有那些玩家熟知的技能（游戏邦注：如典型的FPS控制或瞄准技能），你就需要逐步地教授玩家你的游戏中的新技能。鉴于之前提到的信息处理局限，你应该让玩家能够在一种相对缓和的环境下学习这种技能。 特征3：游戏应该明确且即时地反馈玩家的执行力 “我这样做对吧？我刚刚创造的斧头是否放置到我的库存中了？这一行动是否能够提高我的魔法能力？” 无论这种反馈信息是基于虚拟高尔夫俱乐部所发出的声音，还是RPG游戏中经典的经验指示栏，或者是FPS游戏中模拟血的红色指示图标，你都需要让玩家清楚自己在游戏中的发展。 为何玩家需要获得即时的反馈？ 这源自人类与生俱来的学习和调节机制。如果在完成行动后（200至400分毫秒内）或期间给予玩家相关反馈，便能够帮助他们更好地处理行动与结果之间的关系。 但是有趣的是，在行动开始的同时给予反馈信息却不见得有多大成效。（见图3）。 再次回到目标上，如果游戏能够在玩家的游戏进程中提供中期和长期目标（完成一个关卡或完成游戏）反馈，便能够进一步提高游戏的用户粘性并推动玩家最终完成游戏。 这也就意味着接收到反馈信息的玩家更愿意长时间玩游戏。 游戏设计师应该如何处理反馈问题？ 如果玩家发现行动和结果之间出现了矛盾，他们便很难理解自己的行动对于执行力的影响。 所以开发者应该建立相关机制并尽早呈现给玩家长期和短期目标，随后在整个游戏过程中始终围绕着这些目标而发展。 特征4：游戏应该排除任何会破坏注意力的外部信息。 “这些穿梭于屏幕上方和下方的咒语和图标看起来真有趣！你看我的Ice Storm咒语的粒子影响！等等！谁袭击了我？” 如果面对的是越来越多噪杂的内容，玩家关于察觉并评估重要刺激物的能力便会大大减弱。这就意味着设计师应该确保那些穿梭于游戏中（不论是UI还是HUD）的额外内容足够简单。 为何需要排除任何会破坏玩家注意力的外部信息？ 我们不得不再次提到人类对于信息处理的局限：就像我们在第一个特征中所提到的“流”状态，人类对于信息的处理具有一定的局限。而杂乱的视野将会打乱玩家的信息处理过程；并因此影响玩家对于目标和规则的理解，从而最终影响他们的“流”状态。 游戏设计师应该如何处理外部信息问题？HUD和游戏内部的菜单设置便是最简单的方法（游戏邦注：如《死亡空间》或《辐射》中那样）。 如果你的游戏中牵扯到游戏技能或选择，或者说这是开发者为了突破艺术或技术界限所强调的内容，你就必须将其涵括到游戏中去。 结论 能够创造出“流”状态的任务将拥有明确的目标和管理规则；基于玩家的能力调整目标；提供清晰且即时的执行力反馈；并且擅于排除任何外部信息。如果游戏开发者在设计过程中能够考虑这些特征，他们定能够创造出具有较高用户粘性（且高销量）的游戏。 我针对于每个特征所列举出的设计要素只是一种例子；或者说只是基于心理元素的基本原理。你应该根据你所创造的游戏类型——不论简单还是复杂，采用不同方法去应对这些特征和问题——就像每种特征中还存在许多推动着“流”状态发展的心理要素。 同时值得注意的是，大多数优秀的游戏设计师和游戏公司都已经明确（或含蓄）认可了这些“流”特征的重要性。 最后我想说的是，我所提供的这些内容只是引导开发者和设计师思考如何提高游戏的用户粘性；而真正的实践完全取决于那些参与游戏创造的人。","permalink":"http://www.humen1.com/2012/03/e8-ae-ba-e8-bf-b0-e5-9f-ba-e4-ba-8e-e2-80-9c-e6-b5-81-e2-80-9d-e7-8a-b6-e6-80-81-e7-9a-84-e6-b8-b8-e6-88-8f-e8-ae-be-e8-ae-a1-e7-9a-844-e5-a4-a7-e7-89-b9-e5-be-81.html","photos":[]},{"tags":[],"title":"月份缩写","date":"2011/12/01","text":"一月 Jan. January 二月 Feb. February 三月 Mar. March 四月 Apr. April 五月 May. May 六月 June. June 七月 July. July 八月 Aug. Aguest 九月 Sept. September 十月 Oct. October 十一月 Nov. November 十二月 Dec. December","permalink":"http://www.humen1.com/2011/12/e6-9c-88-e4-bb-bd-e7-bc-a9-e5-86-99.html","photos":[]},{"tags":[{"name":"as3","slug":"as3","permalink":"http://www.humen1.com/tags/as3/"},{"name":"django","slug":"django","permalink":"http://www.humen1.com/tags/django/"},{"name":"pyamf","slug":"pyamf","permalink":"http://www.humen1.com/tags/pyamf/"}],"title":"Apache+mod_python+django+pyamf与flash通信（@centos）","date":"2011/11/29","text":"装apache &amp; mod_python可以通过yum安装，python是linux自带的。 django可以去官方网站 下载https://www.djangoproject.com/download/ 安装https://docs.djangoproject.com/en/dev/intro/install/ 目录结构-以我自己的习惯： #mkdir /data #cd /data #django-admin.py startproject myproj #cd myproj #django-admin.py startapp amfgateway 好了该建立的项目和应用都建好了现在要配置下。 #vi /data/myproj/urls.py —————————————————————— from django.conf.urls.defaults import patterns, include, url urlpatterns = patterns(‘’, url(r’^myproj/‘, include(‘myproj.amfgateway.urls’)), ) —————————————————————— #vi /data/myproj/amfgateway/urls.py —————————————————————— from django.conf.urls.defaults import patterns, include, url urlpatterns = patterns(‘amfgateway.views’, url(r’amfgateway/$’, ‘echoGateway’), ) —————————————————————— #vi /data/myproj/amfgateway/view.py —————————————————————— # Create your views here. from pyamf.remoting.gateway.django import DjangoGateway def echo(request, data): return data services = { ‘echo’: echo # could include other functions as well } echoGateway = DjangoGateway(services) —————————————————————— 随后，配置apache #vi /etc/httpd/conf/httpd.conf 在文件最后添加 —————————————————————— NameVirtualHost *:80 DocumentRoot /www ErrorLog logs/error_log CustomLog logs/access_log common SetHandler python-program PythonHandler django.core.handlers.modpython SetEnv DJANGO_SETTINGS_MODULE myproj.settings PythonDebug On PythonPath “[‘/data’, ‘/data/myproj’] + sys.path” ------------------------------------------------------------------ 最后 写个as试试链接下 Main.as —————————————————————— package { import flash.net.Responder; import flash.net.NetConnection; import flash.display.Sprite; public class Main extends Sprite { // Gateway connection object private var gateway:NetConnection; public function Main() { // Setup connection gateway = new NetConnection(); // Connect to gateway gateway.connect( “http://192.168.1.250/myproj/amfgateway/&quot; ); // This var holds the data we want to pass to the remote service. var param:String = “Hello World!\\n”; // Set responder property to the object and methods that will receive the // result or fault condition that the service returns. var responder:Responder = new Responder( onResult, onFault ); // Call remote service to fetch data trace(“Start call”); gateway.call( “echo”, responder, param ); } // Result handler method private function onResult( result:Object ): void { trace( result +”\\n”);// prints “Hello World!” } // Fault handler method displays error message private function onFault( error:Object ): void { // Notify the user of the problem // status_txt.text = “Remoting error: \\n”; for (var d:String in error) { trace( error[d] + “\\n” ); } } } } ——————————————————————","permalink":"http://www.humen1.com/2011/11/apachemod-pythondjangopyamf-e4-b8-8eflash-e9-80-9a-e4-bf-a1-ef-bc-88centos-ef-bc-89.html","photos":[]},{"tags":[{"name":"做游戏","slug":"做游戏","permalink":"http://www.humen1.com/tags/%E5%81%9A%E6%B8%B8%E6%88%8F/"}],"title":"总结社交媒介及软件可借鉴的101项游戏元素","date":"2011/11/10","text":"原文作者：Anna Mar 社交媒介经常会借鉴一些游戏设计原则（即所谓的“游戏化”现象），原因是游戏确实很令人上瘾，而游戏化的功能则可增加用户粘性，鼓励用户、合作伙伴和雇员采取积极的行动。 游戏设计是一个较为成熟的领域，毕竟游戏已有数千年的发展史。以下是社交媒介及软件最普遍采用的101项游戏设计元素。 游戏机制 1.约定 玩家需在预定的时间间隔（例如每日一次）加入游戏，以实现积极的效果。 2.成就 玩家喜欢实现目标——为成功的玩家提供积分、地位等各种奖励。 3.奖品 玩家获得出色成就后可赢得丰厚奖励。 4.连环任务 玩家需同时完成多项指定任务或操作连续操作才能赢取奖励。 5.等比例地集中精力 必须确保玩家被动参与状态下也能体验游戏，但如果他们投入更多精力，就要为其提供相应奖励。 6.逐渐释放信息 循序渐进地透露信息和内容。 7.倒计时 一般的游戏都有限时任务。 8.回合制 回合制游戏让玩家拥有考虑和制定策略的时间。 9.发现和探索 支持玩家进一步探索虚拟世界。 10.得分 多许游戏通过得分情况判断胜负。 11.无止尽的游戏 这是指那些可以无限体验，没有结局的游戏。 12.机遇 这是指随机性，它可以避免一开局就定胜负的情况。 13.技能 熟能生巧，玩的时间久了，玩家的技能就会更胜一筹。许多游戏甚至需要玩家投入数年时间精通其中技巧。 14.策略 支持玩家制定分配资源的计划以实现目标。 15.解谜 测试智力的游戏。 16.建设 让玩家建设一些东西。 17.资源管理 例如，让玩家管理权力等各种资源。 18.反应时间 要求玩家提高对实时活动的注意力，以及时作出反应。 19.冷却 当玩家使用某项技能后需冷却一段时间方可再次使用该技能。 20.刷任务 可让玩家获得相应奖励的重复性行为。 21.迷你小游戏 嵌入某款游戏的次级游戏。 22.重新开始 支持玩家失败后重头再来，以免他们受挫而退出游戏。 23.翻身战 将最后一个挑战设置得更有难度，让暂时落后的玩家有机会迎头赶上。 24.关卡 将游戏玩法划分成多个难度递增的关卡。这种难度一般呈曲线发展，这样每两个关卡之间的差距就会呈非线性发展状态。 25.经验值 它标志着玩家获得里程碑式的成就，频繁获取经验值可让玩家获得一种成就感。 26.魔法 在游戏世界中，一切皆有可能——它们并不会受到现实世界条条框框的束缚。 27.隐身 允许玩家在游戏中对他人隐身。 28.风险和回报 向敢于奋力一搏并获得成功的玩家提供奖励。 29.惩罚 惩罚任务失败的玩家。 30.健康（以及治愈）系统 游戏角色的健康状况一般以数值形式显示出来。 31.平衡性 虚拟世界中的规则必须公平，具有平衡性。 32.防止作弊 游戏必须避免作弊和投机取巧的行为。 33.微作弊 有些游戏有时会故意添加一些微作弊元素。 34.诡异元素 游戏中常会添加一些脱离常规的内容。 35.抽奖 游戏结果完全取决于运气。 36.游戏词汇 游戏常有一些自创语言，只有游戏玩家才能理解。 37.创造性 支持玩家运用自己的创意扩展游戏内容（游戏邦注：例如自定义设计关卡、虚拟角色等）。 38.难度等级 它支持不同技能水平的玩家体验游戏，过去的游戏一般会让玩家自主选择难度等级，但现在更高级的游戏一般会根据玩家的表现，逐渐提升难度。 39.模式 支持多种游戏玩法模式（例如单人或多人模式）。 40.人工智能（AI） 游戏本身及其AI系统。 41.虚拟世界 自然、社会规则与现实生活截然不同的世界。 42.控制区域 允许玩家在游戏世界中控制某个地理区域。 动机 43.满足感 游戏可以让玩家觉得富有成就感。 44.愉悦性 游戏可以让无需面临风险。 45.幸运感 游戏可以让玩家觉得自己很幸运。 46.所有权 玩家在游戏中可以拥有虚拟资产。 47.地位 玩家在游戏中可获得一定地位。 48.乐观 游戏培养了玩家的乐观主义精神。 49.紧迫感 游戏会制造一种紧迫感。 50.美德 游戏会让玩家行善。 51.虚荣 游戏可以让玩家树立自尊。 52.一切皆有可能 游戏让玩家实现不可企及的梦想。 53.反馈 向玩家提供持续的操作反馈结果。 54.嫉妒 在玩家中创造一种关于地位、能力或虚拟资产的嫉妒感。 55.趣味 游戏趣味性压倒一切。 56.自我表现 培养玩家自我表现的欲望（游戏邦注：例如鼓励他们自主设计东西）。 57.逃避现实 游戏是玩家逃离现实的避风湾。 58.好奇心 游戏培养玩家的好奇心。 59.积分 玩家总有想获得高分的心理。 社交动态 60.合作战略 游戏奖励玩家的合作行为，鼓励他们走出自己的圈子与他人进行互动。 61.组队 玩家可以组队完成任务。 62.协作工具 允许玩家通过语音、文本、视频等工具沟通和互动。 63.社交网络 社交网张络的特色在于用户资料。 64.智能匹配 根据地理位置、兴趣爱好等匹配玩家。 65.现实活动 通过组织活动，让玩家在现实活动中会面。 角色发展 66.虚拟形象 支持玩家个性化装饰角色，并控制角色。 67.角色分类 划分成不同类型的角色（例如巫师、战士等）。 68.角色特点 与角色资料有关。 69.主角 多数游戏都有一个重点角色。 70.敌人 坏蛋是许多游戏中必不可少的元素。 71.固定角色 时常出现的角色类型（通常以搞笑形象现身）。 72.神秘角色 只有玩家实现特定目标后才会出现的角色，它们有可能是玩家角色，也有可能是NPC。 73.幽灵角色 游戏可能会提到这种角色，但它们从来不会现形。 故事 74.故事情节 多数成功的游戏都有一些精彩的故事情节。 75.故事主线 它是可贯穿多款游戏的故事内容。 76.神圣感 玩家在游戏中实现了非凡的目标后会产生一种神圣感（例如在游戏中拯救了世界）。 77.同一个世界 不同的游戏发生于同一个虚拟世界。 78.模拟现实游戏 模拟真实世界的游戏。 79.象征主义 运用符号等元素表达想法。 80.文化 游戏通常取材于神话、艺术、文学和流行文化。 81.幽默感 这是许多游戏通用的元素。 技术 82.大型多人在线游戏 允许成百上千万玩家同时进入同一个游戏世界。 83.动态音乐 与游戏活动情景交融的音乐。 84.意外的游戏玩法 它是定义相对简单的游戏机制，并推动游戏发展的元素 经济 游戏经济形态对有意将社交媒介和企业软件游戏化的公司来说甚为重要。 85.货币 游戏货币可用来购买和出售虚拟商品和服务。玩家可通过完成游戏任务赢取货币，也可以直接花真钱购买。 86.付费玩成任务 玩家可花真钱在游戏中获得实惠。 87.虚拟劳动力 玩家通过完成游戏任务而赢取虚拟货币。 88.虚拟土地 玩家在游戏中可获得并控制自己的虚拟地产。 89.虚拟商品 玩家可创造、购买和出售虚拟商品。 90.可搜集的物品 它是限量供应并且可为玩家搜集的虚拟商品。 91.虚拟时尚 许多游戏中也出现了虚拟时尚元素。 92.稀缺性 提供稀有虚拟商品可增加其价值。 93.影响力 游戏世界中的虚拟影响力和政治资本。 94.市场 推动游戏经济发展的游戏内部市场。 95.财产减少 在许多游戏中，玩家的钱会随着时间发展而减少。 视觉元素 95.分析系统 游戏分析和展示系统可向玩家提供最新游戏情报。 97.进度条 它可以显示玩家的任务完成度。 98.炫目 视觉效果出众的用户界面是许多游戏的一大吸引力。 99.可爱 萌是许多游戏的一大卖点。 100.阴暗性 阴暗题材的游戏也相当有市场。 101.主题 同款游戏可推出不同主题的版本。","permalink":"http://www.humen1.com/2011/11/e6-80-bb-e7-bb-93-e7-a4-be-e4-ba-a4-e5-aa-92-e4-bb-8b-e5-8f-8a-e8-bd-af-e4-bb-b6-e5-8f-af-e5-80-9f-e9-89-b4-e7-9a-84101-e9-a1-b9-e6-b8-b8-e6-88-8f-e5-85-83-e7-b4-a0.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"},{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"},{"name":"ssh","slug":"ssh","permalink":"http://www.humen1.com/tags/ssh/"}],"title":"Ubuntu 下安装PuTTY","date":"2011/10/21","text":"如题，ubuntu上我一直是直接用ssh的但是有一个缺点就是老要输入xxx@yyy putty可以记录，就爱这个。 以前在nokia E71 上也装了putty 好用，于是想在ubuntu上也装个，看了下官网，还真可以。 Step 1. 打开下面的下载页： http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html 找到 Unix source code 那一段 Release source code for Unix Source: putty-version.tar.gz (or by FTP) (RSA sig) (DSA sig) 把源码下下来，找个地方放，解压。 Step 2. #cd /path/to/putty-version/ #cd unix 注意了 要进入到里面的unix目录。 Step 3. #./configure #make -f Makefile.gtk #make install 又要注意在编译安装时如果不用.gtk的Mf那你就看不到图像界面了。 图像界面需要Gtk+ 2.0的支持 别忘了装 libgtk-dev Last Step . 跑起～ $putty /***/","permalink":"http://www.humen1.com/2011/10/ubuntu-e4-b8-8b-e5-ae-89-e8-a3-85putty.html","photos":[]},{"tags":[],"title":"键盘上的符号用英语怎么读？","date":"2011/07/12","text":"` backquote 反引号 ~ tilde ! exclam @ at # numbersign,英语国家是hash，美语是pound,音乐里作sharp,如C# $ dollar % percent ^ caret &amp; ampersand * asterisk,star(美语),数学公式中作multiply ( parenleft,opening parentheses ) parenright,closing paretheses - minus;hyphen连字符,不读 _ underscore + plus = equal [ bracketleft,opening bracket ] bracketright,closing bracket { braceleft } braceright ; semicolon : colon ‘ quote “ doublequote / slash \\ backslash 反斜杠 | bar , comma &lt; less &gt; greater . period ? question space 空格 其他符号的读法 ＜ is less than ＞ is more than ≮ is not less than ≯ is not more than ≤ is less than or equal to 小于或等于号 - hyphen 连字符 ≥ is more than or equal to 大于或等于号 ‘ apostrophe 省略号,英文中省略字符用的撇号;所有格符号 ％ percent － dash 破折号 ‰ per mille ∞ infinity 无限大号 ∝ varies as 与…成比例 ( ) parentheses 圆括号 √ (square) root 平方根 [ ] square brackets 方括号 ∵ since; because 因为 《 》 French quotes 法文引号;书名号 ∴ hence 所以 … ellipsis 省略号 ∷ equals, as (proportion) 等于，成比例 ¨ tandem colon 双点号 ∠ angle 角 ∶ ditto 双点号 ⌒ semicircle 半圆 ‖ parallel 双线号 ⊙ circle 圆 ／ virgule 斜线号 ○ circumference 圆周 ～ swung dash 代字号 △ triangle 三角形 § section; division 分节号 ⊥ perpendicular to 垂直于 → arrow 箭号；参见号 ∪ union of 并，合集 ∩ intersection of 交，通集 ∫ the integral of …的积分 ± plus or minus 正负号 ∑ summation of 总和 × is multiplied by 乘号 ° degree 度 ÷ is divided by 除号 ′ minute 分 ″ second 秒 ≠ is not equal to 不等于号 ≡ is equivalent to 全等于号 ℃ Celsius degree 摄氏度 ≌ is equal to or approximately equal to 等于或约等于号 希腊字母的读法 α Α alpha [‘ælfa] β Β beta [‘bi:ta / ‘beita] γ Γ gamma [‘gæma] δ Δ delta [‘delta] ε Ε epsilon [‘epsilan / ep’sailan] ζ Ζ zeta [‘zi:ta] η Η eta [‘i:ta / ‘eita] θ Θ theta [‘θita] ι Ι iota [ai’outa] κ Κ kappa [‘kæpa] λ Λ lamda [‘læmda] μ Μ mu [mju:] ν Ν nu [nju:] ξ Ξ xi [ksai / gzai / zai] ο Ο omicron [ou’maikran] π Π pi [pai] ρ Ρ rho [rou] σ Σ sigma [‘sigma] τ Τ tau [tau] υ Υ upsilon [‘ju:psilon / ju:p’sailan] o 是反 c 。 φ Φ phi [fai] χ Χ chi [kai] ψ Ψ psi [psi:] ω Ω omega [‘oumiga / ou’mi:ga]","permalink":"http://www.humen1.com/2011/07/e9-94-ae-e7-9b-98-e4-b8-8a-e7-9a-84-e7-ac-a6-e5-8f-b7-e7-94-a8-e8-8b-b1-e8-af-ad-e6-80-8e-e4-b9-88-e8-af-bb-ef-bc-9f.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"CDT","slug":"CDT","permalink":"http://www.humen1.com/tags/CDT/"}],"title":"CDT在ubuntu9.04上调试不能[cannot Find New Threads:generic Error]  Fixed","date":"2011/06/28","text":"点开 Debug Configurations Environment页签 点New… 弹出的 New Environment Variable对话框 里这样填 Name：LD_PRELOAD Value：/lib/libpthread.so.0 OK","permalink":"http://www.humen1.com/2011/06/cdt-e5-9c-a8ubuntu9-04-e4-b8-8a-e8-b0-83-e8-af-95-e4-b8-8d-e8-83-bdcannot-find-new-threadsgeneric-error-fixed.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Php-Fpm 的启动，关闭 ，重启脚本【Shell】","date":"2011/06/04","text":"新建一个shell脚本然后输入。 [bash] #!/bin/sh # # php-fpm - this script starts and stops the daemin # Source function library. . /etc/rc.d/init.d/functions # Source networking configuration. . /etc/sysconfig/network # Check that networking is up. [ “$NETWORKING” = “no” ] &amp;&amp; exit 0 php=”/usr/local/sbin/php-fpm” prog=$(basename $php) CONF_FILE=”/usr/local/lib/php.ini” lockfile=/var/lock/subsys/php-fpm start() { [ -x $php ] || exit 5 [ -f $CONF_FILE ] || exit 6 echo -n $”Starting $prog: “ daemon $php -c $CONF_FILE retval=$? echo [ $retval -eq 0 ] &amp;&amp; touch $lockfile return $retval } stop() { echo -n $”Stopping $prog: “ killproc $prog -QUIT retval=$? echo [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile return $retval } restart() { configtest || return $? stop start } reload() { configtest || return $? echo -n $”Reloading $prog: “ killproc $php -HUP RETVAL=$? echo } force_reload() { restart } configtest() { $php -t -c $CONF_FILE } rh_status() { status $prog } rh_status_q() { rh_status &gt;/dev/null 2&gt;&amp;1 } case “$1” in start) rh_status_q &amp;&amp; exit 0 $1 ;; stop) rh_status_q || exit 0 $1 ;; restart|configtest) $1 ;; reload) rh_status_q || exit 7 $1 ;; force-reload) force_reload ;; status) rh_status ;; condrestart|try-restart) rh_status_q || exit 0 ;; *) echo $”Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}” exit 2 esac [/bash]","permalink":"http://www.humen1.com/2011/06/php-fpm-e7-9a-84-e5-90-af-e5-8a-a8-ef-bc-8c-e5-85-b3-e9-97-ad-ef-bc-8c-e9-87-8d-e5-90-af-e8-84-9a-e6-9c-ac-e3-80-90shell-e3-80-91.html","photos":[]},{"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Ubuntu 11.04","date":"2011/05/08","text":"刚升完级，用起来像mac","permalink":"http://www.humen1.com/2011/05/ubuntu-11-04.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"linux下直接用命令转换Unixtime","date":"2011/05/03","text":"一般我们都是用date这个命令来看时间和设置服务器时间，其实他还可以在各种时间格式间转换。 传统的从u转时间的命令是： #date -u –date=”1970-01-01 1187769064 sec GMT” 还有中快捷方式 #date -d @1187769064","permalink":"http://www.humen1.com/2011/05/linux-e4-b8-8b-e7-9b-b4-e6-8e-a5-e7-94-a8-e5-91-bd-e4-bb-a4-e8-bd-ac-e6-8d-a2unixtime.html","photos":[]},{"tags":[{"name":"rsync","slug":"rsync","permalink":"http://www.humen1.com/tags/rsync/"}],"title":"CentOS_5  Rsync 同步服务器文件","date":"2011/04/14","text":"Always use rsync over ssh Since rsync does not provide any security while transferring data it is recommended that you use rsync over ssh . This allows a secure remote connection. Now let us see some examples of rsync. rsync command common options –delete : delete files that don’t exist on sender (system) -v : Verbose (try -vv for more detailed information) -e “ssh options” : specify the ssh as remote shell -a : archive mode -r : recurse into directories -z : compress file data Task : Copy file from a local computer to a remote server Copy file from /www/backup.tar.gz to a remote server called openbsd.nixcraft.in $ rsync -v -e ssh /www/backup.tar.gz jerry@openbsd.nixcraft.in:~ Output: Password: sent 19099 bytes received 36 bytes 1093.43 bytes/sec total size is 19014 speedup is 0.99 Please note that symbol ~ indicate the users home directory (/home/jerry). Task : Copy file from a remote server to a local computer Copy file /home/jerry/webroot.txt from a remote server openbsd.nixcraft.in to a local computer /tmp directory: $ rsync -v -e ssh jerry@openbsd.nixcraft.in:~/webroot.txt /tmp Password Task: Synchronize a local directory with a remote directory $ rsync -r -a -v -e “ssh -l jerry” –delete openbsd.nixcraft.in:/webroot/ /local/webroot Task: Synchronize a remote directory with a local directory $ rsync -r -a -v -e “ssh -l jerry” –delete /local/webroot openbsd.nixcraft.in:/webroot Task: Synchronize a local directory with a remote rsync server $ rsync -r -a -v –delete rsync://rsync.nixcraft.in/cvs /home/cvs Task: Mirror a directory between my “old” and “new” web server/ftp You can mirror a directory between my “old” (my.old.server.com) and “new” web server with the command (assuming that ssh keys are set for password less authentication) $ rsync -zavrR –delete –links –rsh=”ssh -l vivek” my.old.server.com:/home/lighttpd /home/lighttpd /****/ 当需要把服务器上的文件复制到另外的机器上，可用rsync来同步文件。 一、服务器端配置： # yum -y install xinetd # vi /etc/xinetd.d/rsync 将如下代码 service rsync { disable = yes socket_type = stream wait = no user = root server = /usr/bin/rsync server_args = –daemon log_on_failure += USERID } 中的 disable = yes 改成 disable = no 然后启动 xinetd # /etc/init.d/xinetd start 注意：如果服务器上装有防火墙记得要打开端口，默认端口是873 # telnet 127.0.0.1 873 Trying 127.0.0.1… telnet: connect to address 127.0.0.1: Connection refused # iptables -A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp –dport 873 -j ACCEPT # iptables -A INPUT -p tcp -m tcp –dport 873 -j DROP # vi /etc/rsyncd.conf [backup] path = /www auth users = admin uid = root gid = root secrets file = /etc/rsyncd.secrets read only = no [服务器代号] path = 备份文件路径 auth users = 授权帐号 uid = 执行时的uid gid = 执行时的gid secrets file = 密码文件位置 read only = 是否只读 # vi /etc/rsyncd.secrets admin:1234 ＃用户名:密碼 给文件正确的权限 # chown root:root /etc/rsyncd.secrets # chmod 600 /etc/rsyncd.secrets 二、client 端进行同步 客户端默认好像已经装了rsync，没有的话装下： # yum -y install rsync 执行异步同步操作： /usr/bin/rsync -avz –progress admin@192.168.1.105::backup /www 同步命令说明： 1 显示目录内容 命令 —— a) rsync b) rsync -r c) rsync jack@192.168.0.1:: d) rsync ssh_user@192.168.0.1: 命令说明 ——— a) 显示目录内容(第一层) b) 递归显示目录内容 c) 显示远程主机目录内容 注1：端口模式, 基于rsync用户的身份验证 注2：rsync server上的目录必须具有xx7的权限. d) 查看远程主机目录内容 *注1：remote shell模式, 通过ssh连接的基于系统本地用户的身份验证 *注2：这里只使用了一个冒号(:)，同时用户名是远程主机的ssh 用户，密码也是ssh用户对应的密码。 *注3：使用””，则列出文件夹本身的信息。若要列出文件夹内容，应使用”/”。 参数说明 ——— -r 对目录进行递归操作 2 本地目录之间同步 命令 —— a) rsync -av –progress / * 注意(/) *** b) rsync -av –progress c) rsync -avu –progress –delete / d) rsync -av –progress –temp-dir=/tmp / 命令说明 ——— a) 同步src-dir目录下所有文件到dst-dir目录下 b) 同步src-dir目录下所有文件到dst-dir/src-dir目录下 c) 对src-dir目录内容向dst-dir目录下进行差异更新，有增加/更新则添加替换，有减少则对其删减 d) 比a)多了–temp-dir=/tmp，即指定/tmp为临时交换区，这样可以避免因目标目录空间不够引起的无法同步文件的错误。 参数说明 ——— -a 相当于 -rlptgoD 的集合 -u 等同于 –update，在目标文件比源文件新的情况下不更新 -v 显示同步的文件 –progress 显示文件同步时的百分比进度、传输速率 –delete 删除目标目录中多于源目录的文件 3 异地主机之间同步 命令 —— a) rsync -avz –progress jack@192.168.0.1::/ b) rsync -avz –progress jack@192.168.0.1::/ –password-file=/home/jack/rsync.jack c) rsync -avuz –progress –delete jack@192.168.0.1::/ –password-file=/home/jack/rsync.jack d) rsync -avz –progress jack@192.168.0.1::/ 命令说明 ——— a) 同步本地目录的内容到远程主机192.168.0.1的目录下，jack是rsync数据库用户(参见3. /etc/rsync.secrets) b) 通过自动读取用户密码而实现非交互登录文件同步 c) 较b)多了-u和–delete d) 同步远程主机内容到本地目录","permalink":"http://www.humen1.com/2011/04/centos-5-rsync-e5-90-8c-e6-ad-a5-e6-9c-8d-e5-8a-a1-e5-99-a8-e6-96-87-e4-bb-b6.html","photos":[]},{"tags":[{"name":"flash","slug":"flash","permalink":"http://www.humen1.com/tags/flash/"},{"name":"3D","slug":"3D","permalink":"http://www.humen1.com/tags/3D/"},{"name":"actionscript","slug":"actionscript","permalink":"http://www.humen1.com/tags/actionscript/"},{"name":"Molehill","slug":"Molehill","permalink":"http://www.humen1.com/tags/Molehill/"}],"title":"Digging More Into the Molehill","date":"2011/04/01","text":"原文地址： http://www.bytearray.org/?p=2555","permalink":"http://www.humen1.com/2011/04/digging-more-into-the-molehill.html","photos":[]},{"tags":[{"name":"grub","slug":"grub","permalink":"http://www.humen1.com/tags/grub/"}],"title":"清理Ubuntu启动项","date":"2011/02/25","text":"uname -a //查看当前使用的内核 dpkg –get-selections|grep linux //列出所有带linux的软件，主要目地是列出内核 sudo apt-get remove linux-headers-2.6.31-X-XX //卸载旧的内核，其中 X 表示版本，以系统中实际列出的全称为准 sudo apt-get remove linux-image-2.6.31-XX-XX 以上就卸载了多余的内核，一般总是保留最新的内核。在Ubuntu9.10中会自动删除启动项，但在之前的版本中启动项还要我们手动清理，原因就是在 ubuntu9.04或者更早使用的是grub，需要通过编辑menu.lst（sudo gedit /boot/grub/menu.lst），但在ubuntu9.10升级为grub2了，所以就算要手动修改，也不在是编辑menu.lst而是编辑 grub.cfg文件了。 sudo chmod +w /boot/grub/grub.cfg // 默认文件为只读，改为 可读写，如何需要手动修改否则不需要以下步骤 sudo gedit/boot/grub/grub.cfg //修改启动项，删除不再使用的内容","permalink":"http://www.humen1.com/2011/02/e6-b8-85-e7-90-86ubuntu-e5-90-af-e5-8a-a8-e9-a1-b9.html","photos":[]},{"tags":[{"name":"tail","slug":"tail","permalink":"http://www.humen1.com/tags/tail/"}],"title":"Tail 4 Win32","date":"2011/02/24","text":"http://tailforwin32.sourceforge.net/ 用惯了linux，总喜欢用那上面的东西，今天一google还真有win版本的收藏下。 P.S. 贴个更好的 http://www.baremetalsoft.com/baretail/index.php 上面那个不兼容 utf8.这个兼容","permalink":"http://www.humen1.com/2011/02/tail-4-win32.html","photos":[]},{"tags":[{"name":"ilemon","slug":"ilemon","permalink":"http://www.humen1.com/tags/ilemon/"}],"title":"在Ilemon的 第二个月","date":"2011/02/22","text":"这里的人很多，项目也多。 但是没有在qoolu的日子那么充实。在qoolu总是忙个不停。在这里可能太安逸了。 没人管的日子里，自己要自律啊。 seven。。。。","permalink":"http://www.humen1.com/2011/02/e5-9c-a8ilemon-e7-9a-84-e7-ac-ac-e4-ba-8c-e4-b8-aa-e6-9c-88.html","photos":[]},{"tags":[],"title":"Android 解决Hosts只读（需要root）","date":"2011/02/01","text":"TE下输入，就解除只读了 mount -o rw,remount /dev/block/mtdblock3 /system","permalink":"http://www.humen1.com/2011/02/android-e8-a7-a3-e5-86-b3hosts-e5-8f-aa-e8-af-bb-ef-bc-88-e9-9c-80-e8-a6-81root-ef-bc-89.html","photos":[]},{"tags":[],"title":"身分證字號產生器(台湾)","date":"2011/01/30","text":"http://people.debian.org/~paulliu/ROCid.html","permalink":"http://www.humen1.com/2011/01/e8-ba-ab-e5-88-86-e8-ad-89-e5-ad-97-e8-99-9f-e7-94-a2-e7-94-9f-e5-99-a8-e5-8f-b0-e6-b9-be.html","photos":[]},{"tags":[{"name":"flash debugger","slug":"flash-debugger","permalink":"http://www.humen1.com/tags/flash-debugger/"}],"title":"在eclipse调试以及输出Debug信息到文件设置","date":"2011/01/25","text":"在eclipse调试 首先安装调试版flashplayer，官方下载地址为（目前最新版本） http://download.macromedia.com/pub/flashplayer/updaters/10/flashplayer\\_10\\_ax\\_debug.exe 退出MSN,安装flashplayer 在eclipse中点击项目（右键）——properties——Run/Debug Settings——new——Flex Application配置路径即可。 Flex输出Debug信息到文件 Flash Debug Player有两种方法记录日志信息到日志文件中。 1、全局的trace()函数。 2、Logging API。Logging API实现了TraceTarget类，提供类似trace()函数一样的功能。 例如可以记录Flex程序运行时产生的deubg、error、warning信息。 Flash Debug Player保存日志信息到一个叫flashlog.txt的文件中。 flashlog.txt文件的位置 ——————————————————————————— Windows 95/98/ME/2000/XP C:\\Documents and Settings\\username\\Application Data\\Macromedia\\Flash Player\\Logs\\ Windows Vista C:\\Users\\username\\AppData\\Roaming\\Macromedia\\Flash Player\\Logs\\ Mac OS X /Users/username/Library/Preferences/Macromedia/Flash Player/Logs/ Linux /home/username/.macromedia/Flash_Player/Logs/ ——————————————————————————— 提示1：你需要手动创建Logs目录，至少在Windows系统中是这样的。 提示2：上面的路径中提到的username为你的用户名 如果要让Flash Debug Player把日志记录到日志文件中，我们还需要手动创建一个mm.cfg的文件。 mm.cfg文件的位置 ——————————————————————————— Windows 95/98/ME/2000/XP %HOMEDRIVE%\\%HOMEPATH% Windows 2000/XP C:\\Documents and Settings\\username\\ Windows Vista C:\\Users\\username\\ Mac OS X /Library/Application Support/Macromedia Linux /home/username/ ——————————————————————————— 提示：上面的路径中提到的username为你的用户名 mm.cfg文件包含许多控制日志信息的设置项 如果只是记录Error和trace信息到日志文件，只需要在mm.cfg文件中加入下面两行文字。 ErrorReportingEnable=1 TraceOutputFileEnable=1 设置之后，调用trace()方法就可以把输出的日志信息写入到flashlog.txt文件中了。 例如： trace(“Hello,1901!”); 在MXML中加入如下代码，允许记录所有Flex产生的日志信息到flashlog.txt文件中：","permalink":"http://www.humen1.com/2011/01/e5-9c-a8eclipse-e8-b0-83-e8-af-95-e4-bb-a5-e5-8f-8a-e8-be-93-e5-87-badebug-e4-bf-a1-e6-81-af-e5-88-b0-e6-96-87-e4-bb-b6-e8-ae-be-e7-bd-ae.html","photos":[]},{"tags":[{"name":"linux svn","slug":"linux-svn","permalink":"http://www.humen1.com/tags/linux-svn/"}],"title":"[ 转]Linux Svn安装和配置，不结合apache","date":"2011/01/19","text":"http://blog.51yip.com/server/901.html","permalink":"http://www.humen1.com/2011/01/e8-bd-aclinux-svn-e5-ae-89-e8-a3-85-e5-92-8c-e9-85-8d-e7-bd-ae-ef-bc-8c-e4-b8-8d-e7-bb-93-e5-90-88apache.html","photos":[]},{"tags":[],"title":"Orta  Ubuntu Theme","date":"2011/01/13","text":"Ubuntu PPA : Please make absolutely sure you have removed any previous instances of the theme before installing via ppa. To add the ppa and install the theme and the settings manager, type this on a terminal : sudo add-apt-repository ppa:nikount/orta-desktop sudo apt-get update sudo apt-get install orta-theme To install the emerald decorators : sudo apt-get install orta-emerald-decorators To install the Xfwm4 decorators : sudo apt-get install orta-xfwm4-decorators","permalink":"http://www.humen1.com/2011/01/orta-ubuntu-theme.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Fixed -> Error: ‘Umask’ Was Not Declared in This Scope ","date":"2010/12/20","text":"在编译报错的那个cpp里加入 #include &lt;sys/stat.h&gt; In linux","permalink":"http://www.humen1.com/2010/12/fixed-error-e2-80-98umask-e2-80-99-was-not-declared-in-this-scope.html","photos":[]},{"tags":[{"name":"Qoolu","slug":"Qoolu","permalink":"http://www.humen1.com/tags/Qoolu/"}],"title":"The End of Qoolu","date":"2010/12/15","text":"我历尽心血的上海酷噜[Shanghai Qoolu Networks Technology Co., Ltd. ],终于要落下帷幕了。 还记得刚开始 显堂 将我从e魔豆拉来一起作少儿社区，我带着忐忑的心认识了Peter、火山。都是不错的人，很好的朋友。 在这行我们都是门外汉，大家摸索着，时不时的会有冲突。 最后我们的名字叫“酷噜” 这个林子虽然不大，确实什么样的鸟都有。之后的伙伴来了又去、去了又来。到今年的年初，早时期创业的人就只有我和Peter了。 可能我们不懂怎么做游戏，也没有基本的经验，可以说我们被竞争对手彻底打败了。 当Peter告诉我要清算的时候，我莫名的悲伤，虽然老早就预知到了结果，也做好了心理准备，不过这家我从始至终参与的公司就像我的孩子，我对其无比眷恋。 别了，儿啊！","permalink":"http://www.humen1.com/2010/12/the-end-of-qoolu.html","photos":[]},{"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"让Ubuntu 支持4Gbi内存","date":"2010/12/13","text":"公司的台机给我加了2g内存，开机发现只认出3g（bios里是4g–硬件没问题） google一下有2个解决方案 1.装64位系统 2.换内核，换成server版内核，号称支持最多64g【前提是硬件要支持】 权衡一下我还是选方案2 具体操作我用的新立得直接装的-ubuntu的好处么 sudo apt-get install linux-restricted-modules-server linux-image-server linux-headers-server linux-server 装好重启就ok了。。。","permalink":"http://www.humen1.com/2010/12/e8-ae-a9ubuntu-e6-94-af-e6-8c-814gbi-e5-86-85-e5-ad-98.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"flash","slug":"flash","permalink":"http://www.humen1.com/tags/flash/"}],"title":"Flash Tracer -- for Lin :)","date":"2010/12/03","text":"一直在用FF的一个插件叫flashtracer。觉得太麻烦，每次要用都要先开FF。 其实原理很简单不就是度flash echo出来的文本log么，直接在Terminal里显示出来不就好了 #/bin/bashecho “\\033]0; [Flash Tracer] \\007”tail -f ~/.macromedia/Flash_Player/Logs/flashlog.txt 哦，我是在linux里开发AS的～","permalink":"http://www.humen1.com/2010/12/flash-tracer-for-lin.html","photos":[]},{"tags":[],"title":"Blog又恢复了","date":"2010/10/30","text":"原来的 humen1.com 域名被国外的JS买断了，现换一个.net的用！ 这个域名我买它10年，还买了私有化注册，我看那些JS还来捣乱。 自己有一个小角落能写写字，堆堆东西真好啊。","permalink":"http://www.humen1.com/2010/10/blog-e5-8f-88-e6-81-a2-e5-a4-8d-e4-ba-86.html","photos":[]},{"tags":[],"title":"Proc离开。。。","date":"2010/07/31","text":"周五，proc离开了。 这样一来称的上老的员工还剩下nadal。 总的来说我从离开的这些技术身上都获得了许多。每当一位好同事离开的时候我都暗自神伤，毕竟公司在坎坷中一路走来这些同事的努力是分不开的。 公司好像一棵树，我们好似一片片叶子，叶子从嫩芽到凋零，而这棵树我希望能一天天的长大。 希望叶子们看到公司的发展能够得到欣慰，我会为此不懈努力。","permalink":"http://www.humen1.com/2010/07/proc-e7-a6-bb-e5-bc-80-e3-80-82-e3-80-82-e3-80-82.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"},{"name":"gedit","slug":"gedit","permalink":"http://www.humen1.com/tags/gedit/"}],"title":"Gedit 启用 “片段”插件 快捷键冲突","date":"2010/07/09","text":"gedit启用了“片段（snippets）”插件后 和输入法的切换组合键 ctrl+space冲突了 解决方法如下： ＃ sudo vi /usr/lib/gedit-2/plugins/snippets/Document.py 找到 SPACE_KEY_VAL = (gtk.keysyms.space,) 改成 SPACE_KEY_VAL = (gtk.keysyms.Return,) 重启gedit就ok了","permalink":"http://www.humen1.com/2010/07/gedit-e5-90-af-e7-94-a8-e2-80-9c-e7-89-87-e6-ae-b5-e2-80-9d-e6-8f-92-e4-bb-b6-e5-bf-ab-e6-8d-b7-e9-94-ae-e5-86-b2-e7-aa-81.html","photos":[]},{"tags":[{"name":"eclipse","slug":"eclipse","permalink":"http://www.humen1.com/tags/eclipse/"},{"name":"快捷键","slug":"快捷键","permalink":"http://www.humen1.com/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"}],"title":"Eclipse必须的快捷","date":"2010/05/18","text":"Ctrl+1 快速修复 Ctrl+D: 删除当前行 Alt+↓ 当前行和下面一行交互位置 Alt+↑ 当前行和上面一行交互位置 Alt+← 前一个编辑的页面 Alt+→ 下一个编辑的页面 Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性 Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后) Shift+Ctrl+Enter 在当前行插入空行(原理同上条) Ctrl+Q 定位到最后编辑的地方 Ctrl+L 定位在某行 (对于程序超过100的人就有福音了) Ctrl+M 最大化当前的Edit或View (再按则反之) Ctrl+/ 注释当前行,再按则取消注释 Ctrl+O 快速显示 OutLine Ctrl+T 快速显示当前类的继承结构 Ctrl+W 关闭当前Editer Ctrl+K 参照选中的Word快速定位到下一个 Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示) Ctrl+/(小键盘) 折叠当前类中的所有代码 Ctrl+×(小键盘) 展开当前类中的所有代码 Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替) Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作) Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了) Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查) Ctrl+Shift+F4 关闭所有打开的Editer Ctrl+Shift+X 把当前选中的文本全部变味小写 Ctrl+Shift+Y 把当前选中的文本全部变为小写 Ctrl+Shift+F 格式化当前代码 Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之) 下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了) Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力) Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用) Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定) Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候) Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能) Alt+Shift+I 合并变量(可能这样说有点不妥Inline) Alt+Shift+V 移动函数和变量(不怎么常用) Alt+Shift+Z 重构的后悔药(Undo)","permalink":"http://www.humen1.com/2010/05/eclipse-e5-bf-85-e9-a1-bb-e7-9a-84-e5-bf-ab-e6-8d-b7.html","photos":[]},{"tags":[],"title":"Jquery Ui - 添加Input & 自动补全","date":"2010/04/18","text":"`var availableTags = [“上海”,”北京”,”c++”, “java”, “php”, “coldfusion”, “javascript”, “asp”, “ruby”, “python”, “c”, “scala”, “groovy”, “haskell”, “perl”]; $(function() { $(“input#add”).click(function(){ addSpot(this); }); });function addSpot(obj) { $(‘div.ui-widget’).append(‘‘); $(“input.ii”).autocomplete({ source: availableTags });}; `","permalink":"http://www.humen1.com/2010/04/jquery-ui-e6-b7-bb-e5-8a-a0input-e8-87-aa-e5-8a-a8-e8-a1-a5-e5-85-a8.html","photos":[]},{"tags":[],"title":"Linux 批量删除.Svn目录","date":"2010/04/12","text":"find . -type d -name “.svn”|xargs rm -rf","permalink":"http://www.humen1.com/2010/04/linux-e6-89-b9-e9-87-8f-e5-88-a0-e9-99-a4-svn-e7-9b-ae-e5-bd-95.html","photos":[]},{"tags":[],"title":"升级Ubuntu 9.04下的subversion","date":"2010/03/19","text":"deb http://ppa.launchpad.net/anders-kaseorg/subversion-1.6/ubuntu jaunty main deb-src http://ppa.launchpad.net/anders-kaseorg/subversion-1.6/ubuntu jaunty main 增加源然后更新 然后： sudo apt-get update 删除当前版本的svn： sudo apt-get remove subversion 安装新版本的svn： sudo apt-get install subversion 查看新版本： svn –version svn，版本 1.6.5 (r38866) 编译于 Sep 2 2009，05:13:23","permalink":"http://www.humen1.com/2010/03/e5-8d-87-e7-ba-a7ubuntu-9-04-e4-b8-8b-e7-9a-84subversion.html","photos":[]},{"tags":[],"title":"Putty for S60","date":"2010/02/12","text":"http://sourceforge.net/projects/s2putty/files/s2putty/1.5.1/ 这样我的E71就可以随时随地管理服务器了。","permalink":"http://www.humen1.com/2010/02/putty-for-s60.html","photos":[]},{"tags":[],"title":"[Linux]查看服务器的型号","date":"2010/02/09","text":"dmidecode -s system-product-name","permalink":"http://www.humen1.com/2010/02/linux-e6-9f-a5-e7-9c-8b-e6-9c-8d-e5-8a-a1-e5-99-a8-e7-9a-84-e5-9e-8b-e5-8f-b7.html","photos":[]},{"tags":[],"title":"Flash 安全策略文件","date":"2010/01/24","text":"历史问题，公司之前的项目采用的 flash client &amp; c++ socket server 架构里总有些拖泥带水的环节，比如 xmlSocket 实现的加载策略文件这一说。对运维来说简直就是噩梦。 昨天花时间研究了一下。把这一环砍掉了。 具体做法只有一步，那就是在socket server 服务端的根目录下放上crossdomain.xml，就是那么简单。 而之前为什么要用xmlsocket来解决策略文件这个问题呢，我分析了一下，因为链接server用的是IP 比如 192.168.1.70 这样的话就必须在 http：//192.168.1.70/这个地址上可以访问到xml 之前访问不到，于是就有了xmlsocket这一说。 上帝保佑我","permalink":"http://www.humen1.com/2010/01/flash-e5-ae-89-e5-85-a8-e7-ad-96-e7-95-a5-e6-96-87-e4-bb-b6.html","photos":[]},{"tags":[],"title":"修复Grub","date":"2010/01/16","text":"重装win7后，mbr被win7写入信息导致grub无法工作解决方法 从CD-ROM启动,从Live CD启动进入桌面。 打开终端或者切换到一个tty（Ctrl+Alt+F1）。 输入:sudo grub 输入:find /boot/grub/stage1 ##有人说这一步不用,不过个人感觉还是应该加上这一步 输入:root (hd0,x) ##输入find命令反馈的数据 输入:setup (hd0) ##如果想用xp进行多系统引导就写(hd0,x) 输入:quit ##退出grub。","permalink":"http://www.humen1.com/2010/01/e4-bf-ae-e5-a4-8dgrub.html","photos":[]},{"tags":[],"title":"Ubuntu Server 的Apache默认是没有支持htaccess。","date":"2010/01/08","text":"只要简单的设置就可以实现想要的功能。 执行 sudo a2enmod rewrite 然后重启就好了","permalink":"http://www.humen1.com/2010/01/ubuntu-server-e7-9a-84apache-e9-bb-98-e8-ae-a4-e6-98-af-e6-b2-a1-e6-9c-89-e6-94-af-e6-8c-81htaccess-e3-80-82.html","photos":[]},{"tags":[],"title":"Hp Dv4 Ubuntu 9.04声音问题正解 （包含其他机型）","date":"2009/12/25","text":"http://ubuntuforums.org/showthread.php?t=1043568 国外的ubuntu论坛上找来的，崇拜老外的分享精神，我用了3小时才找到正解。希望同样有 问题的人能节约这三小时 英文不怎么样的兄台我给点线索 主要要修改/etc/modprobe.d/alsa-base.conf文件 在文件尾加上一句 options snd-hda-intel xxx=xxx 两个xxx是重点部分，贴子里有各种机型对应的内容，都是老外收集的（感动！） 当然也有 alsa的重启方法，可以节约时间不用reboot（太周到了，我都感动的要流泪了） 支持开源OS","permalink":"http://www.humen1.com/2009/12/hp-dv4-ubuntu-9-04-e5-a3-b0-e9-9f-b3-e9-97-ae-e9-a2-98-e6-ad-a3-e8-a7-a3-ef-bc-88-e5-8c-85-e5-90-ab-e5-85-b6-e4-bb-96-e6-9c-ba-e5-9e-8b-ef-bc-89.html","photos":[]},{"tags":[],"title":"Modprobe","date":"2009/12/25","text":"modprobe(module probe) 功能说明：自动处理可载入模块。 语 法：modprobe [-acdlrtvV][–help][模块文件][符号名称 = 符号值] 补充说明：modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据depmod所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。 参 数： -a或–all 载入全部的模块。 -c或–show-conf 显示所有模块的设置信息。 -d或–debug 使用排错模式。 -l或–list 显示可用的模块。 -r或–remove 模块闲置不用时，即自动卸载模块。 -t或–type 指定模块类型。 -v或–verbose 执行时显示详细的信息。 -V或–version 显示版本信息。 -help 显示帮助。","permalink":"http://www.humen1.com/2009/12/modprobe.html","photos":[]},{"tags":[],"title":"推荐国外一个很好的转换格式站点","date":"2009/12/15","text":"http://www.online-convert.com/ 我用了转换图标的功能，但是我看到上面远远不只转换图标","permalink":"http://www.humen1.com/2009/12/e6-8e-a8-e8-8d-90-e5-9b-bd-e5-a4-96-e4-b8-80-e4-b8-aa-e5-be-88-e5-a5-bd-e7-9a-84-e8-bd-ac-e6-8d-a2-e6-a0-bc-e5-bc-8f-e7-ab-99-e7-82-b9.html","photos":[]},{"tags":[],"title":"Ubuntu Tweak","date":"2009/12/14","text":"How to add the source of Ubuntu Tweak 添加源 open your terminal, first import the key: 开一控制台终端，下载及添加密钥 sudo apt-key adv –recv-keys –keyserver keyserver.ubuntu.com FE85409EEAB40ECCB65740816AF0E1940624A220 type the command to run gedit(or other editor in your opinion) to modify the sources.list: 编辑/etc/apt/sources.list文件，按照你的Ubuntu版本加入下面两行： sudo gedit /etc/apt/sources.list And put the two line into it(If you are using Ubuntu 8.04 Hardy or early) : （注：我一般用System-&gt;Administration-&gt;Software Sources管理器添加第三方源） deb http://ppa.launchpad.net/tualatrix/ubuntu hardy main deb-src http://ppa.launchpad.net/tualatrix/ubuntu hardy main Or Ubuntu 8.10 Intrepid: deb http://ppa.launchpad.net/tualatrix/ubuntu intrepid main deb-src http://ppa.launchpad.net/tualatrix/ubuntu intrepid main Or Ubuntu 9.04 Jaunty: deb http://ppa.launchpad.net/tualatrix/ubuntu jaunty main deb-src http://ppa.launchpad.net/tualatrix/ubuntu jaunty main Then update the source and install or upgrade Ubuntu Tweak: 然后更新源并安装Ubuntu Tweak。今后如有更新，系统会提示。 sudo apt-get update sudo apt-get install ubuntu-tweak if you have installed, just type: sudo apt-get dist-upgrade","permalink":"http://www.humen1.com/2009/12/ubuntu-tweak.html","photos":[]},{"tags":[],"title":"PHP   Pack()函数","date":"2009/12/14","text":"定义和用法 pack() 函数把数据装入一个二进制字符串。 语法 pack(format,args+) 参数 描述 format 必需。规定在包装数据时所使用的格式。 args+ 可选。规定被包装的一个或多个参数。 format 参数的可能值： * a - NUL-padded string * A - SPACE-padded string * h - Hex string, low nibble first * H - Hex string, high nibble first * c - signed char * C - unsigned char * s - signed short (always 16 bit, machine byte order) * S - unsigned short (always 16 bit, machine byte order) * n - unsigned short (always 16 bit, big endian byte order) * v - unsigned short (always 16 bit, little endian byte order) * i - signed integer (machine dependent size and byte order) * I - unsigned integer (machine dependent size and byte order) * l - signed long (always 32 bit, machine byte order) * L - unsigned long (always 32 bit, machine byte order) * N - unsigned long (always 32 bit, big endian byte order) * V - unsigned long (always 32 bit, little endian byte order) * f - float (machine dependent size and representation) * d - double (machine dependent size and representation) * x - NUL byte * X - Back up one byte * @ - NUL-fill to absolute position 输出： PHP 输出： PHP","permalink":"http://www.humen1.com/2009/12/php-pack-e5-87-bd-e6-95-b0.html","photos":[]},{"tags":[],"title":"PHP 类Typeof()方法  Gettype()","date":"2009/12/14","text":"PHP gettype()函数用法详解，gettype()函数的主要作用是：获取变量的类型。 gettype()函数的语法：string gettype ( mixed var)","permalink":"http://www.humen1.com/2009/12/php-e7-b1-bbtypeof-e6-96-b9-e6-b3-95-gettype.html","photos":[]},{"tags":[],"title":"Makefile 总述","date":"2009/12/09","text":"http://www.linuxsir.org/main/doc/gnumake/GNUmake\\_v3.80-zh\\_CN_html/make-03.html","permalink":"http://www.humen1.com/2009/12/makefile-e6-80-bb-e8-bf-b0.html","photos":[]},{"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Install Ibus on Ubuntu","date":"2009/12/08","text":"iBus 1.2 * intrepid: deb http://ppa.launchpad.net/ibus-dev/ibus-1.2-intrepid/ubuntu intrepid main * jaunty: deb http://ppa.launchpad.net/ibus-dev/ibus-1.2-jaunty/ubuntu jaunty main * karmic: deb http://ppa.launchpad.net/ibus-dev/ibus-1.2-karmic/ubuntu karmic main IBus 1.1 Main Page: https://launchpad.net/~ibus-dev/+archive/ppa 8.04: Hardy not supported. 8.10 Intrepid 1. add following line to /etc/apt/sources.list, deb http://ppa.launchpad.net/ibus-dev/ppa/ubuntu intrepid main 2. run $ sudo apt-get update, 3. run $ sudo apt-get install ibus ibus-pinyin 4. run $ im-switch -s ibus 5. logout and re-login 9.04 Jaunty similar with 8.10, but use following line: deb http://ppa.launchpad.net/ibus-dev/ppa/ubuntu jaunty main 9.10 Karmic similar with 8.10, but use following line: deb http://ppa.launchpad.net/lidaobing/ibus-910/ubuntu karmic main","permalink":"http://www.humen1.com/2009/12/install-ibus-on-ubuntu.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"PHP:内置进制转换函数","date":"2009/12/04","text":"bindec() – 二进制转换为十进制 decbin() – 十进制转换为二进制 dechex() – 十进制转换为十六进制 decoct() – 十进制转换为八进制 hexdec() – 十六进制转换为十进制 octdec() – 八进制转换为十进制 base_convert()– 在任意进制之间转换数字","permalink":"http://www.humen1.com/2009/12/php-e5-86-85-e7-bd-ae-e8-bf-9b-e5-88-b6-e8-bd-ac-e6-8d-a2-e5-87-bd-e6-95-b0.html","photos":[]},{"tags":[],"title":"SVN Status!","date":"2009/12/04","text":"‘ ‘ 没有修改。 ‘A’ 预定要添加的项目。 ‘D’ 预定要删除的项目。 ‘M’ 项目已经修改了。 ‘R’ 项目在工作拷贝中已经被替换了。这意味着文件预定要删除，然后有一个同样名称的文件要在同一个位置替换它。 ‘C’ 项目的内容（相对于属性）与更新得到的数据冲突了。 ‘X’ 项目与外部定义相关。 ‘I’ 项目被忽略（例如使用svn:ignore属性）。 ‘?’ 项目不在版本控制之下。 ‘!’ 项目已经丢失（例如，你使用svn移动或者删除了它）。这也说明了一个目录不是完整的（一个检出或更新中断）。 ‘~’ 项目作为一种对象（文件、目录或链接）纳入版本控制，但是已经被另一种对象替代。 第二列告诉一个文件或目录的属性的状态。 ‘ ‘ 没有修改。 ‘M’ 这个项目的属性已经修改。 ‘C’ 这个项目的属性与从版本库得到的更新有冲突。 第三列只在工作拷贝锁定时才会出现。（见“有时你只需要清理”一节。） ‘ ‘ 项目没有锁定。 ‘L’ 项目已经锁定。 第四列只在预定包含历史添加的项目出现。 ‘ ‘ 没有历史预定要提交。 ‘+’ 历史预定要伴随提交。 第五列只在项目跳转到相对于它的父目录时出现（见“使用分支”一节）。 ‘ ‘ 项目是它的父目录的孩子。 ‘S’ 项目已经转换。 第六列显示锁定信息。 ‘ ‘ 当使用–show-updates，文件没有锁定。如果不使用–show-updates，这意味着文件在工作拷贝被锁定。 K 文件锁定在工作拷贝。 O 文件被另一个工作拷贝的另一个用户锁定，只有在使用–show-updates时显示。 T 文件锁定在工作拷贝，但是锁定被“窃取”而不可用。文件当前锁定在版本库，只有在使用–show-updates时显示。 B 文件锁定在工作拷贝，但是锁定被“破坏”而不可用。文件当前锁定在版本库，只有在使用–show-updates时显示。 过期信息出现在第七列（只在使用–show-updates选项时出现）。 ‘ ‘ 这个项目在工作拷贝是最新的。 ‘*’ 在服务器这个项目有了新的修订版本。","permalink":"http://www.humen1.com/2009/12/svn-status.html","photos":[]},{"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"amarok2.X Mp3不能播放的解决方法","date":"2009/12/03","text":"不能正常播放，是缺少在KDE桌面下运行的环境和相应的解码包！ sudo apt-get install libxine1-ffmpeg sudo apt-get install kubuntu-restricted-extras","permalink":"http://www.humen1.com/2009/12/amarok2-x-mp3-e4-b8-8d-e8-83-bd-e6-92-ad-e6-94-be-e7-9a-84-e8-a7-a3-e5-86-b3-e6-96-b9-e6-b3-95.html","photos":[]},{"tags":[{"name":"flash","slug":"flash","permalink":"http://www.humen1.com/tags/flash/"}],"title":"FDT3.5beta破解补丁","date":"2009/11/11","text":"http://www.flashj.cn/wp/fdt35beta-crack.html","permalink":"http://www.humen1.com/2009/11/fdt3-5beta-e7-a0-b4-e8-a7-a3-e8-a1-a5-e4-b8-81.html","photos":[]},{"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://www.humen1.com/tags/Ubuntu/"}],"title":"Configure的时候可能回出现 Configure: Error: No XML Parser Was Found: Expat or Libxml 2.x Required","date":"2009/11/10","text":"安装以下库就可以解决 apt-get install libxml2 libxml2-dev expat","permalink":"http://www.humen1.com/2009/11/configure-e7-9a-84-e6-97-b6-e5-80-99-e5-8f-af-e8-83-bd-e5-9b-9e-e5-87-ba-e7-8e-b0-configure-error-no-xml-parser-was-found-expat-or-libxml-2-x-required.html","photos":[]},{"tags":[],"title":"C++ Explode()","date":"2009/11/09","text":"用惯了php里的explode函数，迁移到c＋＋觉得无所适从 网上找了这个方法，经过验证可以使用，中文也行 /* * C++ Explode Function * Written by Alec Hussey * License: Public Domain */ #include #include #include #include std::vector explode(char *sep, std::string src){ std::vector output; boost::char_separator separator(sep); boost::tokenizer &gt; tokens(src, separator); boost::tokenizer &gt;::iterator token_iter; for (token\\_iter = tokens.begin(); token\\_iter != tokens.end(); token_iter++) output.push\\_back(*token\\_iter); return output;}","permalink":"http://www.humen1.com/2009/11/c-explode.html","photos":[]},{"tags":[],"title":"查看端口Linux","date":"2009/11/02","text":"netstat -ltn 查看linux的端口使用情况 netstat -a 查看所有的服务端口 netstat -ap 查看所有的服务端口并显示对应的服务程序名 nmap ＜扫描类型＞＜扫描参数＞ 例如： nmap localhost nmap -p 1024-65535 localhost nmap -PT 192.168.1.127-245 当我们使用 netstat -apn 查看网络连接的时候，会发现很多类似下面的内容： Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 52 218.104.81.152:7710 211.100.39.250:29488 ESTABLISHED 6111/1 显示这台服务器开放了7710端口，那么这个端口属于哪个程序呢？我们可以使用 lsof -i :7710 命令来查询： COMMAND PID USER FD TYPE DEVICE SIZE NODE NAME sshd 1990 root 3u IPv4 4836 TCP *:7710 (LISTEN) 这样，我们就知道了7710端口是属于sshd程序的。","permalink":"http://www.humen1.com/2009/11/e6-9f-a5-e7-9c-8b-e7-ab-af-e5-8f-a3linux.html","photos":[]},{"tags":[],"title":"Grub2   ?  menu.lst哪里去了？","date":"2009/10/24","text":"换了ubuntu 9.1发现grub的menu.lst么了，那怎么办？ 网上说是/boot/grub/grub.cfg 但是一看这个文件。。。。开头就是 DO NOT EDIT THIS FILE 于是去https://wiki.ubuntu.com/Grub2学习了一下 找到了答案 修改 /etc/default/grub 就可以 其实我要修改的就是 启动记录功能 将 GRUB_DEFAULT=0 变成 GRUB_DEFAULT=saved 就ok了 修改好别忘记运行 update-grub 更新/boot/grub/grub.cfg","permalink":"http://www.humen1.com/2009/10/grub2-menu-lst-e5-93-aa-e9-87-8c-e5-8e-bb-e4-ba-86-ef-bc-9f.html","photos":[]},{"tags":[],"title":"Ubuntu 挂载CD虚拟镜像","date":"2009/10/21","text":"Cue/Bin 镜像 (.cue/.bin) 必须转换才能使用. 使用bchunk可以转换. o 安装bchunk: sudo apt-get install bchunk o 使用bchunk转换: bchunk myfile.bin myfile.cue myfile 转换后会得到一个 .iso 下面是挂载一个ISO文件的方法： sudo mkdir /media/cdimage ＃建立一个文件夹作为ISO挂载点 sudo mount -o loop myfile.iso /media/cdimage ＃挂载ISO文件，使用参数 -o loop 使用你想挂载的iso文件代替myfile.iso。 挂载一个镜像文件使之能被写入，使用下面的命令： sudo mkdir /media/cdimage sudo mount -o rw,loop myfile.iso /media/cdimage 卸载镜像文件： sudo umount /media/cdimage rmdir /media/cdimage","permalink":"http://www.humen1.com/2009/10/ubuntu-e6-8c-82-e8-bd-bdcd-e8-99-9a-e6-8b-9f-e9-95-9c-e5-83-8f.html","photos":[]},{"tags":[],"title":"Ubuntu 刺耳的警报！","date":"2009/10/15","text":"当你在系统内做一些不正确事情的时候，系统会发出刺耳的BEEP~~BEEP声音 是不是忍受够了？赶紧用命令关掉它吧！！！ 在终端中输入： rmmod pcspkr 如果你还是想它原音重现，那就打开它： modprobe pcspkr","permalink":"http://www.humen1.com/2009/10/ubuntu-e5-88-ba-e8-80-b3-e7-9a-84-e8-ad-a6-e6-8a-a5-ef-bc-81.html","photos":[]},{"tags":[],"title":"I Want Trackpoint!","date":"2009/10/11","text":"本子是IBM R60e 系统是 9.04 红帽＋中键的组合一直不能用，使用时真的很不便，在网上看到了篇文章就想try一下，果然有效。 1.首先键盘设定选择为 IBM生产 型号 R60 2.功能实现依赖 sysfsutils文件安装： sudo apt-get install sysfsutils 3.sudo gedit /etc/hal/fdi/policy/mouse-wheel.fdi 写入代码： true26 74 54 5true 4.保存 重启。 5.在http://sourceforge.net/projects/tpctl/ 可以下载一个 configure-trackpoint_0.7-1_i386.deb 功能完全可用","permalink":"http://www.humen1.com/2009/10/i-want-trackpoint.html","photos":[]},{"tags":[],"title":"Ubuntu快捷键图标","date":"2009/10/10","text":"在面板上的快捷方式图标实在难看，于是我决定转个图标 png －》 svg 用inkscape这个软件 先导入png 然后全选 菜单栏上 效果－》图像－》嵌入所有图像 然后另存为。。 .svg 就ok 用root权限把图标 放到系统图标目录就ok","permalink":"http://www.humen1.com/2009/10/ubuntu-e5-bf-ab-e6-8d-b7-e9-94-ae-e5-9b-be-e6-a0-87.html","photos":[]},{"tags":[],"title":"在线图标转换","date":"2009/10/09","text":"http://iconverticons.com/","permalink":"http://www.humen1.com/2009/10/e5-9c-a8-e7-ba-bf-e5-9b-be-e6-a0-87-e8-bd-ac-e6-8d-a2.html","photos":[]},{"tags":[],"title":"Google Chrome Frame","date":"2009/09/28","text":"Enable open web technologies in Internet Explorer Google Chrome Frame is an early-stage open source plug-in that seamlessly brings Google Chrome’s open web technologies and speedy JavaScript engine to Internet Explorer. With Google Chrome Frame, you can: * Start using open web technologies - like the HTML5 canvas tag - right away, even technologies that aren’t yet supported in Internet Explorer 6, 7, or 8. * Take advantage of JavaScript performance improvements to make your apps faster and more responsive. link","permalink":"http://www.humen1.com/2009/09/google-chrome-frame.html","photos":[]},{"tags":[],"title":"Picasa for Linux","date":"2009/09/28","text":"Picasa 3.0 for Linux (beta) Picasa 2.7 still available. Instructions: Picasa is free photo software from Google. This version is Linux compatible. Picasa won’t delete your pictures or put them online without your permission. This is a preview of the upcoming release of Picasa 3 for Linux. We encourage you to try out this beta release and provide feedback to help us improve our product. Please see http://www.google.com/linuxrepositories/testrepo.html for information on using Google’s Linux Software Testing Repository to install Picasa 3 for Linux. click here","permalink":"http://www.humen1.com/2009/09/picasa-for-linux.html","photos":[]},{"tags":[],"title":"孔子诞辰","date":"2009/09/28","text":"孔子（前551年9月28日－前479年4月11日），子姓[1]孔氏，名丘[2]，字仲尼，鲁（今中国山东曲阜）人，中国春秋末期的思想家和教育家。孔子是中华文化中的核心学说儒家的首代宗师，集华夏上古文化之大成，在世时已被誉为“天纵之圣”、“天之木铎”，是当时社会上最博学者之一，并且被后世统治者尊为至圣[3]、至圣先师、万世师表。孔子和他创立的儒家思想对中国和朝鲜半岛、日本、越南等地区有深远的影响，这些地区又被称为儒家文化圈。","permalink":"http://www.humen1.com/2009/09/e5-ad-94-e5-ad-90-e8-af-9e-e8-be-b0.html","photos":[]},{"tags":[],"title":"TestNG  Java的单元测试","date":"2009/09/28","text":"最近业务上和Java相交，收集一些有用的东东。 testNG是相对Junit的单元测试工具，不知道为什么我总喜欢用非主流的东东 以下是我收集的一些文章 TestNG 使 Java 单元测试轻而易举 TestNG简介及插件 追求代码质量: JUnit 4 与 TestNG 的对比 还有就是官方网站","permalink":"http://www.humen1.com/2009/09/testng-java-e7-9a-84-e5-8d-95-e5-85-83-e6-b5-8b-e8-af-95.html","photos":[]},{"tags":[],"title":"距离TOP还有漫长的路","date":"2009/09/28","text":"想变强大，目前看来是要经历好长的一断路的。 本以为写好代码就是自己最终目标，不过这个立意太低了。 “程序员”这个魔咒，要摆脱它，就要努力去尝试不同的角色，不同的新事务。 时时update自己的想法，因为想法主导了自己的发展。 现在，我对TOP的理解已经不是写好代码那么简单了。 我要让公司如同车轮一般飞转。公司的需要才是我的使命！","permalink":"http://www.humen1.com/2009/09/e8-b7-9d-e7-a6-bbtop-e8-bf-98-e6-9c-89-e6-bc-ab-e9-95-bf-e7-9a-84-e8-b7-af.html","photos":[]},{"tags":[],"title":"一个比较快的Keyserver","date":"2009/09/23","text":"keyserver.fabbione.net ubuntu.com的太慢了经常超时","permalink":"http://www.humen1.com/2009/09/e4-b8-80-e4-b8-aa-e6-af-94-e8-be-83-e5-bf-ab-e7-9a-84keyserver.html","photos":[]},{"tags":[],"title":"工作需要，收藏祖国各","date":"2009/09/17","text":"代码 名称 440100000 广州市 440101000 市辖区 440102000 东山区 440103000 荔湾区 440104000 越秀区 440105000 海珠区 440106000 天河区 440107000 芳村区 440111000 白云区 440112000 黄埔区 440113000 番禺区 440114000 花都区 440183000 增城市 440184000 从化市 440190000 开发区 440200000 韶关市 440201000 市辖区 440202000 北江区 440203000 武江区 440204000 浈江区 440221000 曲江县 440222000 始兴县 440224000 仁化县 440229000 翁源县 440232000 乳源瑶族自治县 440233000 新丰县 440281000 乐昌市 440282000 南雄市 440300000 深圳市 440301000 市辖区 440302000 未知 440303000 罗湖区 440304000 福田区 440305000 南山区 440306000 宝安区 440307000 龙岗区 440308000 盐田区 440400000 珠海市 440401000 市辖区 440402000 香洲区 440403000 斗门区 440404000 金湾区 440500000 汕头市 440501000 市辖区 440506000 达濠区 440507000 龙湖区 440508000 金园区 440509000 升平区 440510000 河浦区 440511000 金平区 440512000 濠江区 440513000 潮阳区 440514000 潮南区 440515000 澄海区 440523000 南澳县 440582000 潮阳市 440583000 澄海市 440600000 佛山市 440601000 市辖区 440604000 禅城区 440605000 南海区 440606000 顺德区 440607000 三水区 440608000 高明区 440700000 江门市 440701000 市辖区 440703000 蓬江区 440704000 江海区 440705000 新会区 440781000 台山市 440783000 开平市 440784000 鹤山市 440785000 恩平市 440800000 湛江市 440801000 市辖区 440802000 赤坎区 440803000 霞山区 440804000 坡头区 440805000 东山镇 440806000 开发区 440811000 麻章区 440823000 遂溪县 440825000 徐闻县 440881000 廉江市 440882000 雷州市 440883000 吴川市 440900000 茂名市 440901000 市辖区 440902000 茂南区 440903000 茂港区 440923000 电白县 440981000 高州市 440982000 化州市 440983000 信宜市 441200000 肇庆市 441201000 市辖区 441202000 端州区 441203000 鼎湖区 441223000 广宁县 441224000 怀集县 441225000 封开县 441226000 德庆县 441227000 大旺区 441283000 高要市 441284000 四会市 441300000 惠州市 441301000 市辖区 441302000 惠城区 441322000 博罗县 441323000 惠东县 441324000 龙门县 441381000 惠阳市 441400000 梅州市 441401000 市辖区 441402000 梅江区 441421000 梅县 441422000 大埔县 441423000 丰顺县 441424000 五华县 441426000 平远县 441427000 蕉岭县 441481000 兴宁市 441500000 汕尾市 441501000 市辖区 441502000 城区 441503000 红海湾区 441521000 海丰县 441523000 陆河县 441581000 陆丰市 441600000 河源市 441601000 市辖区 441602000 源城区 441621000 紫金县 441622000 龙川县 441623000 连平县 441624000 和平县 441625000 东源县 441700000 阳江市 441701000 市辖区 441702000 江城区 441703000 未知 441705000 农垦 441721000 阳西县 441723000 阳东县 441781000 阳春市 441800000 清远市 441801000 市辖区 441802000 清城区 441821000 佛冈县 441823000 阳山县 441825000 连山壮族瑶族自治县 441826000 连南瑶族自治县 441827000 清新县 441881000 英德市 441882000 连州市 441900000 东莞市 442000000 中山市 445100000 潮州市 445101000 市辖区 445102000 湘桥区 445103000 枫溪区 445121000 潮安县 445122000 饶平县 445200000 揭阳市 445201000 市辖区 445202000 榕城区 445221000 揭东县 445222000 揭西县 445224000 惠来县 445281000 普宁市 445300000 云浮市 445301000 市辖区 445302000 云城区 445321000 新兴县 445322000 郁南县 445323000 云安县 445381000 罗定市 110000000 北京市 120000000 天津市 130000000 河北省 140000000 山西省 150000000 内蒙古自治区 210000000 辽宁省 220000000 吉林省 230000000 黑龙江省 310000000 上海市 320000000 江苏省 330000000 浙江省 340000000 安徽省 350000000 福建省 360000000 江西省 370000000 山东省 410000000 河南省 420000000 湖北省 430000000 湖南省 440000000 广东省 450000000 广西壮族自治区 460000000 海南省 500000000 重庆市 510000000 四川省 520000000 贵州省 530000000 云南省 540000000 西藏自治区 610000000 陕西省 620000000 甘肃省 630000000 青海省 640000000 宁夏回族自治区 650000000 新疆维吾尔自治区 710000000 台湾省 810000000 香港特别行政区 820000000 澳门特别行政区 000000000 未申报户口 999999999 外国","permalink":"http://www.humen1.com/2009/09/e5-b7-a5-e4-bd-9c-e9-9c-80-e8-a6-81-ef-bc-8c-e6-94-b6-e8-97-8f-e7-a5-96-e5-9b-bd-e5-90-84.html","photos":[]},{"tags":[],"title":"Ubuntu操作基本快捷键","date":"2009/09/17","text":"* 打开主菜单 = Alt + F1 * 运行 = Alt + F2 * 显示桌面 = Ctrl + Alt + d * 最小化当前窗口 = Alt + F9 * 最大化当前窗口 = Alt + F10 * 关闭当前窗口 = Alt + F4 * 截取全屏 = Print Screen * 截取窗口 = Alt + Print Screen 默认特殊快捷键 * 展示所有窗口程序 = F10 * 展示当前窗口最上层程序 = F11 * 展示当前窗口所有程序 = F12 * 切换窗口 = Alt + Tab * 旋转3D桌面 = Ctrl + Alt + 左/右箭头（也可以把鼠标放在标题栏或桌面使用滚轮切换） * 旋转3D桌面（ 活动窗口跟随） = Ctrl + Shift + Alt + 左/右箭头 * 手动旋转3D桌面 = Ctrl + Alt + 左键单击并拖拽桌面空白处 * 窗口透明/不透明 = possible with the “transset” utility or Alt + 滚轮 * 放大一次 = 超级键 + 右击 * 手动放大 = 超级键 + 滚轮向上 * 手动缩小 = 超级键 + 滚轮向下 * 移动窗口 = Alt + 左键单击 * 移动窗口时贴住边框 = 左键开始拖动后再 Ctrl + Alt * 调整窗口大小 = Alt + 中击 * Bring up the window below the top window = Alt + middle-click * 动态效果减速 = Shift + F10 * 水纹 = 按住 Ctrl+超级键 * 雨点 = Shift-F9 * 桌面展开＝ Ctrl + Alt + 下箭头，然后按住 Ctrl + Alt 和左/右箭头选择桌面","permalink":"http://www.humen1.com/2009/09/ubuntu-e6-93-8d-e4-bd-9c-e5-9f-ba-e6-9c-ac-e5-bf-ab-e6-8d-b7-e9-94-ae.html","photos":[]},{"tags":[],"title":"Ubuntu 双屏显示","date":"2009/09/15","text":"升级到了9.04貌似原生支持。 我的笔记本是IBM R60 显卡 是集成的 intel 945g 在 系统－》首选项－》显示 中会发现有两个屏幕，启用你的扩展屏，并且不要选中 镜像，这样你就有个扩展的桌面了","permalink":"http://www.humen1.com/2009/09/ubuntu-e5-8f-8c-e5-b1-8f-e6-98-be-e7-a4-ba.html","photos":[]},{"tags":[],"title":"Ubuntu 升级9.04版本后R60e 音量快捷键失效","date":"2009/09/14","text":"出现的问题如题 解决方法 打开终端输入 echo enable,0x00ffffff &gt; /proc/acpi/ibm/hotkey 回车 问题就解决了，但是下次开机有可能又失效了 那就在 /etc/rc.local里加上这句 记得加在 exit 0 之前","permalink":"http://www.humen1.com/2009/09/ubuntu-e5-8d-87-e7-ba-a79-04-e7-89-88-e6-9c-ac-e5-90-8er60e-e9-9f-b3-e9-87-8f-e5-bf-ab-e6-8d-b7-e9-94-ae-e5-a4-b1-e6-95-88.html","photos":[]},{"tags":[],"title":"用什么方案来解决内网的管理问题呢？","date":"2009/09/07","text":"研究了一下午，请教了些牛人 初步焦点 untangle linux平台网络管理 OR 上网行为管理路由（飞鱼星） 到底选什么作为日后的内网管理呢？ 还在挣扎中","permalink":"http://www.humen1.com/2009/09/e7-94-a8-e4-bb-80-e4-b9-88-e6-96-b9-e6-a1-88-e6-9d-a5-e8-a7-a3-e5-86-b3-e5-86-85-e7-bd-91-e7-9a-84-e7-ae-a1-e7-90-86-e9-97-ae-e9-a2-98-e5-91-a2-ef-bc-9f.html","photos":[]},{"tags":[],"title":"自己封印的同步/异步请求方法","date":"2009/07/22","text":"[php] \"addMoney\", ... , ...)); 这个是同步请求会等返回值 * 也可以这样 ini::sendRequest('http://www.club-fish.com/doWhat.php?action=addMoney&xxx=yyy&zzz=xxx') 这样效果同上 * 这个就不一样了 ini::sendRequest('http://www.club-fish.com/doWhat.php',array(),TRUE) 这个是异步请求，不会有返回 * * @param string $url 呼叫的url 注意数据可以直接附带在url上 * @param array $data \\[发送的数据 \\] * @param bool $async \\[是否是异步请求 默认false=同步 true=异步\\] * @return string */ public static function sendRequest($url , $data = array() , $async = FALSE){ $error = NULL;//错误标志 $url = parse\\_url($url);//分解url if (!$url) { $error ++ ; $results = \"empty url\"; }else{ if (!isset($url\\['port'\\])){ $url\\['port'\\] = \"\"; } if (!isset($url\\['query'\\])){ $url\\['query'\\] = \"\"; } $encoded = ''; //接上额外的数据 if (is\\_array($data) && count($data) > 0){ foreach ($data as $k => $v){ $encoded .= ($encoded ? \"&\" : \"\"); $encoded .= rawurlencode($k).\"=\".rawurlencode($v); } } //打开资源 $fp = fsockopen($url\\['host'\\], $url\\['port'\\] ? $url\\['port'\\] : 80); if (!$fp) { //出错：打不开资源 $error ++ ; $results = \"Failed to open socket to $url\\[host\\]\"; }else { //拼接head内容 fputs($fp, sprintf(\"POST %s%s%s HTTP/1.0\\\\n\", $url\\['path'\\], $url\\['query'\\] ? \"?\" : \"\", $url\\['query'\\])); fputs($fp, \"Host: $url\\[host\\]\\\\n\"); fputs($fp, \"Content-type: application/x-www-form-urlencoded\\\\n\"); fputs($fp, \"Content-length: \" . strlen($encoded) . \"\\\\n\"); fputs($fp, \"Connection: close\\\\n\\\\n\"); //发送请求 fputs($fp, \"$encoded\\\\n\"); if (!$async){ //先或许些响应看请求是否成功 $line = fgets($fp,1024); if (!eregi('^HTTP/1\\\\.. 200', $line)) { //请求失败了 $error ++ ; $results = \"bad request\"; }else{ //同步模式， //请求成功了，接着取所有的响应结果 $results = \"\"; $inheader = 1; while(!feof($fp)) { $line = fgets($fp,1024); if ($inheader && ($line == \"\\\\n\" || $line == \"\\\\r\\\\n\")){ $inheader = 0; } elseif (!$inheader){ $results .= $line; } } } }else { //异步请求无需返回 } fclose($fp); } } //返回值或空 if (empty($error)){ return $results; }else { return NULL; } } ?> [/php]","permalink":"http://www.humen1.com/2009/07/e8-87-aa-e5-b7-b1-e5-b0-81-e5-8d-b0-e7-9a-84-e5-90-8c-e6-ad-a5-e5-bc-82-e6-ad-a5-e8-af-b7-e6-b1-82-e6-96-b9-e6-b3-95.html","photos":[]},{"tags":[],"title":"自己写的PDO调用Mysql存储过程的例子","date":"2009/05/26","text":"/*** 呼叫存储过程** @param string $sql* @return object*/function callSp($sql){$res = FALSE;$this-&gt;connection();if(!$this-&gt;db){$this-&gt;error[2] = “DB query: connection failure”;}else{$this-&gt;result = $this-&gt;db-&gt;query($sql);if ($this-&gt;result){do {$rowset = $this-&gt;result-&gt;fetchAll(PDO::FETCH_ASSOC);if ($rowset) {$res[] = $rowset;}} while ($this-&gt;result-&gt;nextRowset());}}return $res;} 上面这段fun有点断章取义，$this-&gt;connection(); 这个方法里封装的其实就是new PDO并把这个实例赋给$this-&gt;db humen1 Tech","permalink":"http://www.humen1.com/2009/05/e8-87-aa-e5-b7-b1-e5-86-99-e7-9a-84pdo-e8-b0-83-e7-94-a8mysql-e5-ad-98-e5-82-a8-e8-bf-87-e7-a8-8b-e7-9a-84-e4-be-8b-e5-ad-90.html","photos":[]},{"tags":[],"title":"推荐：http://blog.s135.com","date":"2009/05/02","text":"http://blog.s135.com humen1 Tech","permalink":"http://www.humen1.com/2009/05/e6-8e-a8-e8-8d-90-ef-bc-9ahttpblog-s135-com.html","photos":[]},{"tags":[],"title":"Http 状态码","date":"2009/04/30","text":"1：请求收到，继续处理2：操作成功收到，分析、接受3：完成此请求必须进一步处理4：请求包含一个错误语法或不能完成5**：服务器执行一个完全有效请求失败100――客户必须继续发出请求101――客户要求服务器根据请求转换HTTP协议版本200――交易成功201――提示知道新文件的URL202――接受和处理、但处理未完成203――返回信息不确定或不完整204――请求收到，但返回信息为空205――服务器完成了请求，用户代理必须复位当前已经浏览过的文件206――服务器已经完成了部分用户的GET请求300――请求的资源可在多处得到301――删除请求数据302――在其他地址发现了请求数据303――建议客户访问其他URL或访问方式304――客户端已经执行了GET，但文件未变化305――请求的资源必须从服务器指定的地址得到306――前一版本HTTP中使用的代码，现行版本中不再使用307――申明请求的资源临时性删除400――错误请求，如语法错误401――请求授权失败402――保留有效ChargeTo头响应403――请求不允许404――没有发现文件、查询或URl405――用户在Request-Line字段定义的方法不允许406――根据用户发送的Accept拖，请求资源不可访问407――类似401，用户必须首先在代理服务器上得到授权408――客户端没有在用户指定的饿时间内完成请求409――对当前资源状态，请求不能完成410――服务器上不再有此资源且无进一步的参考地址411――服务器拒绝用户定义的Content-Length属性请求412――一个或多个请求头字段在当前请求中错误413――请求的资源大于服务器允许的大小414――请求的资源URL长于服务器允许的长度415――请求资源不支持请求项目格式416――请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段417――服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求500――服务器产生内部错误501――服务器不支持请求的函数502――服务器暂时不可用，有时是为了防止发生系统过载503――服务器过载或暂停维修504――关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长505――服务器不支持或拒绝支请求头中指定的HTTP版本 humen1 Tech","permalink":"http://www.humen1.com/2009/04/http-e7-8a-b6-e6-80-81-e7-a0-81.html","photos":[]},{"tags":[],"title":"Document Root Must Be a Directory","date":"2009/04/11","text":"这是系统起了SELinux的策略。把目录或文件设成了user_home_t类型，因此apache的进程没有权限，无法访问。针对Apache的进程所使用的SELinuxtarget policy规定了apache的进程只能访问httpd_sys_content_t类型的目录或文件。解决办法：把目录或文件的策略类型改成 httpd_sys_content_t 就可以了。# chcon -R -h -t httpd_sys_content_t /data然后可以用 ls -laZ 命令查看文件目录的策略类型。 humen1 Tech","permalink":"http://www.humen1.com/2009/04/document-root-must-be-a-directory.html","photos":[]},{"tags":[],"title":"关于使用Zend Studio for Eclipse不能激活代码提示功能的解决办法","date":"2009/04/08","text":"相信有蛮多人用zend studio foreclipse写代码吧，但有时候好好的一个项目就突然没得语法提示，很郁闷。其实这是项目没有经过zend studio for eclipse编译（应该是建立索引吧）导致的，那么就只要让它重新编译项目代码即可。操作如下：随便新建一个项目，比如test。然后找到test项目所在的目录，把目录下的.cache和.setting都复制到要重编译的项目的目录下，把test项目中的.project中的name改成要重编译的项目的项目名称，再复制到该目录下替换掉原有的.project.重启等待编译完成即可解决代码提示问题。 humen1 Tech","permalink":"http://www.humen1.com/2009/04/e5-85-b3-e4-ba-8e-e4-bd-bf-e7-94-a8zend-studio-for-eclipse-e4-b8-8d-e8-83-bd-e6-bf-80-e6-b4-bb-e4-bb-a3-e7-a0-81-e6-8f-90-e7-a4-ba-e5-8a-9f-e8-83-bd-e7-9a-84-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95.html","photos":[]},{"tags":[],"title":"Centos NFS","date":"2009/03/24","text":"centos nfs &lt;-- server:192.168.1.73 –&gt; [root@localhost]# cat /etc/sysconfig/networkNETWORKING=yesHOSTNAME=localhost.localdomain [root@localhost]#cat /etc/hosts127.0.0.1 localhost.localdomain localhost192.168.1.76 client.localdomain client //开机启动nfs server[root@localhost]#chkconfig nfs on //启动nfs[root@localhost]# mkdir /data/cache[root@localhost]# vi /etc/exports/data/cache/ 192.168.1.76(rw,no_root_squash,no_all_squash,sync) &lt;-- client:192.168.1.76 –&gt; bsd#mkdir /data/cache/bsd#mount 192.168.1.73:/data/cache /data/cache //开机挂载bsd#vi /etc/fstab //加入下行192.168.1.73:/data/cache /data/cache nfs rw 0 0 humen1 Tech","permalink":"http://www.humen1.com/2009/03/centos-nfs.html","photos":[]},{"tags":[],"title":"给eclipse上SVN插件","date":"2009/03/20","text":"Help-&gt;Software Updates-&gt;Find and Install-&gt; Search for new features toinstall -&gt;New Remote Site加上这个站http://subclipse.tigris.org/update 之后就可以在software updates 里看到subclipse了 humen1 Tech","permalink":"http://www.humen1.com/2009/03/e7-bb-99eclipse-e4-b8-8asvn-e6-8f-92-e4-bb-b6.html","photos":[]},{"tags":[],"title":"[转]为 PHP 应用提速、提速、再提速！，第 1 部分: 使用操作码缓存软件提升性能和吞吐量","date":"2009/03/19","text":"2007 年 3 月 20 日PHP 是一种脚本语言，常用于创建 Web 应用程序。它易于掌握，并能迅速生成可视化结果。然而，由于 PHP 是以解释的方式执行的，所以PHP 代码每次执行时都会被解析和转换成操作码（opcode）。操作码缓存能消除这项重复的工作，使 PHP 应用程序运行得更快。在很短的时间内，PHP 成为了一种非常流行的开发 Web 应用程序的程序设计语言。对初学者来说，PHP易于安装和学习。对于有经验的开发人员而言，PHP（从 V5 开始）提供了强大的面向对象特性。PHP开发人员拥有庞大的群体，大量的开源及商业库和工具扩展了该核心语言的功能。PHP 能迅速产生可视化结果，因此备受众人推崇。与其他开发 Web 应用程序的脚本语言（包括 Perl、Python 和 Ruby）相似，每次 HTTP 请求调用时，PHP代码都会被解析和翻译为操作码（PHP 引擎直接执行的原语指令 —-类似于汇编语言）再执行。在要求很低或可忽略的情况下，服务器看上去能立即执行这个复杂的解释过程。但是一旦处理的页面增加，解释 —-从本质上说，重复工作 ---- 就会对服务器造成很大的负担。在某些情况下，”编译” PHP代码的时间会远远超过执行该代码所需的时间。因此，当需求增加时，您常常会自食其果，因为处理这些不断解释和动态生成的页面需要消耗更多的系统资源。若您对处理器和 RAM 的预算没有限制，那么就大可不必通过优化应用栈（硬件、操作系统、数据库、Web 服务器和 PHP代码）来保证站点的可响应性。然而，由于资金通常都是最缺乏的资源，所以改善性能是必不可少的。调优意味着对系统增加内存、修改操作系统参数、加速Web 或数据库服务器、提高代码效率或者这其中的一些组合。每一项都有其各自的作用。不要浪费周期 ---- 重复使用节约 CPU 周期的另一种方法是减少运行 PHP 应用程序所需的重复工作。当然，没有必要每次都把同样的 PHP 代码翻译一遍。PHP代码被翻译成操作码后，可以把它保存起来并重复使用 ---- 直到原始代码被修改。确实，缓存 ---- 用于保存和重用 PHP 操作码 —- 是几种PHP 加速器内部的机制，包括开源 Alternative PHP Cache (APC)、支持 PHP 的 TurckMMCache、XCache、eAccelerator 和商业 ZendPlatform。后三类加速器能够缓存和优化字节码，这为系统提供了更多的速度提升。这个月，我将探究如何安装、部署和配置 XCache。XCache 相对较新，但是很多站点使用它的效果都很好。此外，XCache易于构建、安装和配置，因为它是做为 PHP 扩展实现的。不需对 Apache 和 PHP 进行重编译。本文基于 XCache V1.2.0。它可为 PHP V4.3.11 至 V4.4.4、PHP V5.1.x 至 V5.2.x 以及 PHPV6 的早期版本提供可靠支持（XCache 并不支持 PHP V5.0.x）。XCache 兼容 mod_php 和 FastCGI但并不支持 Common Gateway Interface (CGI) 和命令行 PHP 解释器。XCache源代码能构建在许多系统上，包括 FreeBSD、Sun Solaris、Linux(R) 和这里所示的 Mac OS X。使用 CygwinUNIX(R) 仿真环境或 Visual C，能在 Microsoft(R) Windows(R) 上构建 XCache。还可以为 Cygwin 或原生Win32 构建 XCache。后者与 PHP 的官方 Win32 版本兼容。本文的演示基于 Apache V2.2.3、PHP V5.2.0、XCache V1.2.0（2006 年 10 月发布）和 Mac OSX V10.4.8 Tiger 上的 Xcode V2.4.1。硬件平台为配有 2-GHz Intel(R) Core Duo 处理器和 2GB RAM 的 Apple MacBook。 回页首 构建 XCache 的基本步骤在开始之前，首先确保 PHP 正常安装并核实 phpize 是否位于 shell 的 PATH 下。同时，还需要一个 C 编译器，例如GNU Compiler Collection (GCC)，和一组包含 make 和 m4 的开发工具。在 Mac OS X 上，免费的Xcode 软件开发环境提供了必需的构建工具。完成以下操作步骤，在 Mac OS X 上构建、部署 XCache 并对其进行性能检测。在其他平台上构建 XCache 与之类似。如果使用Linux，则其发行版可能已经包含了 XCache 或者已经将其以预先打包好的格式提供给您。增加 Mac OS X 的共享内存首先增加 Mac OS X 上留出的共享内存总量。要实现这一目的，需创建（或编辑）文件 /etc/sysctl.conf 并创建如下条目： 清单 1. 增加 Mac OS X 上留出的共享内存总量 kern.sysv.shmmax=33554432kern.sysv.shmmin=1kern.sysv.shmmni=32kern.sysv.shmseg=8kern.sysv.shmall=8192 这些设置把共享内存总量增加到了 32 MB。如还需进一步扩展共享内存，可以把 kern.sysv.shmall 设定为kern.sysv.shmmax 除以硬件页面大小。使用 sysctl hw.pagesize 能获得硬件页面大小。例如，假设需要 128MB 的共享内存，那么设定 kern.sysv.shmmax=134217728 并设定 kern.sysv.shmall=32768。重启 Mac OS X 使修改生效。重启后，检验新设置是否生效，键入：sysctl -a | grep kern.sysv 通过源代码构建 XCache接下来，通过源代码构建 XCache。从 http://xcache.lighttpd.net 处下载源代码。下载完后解压代码，并转换到.tar 文件创建的新目录。 清单 2. 通过源代码构建 XCache $ cd /tmp$ wget http://210.51.190.228/pub/XCache/Releases/xcache-1.2.0.tar.gz$ tar xzf xcache-1.2.0.tar.gz$ cd xcache 运行 phpize 为编译 XCache 做准备。 清单 3. 运行 phpize $ phpizeConfiguring for:PHP Api Version: 20020918Zend Module Api No: 20020429Zend Extension Api No: 20050606 运行 configure，创建适合于原生操作系统的 makefile。 清单 4. 运行 configure 创建 makefile $ ./configure –enable-xcache –enable-xcache-coveragerchecking build system type… i686-apple-darwin8.8.1checking host system type… i686-apple-darwin8.8.1…creating libtoolconfigure: creating ./config.statusconfig.status: creating config.h 此处，–enable-xcache 选项包含 XCache 支持，–enable-xcache-coverager选项包含用于测量加速器功效的附加特性。要启用操作码优化，添加 –enable-xcache-optimizer。当然，下一步将使用 make 命令行构建和安装代码。运行 make，然后作为 root 用户运行 make install 。 清单 5. 利用 make 构建和安装代码 $ make…cp ./xcache.so /Users/strike/tmp/xcache/modules/xcache.soBuild complete. $ sudo make installInstalling shared extensions: /usr/lib/php/extensions/no-debug-non-zts-20020429/ 如果上述两项操作顺利完成，那么 XCache 将位于/usr/lib/php/extensions/no-debug-non-zts-20020429/xcache.so。（路径/usr/lib/php/extensions/no-debug-non-zts-20020429 反映了正在使用的 API 版本和用于构建PHP 的编译选项。如果启用了试用的 Zend Thread Safety 特性，则 “no-debug” 应为“debug”，”non-zts” 应为 “zts”。）修改 php.ini 文件因为安装了扩展，所以必需修改 php.ini 文件，使之包含 XCache 扩展并对其进行配置。打开文件/private/etc/php.ini，在其中添加如下代码行： 清单 6. 为 XCache 扩展修改 php.ini 文件 [xcache-common]zend_extension =/usr/lib/php/extensions/no-debug-non-zts-20020429/xcache.so [xcache.admin]; Change xcache.admin.user to your preferred login namexcache.admin.user = “admin” ; Change xcache.admin.pass to the MD5 fingerprint of your password; Use md5 -s “your_secret_password” to find the fingerprintxcache.admin.pass = “0ad72f3f352fcd8acdf266bafd0ac48d” [xcache]; Change xcache.size to tune the size of the opcode cachexcache.size = 24Mxcache.shm_scheme = “mmap”xcache.count = 2xcache.slots = 8Kxcache.ttl = 0xcache.gc_interval = 0 ; Change xcache.var_size to adjust the size of variable cachexcache.var_size = 8Mxcache.var_count = 1xcache.var_slots = 8Kxcache.var_ttl = 0xcache.var_maxttl = 0xcache.var_gc_interval = 300xcache.test = Offxcache.readonly_protection = Onxcache.mmap_path = “/tmp/xcache”xcache.coredump_directory = “”xcache.cacher = Onxcache.stat = Onxcache.optimizer = Off [xcache.coverager]xcache.coverager = Onxcache.coveragedump_directory = “” 注意：为了简明起见，此处省略了一些注释。要了解每个参数的含义，请参阅 XCache 源代码中 xcache.ini 文件设置的例子。操作码和变量缓存的大小是 32 MB，这是 /etc/rc 留出的最大值。对于 Mac OS X，xcache.mmap_path必须为文件名。因为 PHP 代码将在 MacBook 上运行，所以 xcache.count 应设为 2，表示 MacBook 中 CPU的数量。要访问 XCache 统计信息页面，需改变 xcache.admin.pass 设置。运行：$ md5 -s “password” 此处 password 为您的密码。把输出复制给 xcache.admin.pass。例如，若需将密码设定为 op3nsesam3，可以运行：$ md5 -s “op3nsesam3”MD5 (“op3nsesam3”) = cd959ac3debe8f587546a3fa353b3268 然后把 cd959ac3debe8f587546a3fa353b3268 复制给 xcache.admin.pass。重启 Web 服务器设置好 XCache 后，重启 Apache Web 服务器。对于大多数系统，可以以 root 用户的身份使用 apachectl restart 进行重启。$ sudo apachectl restart/usr/sbin/apachectl restart: httpd restarted 创建程序以调用 phpinfo()检验 XCache 是否已启用，需创建一个小型 PHP 程序用于调用 phpinfo() 并在 Web浏览器中打开那个文件。这样就能看到类似下图的 XCache 版面。 图 1. phpinfo() 方法给出了 XCache 设置 监控 XCache要监控 XCache，需安装 XCache 源代码的 admin 目录中的管理页面。把整个 admin 目录复制到 Apache文档根目录下。通常来说，Mac OS X 中的文档根目录为 /Library/WebServer/Documents。$ cp -pr admin /Library/WebServer/Documents 复制完成后，使用 sudo apachectl restart 重启 Web 服务器。用浏览器打开http://localhost/admin，检验管理面板是否工作正常。请参阅类似图 2 的面板。 图 2. XCache Administration 面板 测试应用程序选择一个或两个应用程序进行测试。您可以使用自己的代码或者，如果想要更复杂一点，使用大型的 PHP 应用程序，例如 phpMyAdmin 或者Serendipity。 回页首 运行性能检测Apache HTTP Web 服务器提供了一个叫做 ab 的工具，即 Apache HTTP服务器性能检测（benchmark）工具的缩写。ab 用于为 PHP 页面自动化处理大量的请求。phpMyAdmin应用程序将会是一个很好的选择，因为它很可能已经安装到您的系统上了。ab 工具易于使用：只需提供给它一个重复数和一个 URL。ab 工具对这个 URL 提交若干次请求并返回统计信息。由于 XCache已启用，所以第一个性能检测显示了加速后的性能。在运行 ab 之前，用浏览器导航到 http://localhost/phpmyadmin/。访问这个 PHP页面一次，便会加载用来将此页呈现到缓存内的所有 PHP 代码。此时，运行如下的性能检测，重复 100000 次。 清单 7. phpMyAdmin 的性能检测 $ ab -n 100000 http://localhost/phpmyadmin…Concurrency Level: 1Time taken for tests: 14.597 secondsComplete requests: 100000Failed requests: 98262(Connect: 49131, Length: 49131, Exceptions: 0)Broken pipe errors: 0Non-2xx responses: 50869Total transferred: 25739714 bytesHTML transferred: 12005084 bytesRequests per second: 6850.72 [#/sec] (mean)Time per request: 0.15 [ms] (mean)Time per request: 0.15 [ms] (mean, across all concurrent requests)Transfer rate: 1763.36 [Kbytes/sec] received 有用的统计信息包括每秒的请求数和完成所有测试的总时间。对于前者，值越大越好;对于后者，值越小越好。现在，在 php.ini 文件中禁用 XCache，然后再一次运行性能检测，如清单 8 所示。可以注释掉对 XCache扩展的引用，或者关闭所有的 XCache 特性。再次运行性能检测之前，需重启 Apache。 清单 8. 禁用 XCache 时的 phpMyAdmin 性能检测 $ sudo apachectl restart$ ab -n 100000 http://localhost/phpmyadminConcurrency Level: 1Time taken for tests: 17.771 secondsComplete requests: 100000Failed requests: 98256(Connect: 49128, Length: 49128, Exceptions: 0)Broken pipe errors: 0Non-2xx responses: 50872Total transferred: 25741232 bytesHTML transferred: 12005792 bytesRequests per second: 5627.15 [#/sec] (mean)Time per request: 0.18 [ms] (mean)Time per request: 0.18 [ms] (mean, across all concurrent requests)Transfer rate: 1448.50 [Kbytes/sec] received 此处，XCache 禁用之后，每秒的请求数有所下降，表示 Apache 服务器处理每个请求需更长的时间。运行整套测试所需的时间也因此增加了。尽管这只是一个简单的性能检测 ---- phpMyAdmin 连接数据库的功能被禁用了，这样能限制单独解释 PHP 的处理时间 —-并且不是非常科学，但它确实向我们演示了使用 XCache 能够完成哪些任务。对于微小的投入（欣慰地是，PHP 或 Apache不需重编译），XCache 能产生一个相对较大的回报。代码越复杂，可能的受益也越大。若想了解 XCache 是如何有效地运行的，请访问 http://localhost/xadmin 并单击 ListPHP。您能看到缓存中的 PHP 文件列表，连同 cache hit、操作码的代码大小、源文件的字节大小，等等。图 3 显示了 XCache专门为 XAMPP 栈包构建时的结果。 图 3. XCache 管理页面反映了缓存的状态和内容 前面已经提及，XCache 是许多加速器中的一种。在强大的 Zend 软件中还有许多免费的开源替代方案和一个商业化产品可选。每种 PHP加速器都有自己的系统需求，所以应主要根据现有的或预期的配置以及应用程序的特性选择合适的加速器。从中推荐一种很难，但是安装编译器缓存是我建议您务必要做的。 回页首 大量的调优选择除了缓存之外，还有许多其他途径可以加速应用程序。可以通过删除 PHP 引擎的一些很深奥的特性来简化它。例如，若不需使用 TCP/IP V6(IPv6) 网络，便可在构建 PHP 时禁用该属性。通过在 PHP 源代码树的顶部输入 ./configure –help 可以参阅PHP 配置选项的完整列表。无论选择哪一个配置选项，都应该将：–enable-inline-optimization –disable-debug 添加到最终的配置命令。前一选项使 PHP 有可能更快地执行（不需使用类似 Zend Engine的软件进行额外的操作码优化）；后一选项取消了 PHP 的调试模式，只有当需要解决 PHP 应用服务器本身的问题时才需开启该模式。当然，正如一些 C 应用程序，我们能利用 C 编译器构建更佳的可执行程序。如果把 PHP 作为 Linux 或 FreeBSD 上的Apache Dynamic Shared Object (DSO) 在 x86 处理器上运行，需考虑在 CFLAGS（存储 C编译器选项的环境变量）中添加 -prefer-non-pic 选项。non-pic 会使用位置独立的代码构建 PHP 并能提供 10%的性能提升。还可以使用 CFLAGS 中的 -march 确定处理器的类型，例如 -march=opteron 表示处理器类型为 AMDOpteron。提升速度的另一个途径是操作码优化。此处，Zend Engine 之类的软件会优化编译过程中产生的操作码，这理论上会减少代码执行的工作总量。缓存和优化都是透明的，并不需额外的编程。要应用一些优化操作，执行结构分析，或检查代码在哪花费了时间。重复的工作既不经济又运算缓慢，这显然会产生瓶颈。通过代码优化弥补周期的不足是很有价值的---- 但是在结构分析之前不要尝试进行任何优化。 回页首 展望未来在接下来的几个月我将再次讨论优化，会谈及调试、快速正文搜索、交替 Web 服务器等内容。同时，还将研究一个或多个 PHP加速器和操作码优化器。实现 10% 到 200% 的性能提升只需几个小时的优化和修补。想像一下您的机器利用这些空闲的周期能做多少事情吧！ humen1 Tech","permalink":"http://www.humen1.com/2009/03/e8-bd-ac-e4-b8-ba-php-e5-ba-94-e7-94-a8-e6-8f-90-e9-80-9f-e3-80-81-e6-8f-90-e9-80-9f-e3-80-81-e5-86-8d-e6-8f-90-e9-80-9f-ef-bc-81-ef-bc-8c-e7-ac-ac-1-e9-83-a8-e5-88-86-e4-bd-bf-e7-94-a8.html","photos":[]},{"tags":[],"title":"Mysql","date":"2009/03/09","text":"http://www.ccidnet.com/images/tech/database/zhuanti/mysqlyh/index.htm –上海酷噜网络科技有限公司-www.qoolu.comMSN &amp; Email &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2009/03/mysql.html","photos":[]},{"tags":[],"title":"Rsync 选项说明","date":"2009/02/24","text":"-v, –verbose 详细模式输出-q, –quiet 精简输出模式-c, –checksum 打开校验开关，强制对文件传输进行校验-a, –archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD-r, –recursive 对子目录以递归模式处理-R, –relative 使用相对路径信息 rsync foo/bar/foo.c remote:/tmp/ 则在/tmp目录下创建foo.c文件，而如果使用-R参数： rsync -R foo/bar/foo.c remote:/tmp/ 则会创建文件/tmp/foo/bar/foo.c，也就是会保持完全路径信息。 -b, –backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为filename。可以使用–suffix选项来指定不同的备份文件前缀。–backup-dir 将备份文件(如filename)存放在在目录下。-suffix=SUFFIX 定义备份文件前缀-u, –update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)-l, –links 保留软链结-L, –copy-links 想对待常规文件一样处理软链结–copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结–safe-links 忽略指向SRC路径目录树以外的链结-H, –hard-links 保留硬链结-p, –perms 保持文件权限-o, –owner 保持文件属主信息-g, –group 保持文件属组信息-D, –devices 保持设备文件信息-t, –times 保持文件时间信息-S, –sparse 对稀疏文件进行特殊处理以节省DST的空间-n, –dry-run现实哪些文件将被传输-W, –whole-file 拷贝文件，不进行增量检测-x, –one-file-system 不要跨越文件系统边界-B, –block-size=SIZE 检验算法使用的块尺寸，默认是700字节-e, –rsh=COMMAND 指定替代rsh的shell程序–rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息-C, –cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件–existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件–delete 删除那些DST中SRC没有的文件–delete-excluded 同样删除接收端那些被该选项指定排除的文件–delete-after 传输结束以后再删除–ignore-errors 及时出现IO错误也进行删除–max-delete=NUM 最多删除NUM个文件–partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输–force 强制删除目录，即使不为空–numeric-ids 不将数字的用户和组ID匹配为用户名和组名–timeout=TIME IP超时时间，单位为秒-I, –ignore-times 不跳过那些有同样的时间和长度的文件–size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间–modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0-T –temp-dir=DIR 在DIR中创建临时文件–compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份-P 等同于 –partial–progress 显示备份过程-z, –compress 对备份的文件在传输时进行压缩处理–exclude=PATTERN 指定排除不需要传输的文件模式–include=PATTERN 指定不排除而需要传输的文件模式–exclude-from=FILE 排除FILE中指定模式的文件–include-from=FILE 不排除FILE指定模式匹配的文件–version 打印版本信息–address 绑定到特定的地址–config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件–port=PORT 指定其他的rsync服务端口–blocking-io 对远程shell使用阻塞IO-stats 给出某些文件的传输状态–progress 在传输时现实传输过程–log-format=formAT 指定日志文件格式–password-file=FILE 从FILE中得到密码–bwlimit=KBPS 限制I/O带宽，KBytes per second-h, –help 显示帮助信息 humen1 Tech","permalink":"http://www.humen1.com/2009/02/rsync-e9-80-89-e9-a1-b9-e8-af-b4-e6-98-8e.html","photos":[]},{"tags":[],"title":"好文收藏","date":"2009/02/01","text":"理解Load Average做好压力测试http://java.chinaitlab.com/base/755242_2.html humen1 Tech","permalink":"http://www.humen1.com/2009/02/e5-a5-bd-e6-96-87-e6-94-b6-e8-97-8f.html","photos":[]},{"tags":[],"title":"一个好站","date":"2009/01/20","text":"http://www.chedong.com/tech/ humen1 Tech","permalink":"http://www.humen1.com/2009/01/e4-b8-80-e4-b8-aa-e5-a5-bd-e7-ab-99.html","photos":[]},{"tags":[],"title":"apache2.2官方文档【在线】","date":"2009/01/20","text":"http://httpd.apache.org/docs/2.2/ humen1 Tech","permalink":"http://www.humen1.com/2009/01/apache2-2-e5-ae-98-e6-96-b9-e6-96-87-e6-a1-a3-e3-80-90-e5-9c-a8-e7-ba-bf-e3-80-91.html","photos":[]},{"tags":[],"title":"查看Httpd进程数","date":"2009/01/09","text":"pstree|grep ‘\\[httpd\\]‘ humen1 Tech","permalink":"http://www.humen1.com/2009/01/e6-9f-a5-e7-9c-8bhttpd-e8-bf-9b-e7-a8-8b-e6-95-b0.html","photos":[]},{"tags":[],"title":"Apache Prefork和Worker模式的性能比较测试","date":"2009/01/09","text":"选择prefork还是worker可以在编译时使用�with-mpm=MPM参数指定,默认为prefork,preforkprefork采用预派生子进程方式，用单独的子进程来处理 不同的请求，进程之间彼此独立。在make编译和makeinstall安装后，使用httpd-l来确定当前使用的MPM是prefork.c。查看httpd-mpm.conf配置文件，里面包含如下默认的配置段：StartServers 5MinSpareServers 5MaxSpareServers 10MaxClients 150MaxRequestsPerChild 0prefork 控制进程在最初建立”StartServers”个子进程后，为了满足MinSpareServers设置的需要创建一个进程，等待一秒钟，继续创建两个，再等待一秒钟，继续创建四个……如此按指数级增加创建的进程数，最多达到每秒32个，直到满足MinSpareServers设置的值为止。这种模式可以不必在请求到来时再产生新的进程，从而减小了系统开销以增加性能。MaxSpareServers设置了最大的空闲进程数，如果空闲进程数大于这个值，Apache会自动kill掉一些多余进程。这个值不要设得过大，但如果设的值比MinSpareServers小，Apache会自动把其调整为MinSpareServers+1。如果站点负载较大，可考虑同时加大MinSpareServers和MaxSpareServers。MaxRequestsPerChild设置的是每个子进程可处理的请求数。每个子进程在处理了”MaxRequestsPerChild”个请求后将自动销毁。0意味着无限，即子进程永不销毁。虽然缺省设为0可以使每个子进程处理更多的请求，但如果设成非零值也有两点重要的好处：1、可防止意外的内存泄漏。2、在服务器负载下降的时侯会自动减少子进程数。因此，可根据服务器的负载来调整这个值。MaxClients是这些指令中最为重要的一个，设定的是Apache可以同时处理的请求，是对Apache性能影响最大的参数。其缺省值150是远远不够的，如果请求总数已达到这个值（可通过ps-ef|grep http|wc-l来确认），那么后面的请求就要排队，直到某个已处理请求完毕。这就是系统资源还剩下很多而HTTP访问却很慢的主要原因。虽然理论上这个值越大，可以处理的请求就越多，但Apache默认的限制不能大于256。ServerLimit指令无须重编译Apache就可以加大MaxClients。ServerLimit 10000StartServers 5MinSpareServers 5MaxSpareServers 10MaxClients 10000MaxRequestsPerChild 0 Worker相 对于prefork，worker全新的支持多线程和多进程混合模型的MPM。由于使用线程来处理，所以可以处理相对海量的请求，而系统资源的开销要小于基于进程的服务器。但是，worker也使用了多进程，每个进程又生成多个线程，以获得基于进程服务器的稳定性。在configure�with-mpm=worker后，进行make编译、makeinstall安装。在缺省生成的httpd-mpm.conf中有以下默认配置段：StartServers 2MaxClients 150MinSpareThreads 25MaxSpareThreads 75ThreadsPerChild 25MaxRequestsPerChild 0Worker 由主控制进程生成”StartServers”个子进程，每个子进程中包含固定的ThreadsPerChild线程数，各个线程独立地处理请求。同样，为了不在请求到来时再生成线程，MinSpareThreads和MaxSpareThreads设置了最少和最多的空闲线程数；而MaxClients设置了同时连入的clients最大总数。如果现有子进程中的线程总数不能满足负载，控制进程将派生新的子进程。MinSpareThreads和MaxSpareThreads的最大缺省值分别是75和250。这两个参数对Apache的性能影响并不大，可以按照实际情况相应调节。ThreadsPerChild是workerMPM中与性能相关最密切的指令。ThreadsPerChild的最大缺省值是64，如果负载较大，64也是不够的。这时要显式使用ThreadLimit指令，它的最大缺省值是20000。Worker模式下所能同时处理的请求总数是由子进程总数乘以ThreadsPerChild值决定的，应该大于等于MaxClients。如果负载很大，现有的子进程数不能满足时，控制进程会派生新的子进程。默认最大的子进程总数是16，加大时也需要显式声明ServerLimit（最大值是20000）。需要注意的是，如果显式声明了ServerLimit，那么它乘以ThreadsPerChild的值必须大于等于MaxClients，而且MaxClients必须是ThreadsPerChild的整数倍，否则Apache将会自动调节到一个相应值。ServerLimit 25ThreadLimit 200StartServers 3MaxClients 2000MinSpareThreads 50MaxSpareThreads 200ThreadsPerChild 100MaxRequestsPerChild 0下面是利用Apache自带的测试工具ab对Server进行测试的情况(设定请求的index页面为6bytes),cpu%为cpu占用率，mem为内存使用量(M为单位)，RequestsPerSecond为每秒处理的请求数。1、Prefor方式(ServerLimit,StartServer,MinSpareServers,MaxSpareServers,MaxClients,MaxRequestPerChild)-n/-c(ab参数) Cpu% MemRequestspersecond(－,5,5,10,150,0)100000/100 28.8 285 8434100000/200 29.2 304 8032100000/500 25.3 323 7348100000/1000 24.4 330 5886(10000,5,5,10,500,0)100000/100 28.7 371 8345100000/200 27.4 389 7929100000/500 24.9 417 7229100000/1000 23.4 437 6676(10000,5,5,10,1000,0)100000/100 28.8 408 8517100000/200 27.0 422 8045100000/500 24.2 455 7236100000/1000 22.5 470 6570(10000,5,5,10,1500,0)100000/100 29.6 330 8407100000/200 28.1 349 8014100000/500 26.4 380 7290100000/1000 24.0 400 66862、Worker方式(ServerLimt,Threadlimt,Startservers,MaxClients,MinspareThread,MaxspareThread,ThreadperChild,MaxRequestPerChild) -n/-c(ab参数) cpu% mem RequestsperSecond(50,500,5,10000,50,200,200,0)100000/100 18.6 188 6020100000/200 20.1 195 5892100000/500 19.8 209 5708100000/1000 22.2 218 6081(100,500,5,10000,50,200,100,0)100000/100 24.5 240 6919100000/200 23.6 247 6798100000/500 24.6 254 6827100000/1000 22.3 271 6114(200,500,5,10000,50,200,50,0)100000/100 27.3 301 7781100000/200 27.4 307 7789100000/500 26.0 320 7141100000/1000 21.8 344 6110相对来说，prefork方式速度要稍高于worker，然而它需要的cpu和memory资源也稍多于woker。 humen1 Tech","permalink":"http://www.humen1.com/2009/01/apache-prefork-e5-92-8cworker-e6-a8-a1-e5-bc-8f-e7-9a-84-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83-e6-b5-8b-e8-af-95.html","photos":[]},{"tags":[],"title":"海底世界","date":"2009/01/09","text":"快来玩玩我开发的小游戏吧，海底世界http://www.club-fish.com/play&amp;leagueId=100-122-00000012.html humen1 Tech","permalink":"http://www.humen1.com/2009/01/e6-b5-b7-e5-ba-95-e4-b8-96-e7-95-8c.html","photos":[]},{"tags":[],"title":"测试工具排行2006","date":"2008/12/24","text":"http://sd.csdn.net/subject/testtool.htm –上海酷噜网络科技有限公司-www.qoolu.comMSN &amp; Email &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2008/12/e6-b5-8b-e8-af-95-e5-b7-a5-e5-85-b7-e6-8e-92-e8-a1-8c2006.html","photos":[]},{"tags":[],"title":"PHP-GTK 介绍及其应用","date":"2008/12/19","text":"1. PHP-GTK介绍 1.1 PHP-GTKPHP-GTK是PHP的延伸模组，它可以让程式设计师写出在客户端执行的、且独立的GUI的程式。这个模组不允许在浏览器上显视GTK+的程式，它一开始就是开发来写独立的GUI程式的。 1.2 GTKGTK原本是为GIMP，一个GUI的影像处理软体而开发的。GTK+是GIMP的套装工具。GTK+从这里开始发展，直到现在已经成为Gnome的中心(Gnome是一个桌面环境)。後来GTK+也已经被推广到BeOS和Win32，使得它成为PHP延伸模组的最佳选择，维持PHP可以跨平台并可以用PHP为Linux,BeOS,Windows等平台开发视窗介面的程式。 2. PHP-GTK概念 2.1 前言接下来就要教各位一点点比较观念性的东西罗┅因为这章的概念都是非常重要的，所以就算不懂，也还是要慢慢的看懂它，不然┅以後就┅。还有，接下来的内容不建议没有程式设计经验的读者阅读，因为有很多的观念很容易会搞不清楚。还有，接下来该用英文的部分我都会用英文，这样大家在看国外文件的时候才不会不知所措，加油吧!!如果对本章有任何不懂之处，请自行查阅PHP-GTK Manual：http://gtk.php.net/manual/en/ 2.2 Widget(s)Widget是一个GUI程式中基本的functions和forms。最常用的几个Widget是：label、button、window、frame和textbox。所有的widget都是来自於一个抽象的基本class─GtkWidget。每个widget都是一个class 一个Widget一生大概都有五个时期：1. 建立(Creation)：宣告一个物件(declaring an object)2. 放置(Placement)：将它加入一个容器中(adding it to a container)3. 信号连接(Signal Connection)：接收信号以及进行动作(the action it will perform)4. 显示(Display)：它是否是可见的(whether it is viewable or not)5. 删除(Destruction)：关闭程式(closing of a program) 2.3 Container(s)Container是一个可以包含其他widget的widget。大部分的widget都是container，例如：GtkWindow、GtkTable和GtkBox。除了这点之外，container跟其他的widget没两样，也可以被放到其他container去。而所有的container都是来自於一个class─GtkContainer，本身来自於GtkWidget的class。所以container也是widget的一种。 2.4 Signal(s)当程式设计师在程式中做了一个动作时，程式需要有一个动作来回应使用者的动作。Signals使程式可以知道使用者做了动作并可以触发适合的回应。 例如，当使用者按了一个可以开新视窗的按钮(GtkButton)，程式认出这个请求，於是就开了一个新的视窗。这件事可以经由signal来做到。当按钮按下去之後，会使widget发出一个signal，接着再由该signal触发callbacks，产生一个新的视窗(GtkWindow)。 2.5 Callback(s)Callback就是当signal送出之後，被signal唤起的function。Callback会执行function传回一个值或是做一个动作。Callback就是signal的handlerfunciton。它可以是该signal的预设handler或着是程式设计师定义的function。要建立一个callback，就必须把functionconnect 到 signal。 2.6 Signal Inheritance(继承)和methods一样，signals可以被物件继承。一个widget可以送出任何它的parent widget可以送出的还有它自己特有的signal。 2.7 Connecting Signals你必须为PHP-GTK指定一个callbackfunction当signal送出时来对signal做回应。把一个signal连接到一个function可以用connect()这个object 方法达成。 如下： connect(\"destroy\", \"shutdown\"); //建立一个GtkButton，按钮文字为\"按我\" $button = &new GtkButton(\"按我\"); $button->connect(\"clicked\", \"you_clicked\"); //把GtkButton放到是container的GtkWindow中 $window->add($button); //显示$window以及它的所有child widget $window->show_all(); //进入程式主回圈(即程式启动之意) gtk::main(); ?> 执行它的话，就会出现一个视窗，里面有一个写着”按我”的按钮，按下按钮程式就会执行you_clicked函式。在这个程式中，$window物件的”destroy”signal是在使用者按下视窗右上角的”X”时会送出的；而$button物件的”clicked”signal是在使用者按下该按钮的时候会送出的。最後那一行的gtk::main()是一定要执行的，这样才能告诉电脑要开始执行程式，既然有开始执行，那就一定有停止吧? 没错，用gtk::main_quit()就可以停止程式了。 看完了以上的范例，有些读者可能会有疑问「如果我想执行送出signal的widget之外的widget的method怎么办?」，这时候，就要用另一个method了a connect_object()，它可以跨物件呼叫方法或是传递其他物件做为function的叁数。跨物件呼叫方法如下： $window-&gt;connect_object(“destroy”, array(“gtk”,”main_quit”)) 如此，在$window物件的”destroy” signal送出的时候就会唤起gtk::main_quit()这个方法，程式就会终指执行。 在介绍连接方法的最後，再提一下connect() 和 connect_object() 的自订增加要传给callback function的叁数的办法。见例子：&lt;?php$parameter=”新超人”;$button1 = &amp;new GtkButton(“测试”);//将”clicked” signal连接到who_are_you函式，附加叁数$parameter$button1-&gt;connect(“clicked”,”who_are_you”,$parameter);$button2 = &amp;new GtkButton(“测试二”);//将”clicked” signal连接到kill_the_button1函式，附加叁数$button1$button2-&gt;connect_object(“clicked”,”kill_the_button1”,$button1); function who_are_you($widget,$parameter){echo $parameter;} function kill_the_button($button){$button-&gt;destroy();}?&gt; 注意那两个function，who_are_you有两个叁数对吧? 第一个是做什么用的呢?为什么它会自动出现??因为，每个signal的callback function都会因为signal的不同而加上一些内定一定会传入callbackfunction的叁数，而基本上所有的signal都至少会传给callbackfunction一个叁数a产生该signal的物件。所以who_are_you的第一个叁数就是$button1，而第二个就是$parameter，也就是新超人。那kill_the_button函式就不一样罗~因为connect_object()函式会呼略原本signal的callbackfunction的预设叁数，所以kill_the_button就只有附加在connect_object最後的$button1叁数了，如此，kill_the_button就可以呼叫$button1的方法或是取得它的属性，这里呼叫了$button1的destroy方法，於是$button1就会被消灭。 2.8 Event(s)Event是signal的一种，但是它的用途还有功能都非常强大。就signal来说，signal这种东西都是内建在widget上的，所以，例如GtkWindow没有”clicked”signal，那么在不用eventsignal的情况下，GtkWindow是决对不可能送出clicked之类的signal的。那如果用了event signal呢?Event signal是可以允许被加到任何的widget上的，所以就算这个widget本来没有发出”clicked”signal的功能，你也可以用add_events()来为它加上按了它之後event signal会做什么样的反应。而eventsignal中包含的资讯比较多，比如说当你在使用”key-press-event”这个eventsignal的时候，同时也会记录到你按下的是什么按键，於是通常event signal的callbackfunction格式内定会有两个叁数，第一个依然是送出signal的widget，而第二个就是$event，这个$event是一个class，里面的属性和方法会因为送过来的eventsignal种类而不同。就”key-press-event”传回的$eventclass来说，里面有一个属性是keyval，内容就是使用者按的是哪一个键。这些对於一个程式设计师来说常常是很有用的资讯。所以event的重要性是不可忽视的，就算刚开始会有点不懂，也要慢慢的融入才行。这一节也非常重要。 3. 安装PHP-GTK 3.1 在Windows系统下安装首先要从http://gtk.php.net/download.php下载…HP-GTK的windows binary档案(本文撰写时为0.5.1版)。 接着来看看PHP-GTK 0.5.1 binary档的内容：\\php4 → php 和 php-gtk binary 档案\\winnt → 预设的php.ini档案\\winnt\\system32 → gtk binaries used by extension\\test → 几个测试用的档案\\README.txt → 安装说明档 开始安装：1. 复制 \\php4 的内容到你的php安装目录下(例C:\\php)。2. 复制 \\winnt 的内容到你的winnt资料夹。在WindowsNT或Windows2000上是C:\\winnt，在Window95、98、xp上是C:\\windows。如果该资料夹里已经有php.ini，那就不用做这个动作。3. 复制 \\winnt\\system32 的内容到你的winnt\\system32资料夹。在WindowsNT或Windows2000上是C:\\winnt\\system32，在Window95、98、xp上是C:\\windows\\system32。4. 复制 \\test 的内容到你想要执行你的script的地方(此步骤非必要)。 如何执行PHP-GTK程式：PHP-GTK程式可以在「开始」-「执行」下输入指令(或是建立捷径)来启动，如：C:\\php\\php -qc:\\php\\test\\gtk.php ## 表示不送印出 HTTP Header，但一直使用这个视窗，直到关闭程式。C:\\php\\php -q -c php.ini c:\\gtk.php ## 同上，但执行指定的php.ini设定。C:\\php\\php C:\\php\\test\\gtk.php ## 表示会送印出 HTTP Header，但一直使用这个视窗，直到关闭程序C:\\php\\php_win C:\\php\\test\\gtk.php ## 表示不使用视窗，执行後独立一个执行程式，他是使用 php-q模式，但是只要output出任何字元，例如错误讯息，就会停止执行。 3.2 在UNIX系统下安装Debian的使用者可以在 http://www.debian.org 下载PHP-GTK的binary档。系统需求须已安装下列package： PHP 4.1.0 或之後的版本，必须是编为CGI binary(command-line) 版本，包含所有的headerfiles和devlement scripts。 PHP-GTK支援GTK+ v1.2而需要安装1.2.6以上版本的GTK+。GTK+v2.0还未被支援，必须等到它开发完成并且普及了之後才会被支援。你可以从下面的网址取得GTK+v1.2.X的最新版本：ftp://ftp.gtk.org/pub/gtk/v1.2/ 在将取得的档案解压缩或是由CVS中check out出来之後，切换到该目录下，开始进行安装(打指令罗~)： 取得CVS版本，执行cvs -d server:cvsread@cvs.php.net:/repository co php-gtk或下载最新版本http://gtk.php.net/download.php 1. ./buildconf2. ./configure (想要加装extensions的话请输任./configure –help看说明)3. make(如果看到”Could not write┅”，只是代表该GTK+ object还没被支援，不算是什么错误讯息)4. make install 执行看看test/资料夹中的范例scripts来测试，特别是gtk.php，这些都是展示如何使用的好例子。 4. 第一支程式 4.1 前言本章会教导各位一些常用的GtkClass(widget)，还有运用这些来做出你的第一支PHP-GTK程式，如果概念那章不是很熟的话，这章可以给你一个练习的机会喔!如果对本章的内容有不懂或是想要深入了解其他的widget，可以到http://gtk.php.net/manual/en/看手册，手册里面有不少范例程式。 4.2 会用到的widgets在开始写程式之前，先来对等一下会用到的widget class们做一个overview。 GtkWindow()GtkWindow()建立一个视窗，里面有很多方法可以使用，如：set_title,set_name,connect,set_border_width等┅。 GtkFrame()GtkFrame()纯粹建立一个好Border，你可以设定它的label name,alignment,shadow(用英文，读Manual的时候会比较方便)。 GtkVBox()GtkVBox()建立一个直立的container来放入widgets。 GtkLabel()GtkLabel()可以建立一个label，内容文字可以建立时设定也可以建立後用方法来设定，如果没有设定内容文字，将会建立一个空的label(这是废话吗┅?)。 GtkHSeparator()GtkHseparator()建立一个水平线。 GtkEntry()GtkEntry()建立一个textbox供使用者输入资讯。 GtkHButtonBox()GtkHButtonBox()建立一个以水平方式排列Button的container。 GktBtton()GtkButton()或许可以说是GUI程式中最常用的widget了，它建立一个可以让使用者按的按钮。 4.3 开始 If(!class_exist(“gtk”)){dl(“php_gtk.”.(strstr(PHP_OS,”WIN”) ? “dll” : “so”));} 这段程式码会判断PHP-GTK延伸模组是否已启动，如果没有，它就会读取适当的档案。在上面的范例中，是靠判断执行的作业系统是Windows还是其它来判断要载入php_gtk.dll还是php_gtk.so。 Function delete_event(){return false;} 这里建立了一个名为delete_event的function，这个function是等会儿delete-eventsignal发出时的callback function。内容传回false会告诉PHP-GTK用预设的signalhandler来处理，而预设的handler会关闭视窗(同时会呼叫该视窗的destroy()函式)，在这里，它会关闭程式(因为这个范例程式只有一个主视窗，一旦关闭就会关闭程式)。 Function destroy(){Gtk::main_quit();} 这里建立了一个函式，destroy()。在这个程式中，这个函式是很重要的，因为我们在关闭程式的时候会连接到它。之前说过，Gtk::main_quit()会关闭程式，如果我们在这个程式中没有定义这个function或是这个function里面没有Gtk::main_quit()这行，那么这个程式就不会关闭了。以上一段程式码说明里提到的delete-event来说，returnfalse之後预设会执行关闭视窗的动作，还会呼叫destroy()函式，如果这里没有定义或是没有Gtk::main_quit()这段的话，主视窗的确会关闭，可是程式并不会结束，因为主程式回圈aGtk::main()还在跑。 set_name('main window'); //设定视窗的标题 $window->set_title('对PHP-GTK的介绍'); //设定视窗的大小 $window->set_usize(160, 120); //呼叫destroy()函式来结束程式 $window->connect('destroy', 'destroy'); //呼叫delete_event()函式来关闭视窗 $window->connect('delete-event', 'delete_event'); //设定视窗的边框宽度 $window->set\\_border\\_width(10); //设定视窗的位置 $window->set\\_position(GTK\\_WIN\\_POS\\_CENTER); //显示视窗和所有child widget (不显示就看不到) //最後这两行一定要放在程式码的最後，否则什么都看不到 $window->show_all(); Gtk::main(); ?> 执行程式可以看到如下的图： //建立一个GtkFrame$frame = &amp;new GtkFrame(‘经过简易修改的程式’);//把GtkFrame放到GtkWindow里$window-&gt;add($frame);//最下面两行不要动 结果如下图： 下面这段建立一个GtkVBox作为container，并把GtkEntry、GtkHSeperator、GtkLabel和GtkButtonBox都pack进去，所谓pack，是GtkBox底下的container们特别加入的放入widget的方法，就类似於add()，而pack用的方法一般是pack_start()和pack_end()，比add()好的地方是可以控制将widget增加进去之後widget的位置(不过只要是container就会有add()方法)，欲查询详细资料请至http://gtk.php.net/manual/en。 //建立一个GtkVBox，为常用的container$box1 = &amp;new GtkVBox();//把GtkVBox放到GtkFrame里面$frame-&gt;add($box1);//建立一个GtkLabel并将它pack到GtkVBox里$label = &amp;new GtkLabel();$box1-&gt;pack_start($label);//建立一个GtkHSeparator并将它pack到GtkVBox里$separator = &amp;new GtkHSeparator();$box1-&gt;pack_start($separator);//建立一个GtkEntry并将它pack到GtkVBox里$entry = &amp;new GtkEntry();$box1-&gt;pack_start($entry);//建立一个GtkButtonBox并将它add到GtkVBox里//因为GtkButtonBox也是一个无形的container，位置不重要，所以用add()$box2 = &amp;new GtkHButtonBox();$box1-&gt;add($box2); 执行如下图： 最後这段程式码会建立两个GtkButton并pack到GtkButtonBox里去，还有为两个按钮加上连接，使它们起作用，并建立一个函式，只要按下GtkButton就会将GtkLabel的内容换成GtkEntry中的文字。 $button = &amp;new GtkButton(‘显示输入的字’);//连接”clicked” signal到set_name()函式，附加$label和$entry两个widget$button-&gt;connect_object(‘clicked’,’set_name’,$label,$entry);$box2-&gt;pack_start($button);$button = &amp;new GtkButton(‘离开程式’);//连接”clicked” signal到destroy()函式，将会关闭程式$button-&gt;connect(‘clicked’,’destroy’);$box2-&gt;pack_start($button); function set_name($label,$entry){//用GtkEntry的get_text()方法从取得文字方块内容$gettext=$entry-&gt;get_text();//用GtkLabel的set_text()方法设定新的文字$label-&gt;set_text($gettext);}//最後再提一下那两行┅.$window-&gt;show_all();Gtk::main(); ?到??，整?程式就算是完成了，?看看?行的?果吧~ 5. 其它 5.1 进一步学习如果在结束了上面的课程之后你还想要更了解PHP-GTK，或是对于本文的内容有任何不明白的地方，这里提供你几个地方可以查询资料： PHP-GTK官方网站(En)： http://gtk.php.netGTK官方网站(En)： http://www.gtk.orgPHP-GTK官方网站上的Manual(En)： http://gtk.php.net/manual/enTIM官方网站(zh-Tw)： http://tim.jerry.com.tw 5.2 另一个范例这里有一个笔者写的猜数字游戏，算是比较进阶的范例，可以抓回去研究看看。http://pc035860.infor.org/download/GuessNumber.zip 5.3 参考数据本文主要是参考PHP-GTK官方Manual和Zend网站上的Tutorial而编撰成的：http://gtk.php.net/manual/enhttp://www.zend.com/zend/tut/tutorial-silva.php5.4 关于作者无敌铁金刚(自称)，目前(2002/08/18)是台北市立建国中学一升二年级的学生，在学校参加了信息社，这篇文章就是放在社刊上的。 humen1 Tech","permalink":"http://www.humen1.com/2008/12/php-gtk-e4-bb-8b-e7-bb-8d-e5-8f-8a-e5-85-b6-e5-ba-94-e7-94-a8.html","photos":[]},{"tags":[],"title":"Php Gtk","date":"2008/12/19","text":"http://www.phpgtk.net/index.php –上海酷噜网络科技有限公司-www.qoolu.comMSN &amp; Email &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2008/12/php-gtk.html","photos":[]},{"tags":[],"title":"Vi使用手册(zt)","date":"2008/12/18","text":"进入vi的命令vi filename :打开或新建文件，并将光标置于第一行首vi +n filename ：打开文件，并将光标置于第n行首vi + filename ：打开文件，并将光标置于最后一行首vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filenamevi filename….filename ：打开多个文件，依次编辑 移动光标类命令h ：光标左移一个字符l ：光标右移一个字符space：光标右移一个字符Backspace：光标左移一个字符k或Ctrl+p：光标上移一行j或Ctrl+n ：光标下移一行Enter ：光标下移一行w或W ：光标右移一个字至字首b或B ：光标左移一个字至字首e或E ：光标右移一个字j至字尾) ：光标移至句尾( ：光标移至句首}：光标移至段落开头{：光标移至段落结尾nG：光标移至第n行首n+：光标下移n行n-：光标上移n行n$：光标移至第n行尾H ：光标移至屏幕顶行M ：光标移至屏幕中间行L ：光标移至屏幕最后行0：（注意是数字零）光标移至当前行首$：光标移至当前行尾 屏幕翻滚类命令Ctrl+u：向文件首翻半屏Ctrl+d：向文件尾翻半屏Ctrl+f：向文件尾翻一屏Ctrl＋b；向文件首翻一屏nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。 插入文本类命令i ：在光标前I ：在当前行首a：光标后A：在当前行尾o：在当前行之下新开一行O：在当前行之上新开一行r：替换当前字符R：替换当前字符及其后的字符，直至按ESC键s：从当前光标位置处开始，以输入的文本替代指定数目的字符S：删除指定数目的行，并以所输入文本代替之ncw或nCW：修改指定数目的字nCC：修改指定数目的行 删除命令ndw或ndW：删除光标处开始及其后的n-1个字do：删至行首d$：删至行尾ndd：删除当前行及其后n-1行x或X：删除一个字符，x删除光标后的，而X删除光标前的Ctrl+u：删除输入方式下所输入的文本 搜索及替换命令 :/pattern：从光标开始处向文件尾搜索pattern?pattern：从光标开始处向文件首搜索patternn：在同一方向重复上一次搜索命令N：在反方向上重复上一次搜索命令：s/p1/p2/g：将当前行中所有p1均用p2替代：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代：g/p1/s//p2/g：将文件中所有p1均用p2替换 选项设置all：列出所有选项设置情况term：设置终端类型ignorance：在搜索中忽略大小写list：显示制表位(Ctrl+I)和行尾标志（$)number：显示行号report：显示由面向行的命令修改过的数目terse：显示简短的警告信息warn：在转到别的文件时若没保存当前文件则显示NO write信息nomagic：允许在搜索模式中，使用前面不带”\\“的特殊字符nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始mesg：允许vi显示其他用户用write写到自己终端上的信息 最后行方式命令：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下：n1,n2 d ：将n1行到n2行之间的内容删除：w ：保存当前文件：e filename：打开文件filename进行编辑：x：保存当前文件并退出：q：退出vi：q!：不保存文件并退出vi：!command：执行shell命令command：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入：r!command：将命令command的输出结果放到当前行 。 humen1 Tech","permalink":"http://www.humen1.com/2008/12/vi-e4-bd-bf-e7-94-a8-e6-89-8b-e5-86-8czt.html","photos":[]},{"tags":[],"title":"WGet使用指南","date":"2008/12/18","text":"wget是一个从网络上自动下载文件的自由工具。它支持HTTP，HTTPS和FTP协议，可以使用HTTP代理. 所谓的自动下载是指，wget可以在用户退出系统的之后在后台执行。这意味这你可以登录系统，启动一个wget下载任务，然后退出系统，wget将在后台执行直到任务完成，相对于其它大部分浏览器在下载大量数据时需要用户一直的参与，这省去了极大的麻烦。 wget可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构。这又常被称作”递归下载”。在递归下载的时候，wget遵循RobotExclusion标准(/robots.txt). wget可以在下载的同时，将链接转换成指向本地文件，以方便离线浏览。 wget非常稳定,它在带宽很窄的情况下和不稳定网络中有很强的适应性.如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用。 wget的常见用法wget的使用格式 Usage: wget [OPTION]… [URL]…用wget做站点镜像:wget -r -p -np -k http://dsec.pku.edu.cn/~usr_name/# 或者wget -m http://www.tldp.org/LDP/abs/html/在不稳定的网络上下载一个部分下载的文件，以及在空闲时段下载wget -t 0 -w 31 -c http://dsec.pku.edu.cn/BBC.avi -o down.log &amp;# 或者从filelist读入要下载的文件列表wget -t 0 -w 31 -c -B ftp://dsec.pku.edu.cn/linuxsoft -i filelist.txt-o down.log &amp;上面的代码还可以用来在网络比较空闲的时段进行下载。我的用法是:在mozilla中将不方便当时下载的URL链接拷贝到内存中然后粘贴到文件filelist.txt中，在晚上要出去系统前执行上面代码的第二条。 使用代理下载wget -Y on -p -k https://sourceforge.net/projects/wvware/代理可以在环境变量或wgetrc文件中设定 # 在环境变量中设定代理export PROXY=http://211.90.168.94:8080/# 在/.wgetrc中设定代理http_proxy = http://proxy.yoyodyne.com:18023/ftp_proxy = http://proxy.yoyodyne.com:18023/wget各种选项分类列表启动-V, –version 显示wget的版本后退出-h, –help 打印语法帮助-b, –background 启动后转入后台执行-e, –execute=COMMAND 执行`.wgetrc’格式的命令，wgetrc格式参见/etc/wgetrc或/.wgetrc记录和输入文件-o, –output-file=FILE 把记录写到FILE文件中-a, –append-output=FILE 把记录追加到FILE文件中-d, –debug 打印调试输出-q, –quiet 安静模式(没有输出)-v, –verbose 冗长模式(这是缺省设置)-nv, –non-verbose 关掉冗长模式，但不是安静模式-i, –input-file=FILE 下载在FILE文件中出现的URLs-F, –force-html 把输入文件当作HTML格式文件对待-B, –base=URL 将URL作为在-F -i参数指定的文件中出现的相对链接的前缀–sslcertfile=FILE 可选客户端证书–sslcertkey=KEYFILE 可选客户端证书的KEYFILE–egd-file=FILE 指定EGD socket的文件名下载–bind-address=ADDRESS 指定本地使用地址(主机名或IP，当本地有多个IP或名字时使用)-t, –tries=NUMBER 设定最大尝试链接次数(0 表示无限制).-O –output-document=FILE 把文档写到FILE文件中-nc, –no-clobber 不要覆盖存在的文件或使用.#前缀-c, –continue 接着下载没下载完的文件–progress=TYPE 设定进程条标记-N, –timestamping 不要重新下载文件除非比本地文件新-S, –server-response 打印服务器的回应–spider 不下载任何东西-T, –timeout=SECONDS 设定响应超时的秒数-w, –wait=SECONDS 两次尝试之间间隔SECONDS秒–waitretry=SECONDS 在重新链接之间等待1…SECONDS秒–random-wait 在下载之间等待0…2*WAIT秒-Y, –proxy=on/off 打开或关闭代理-Q, –quota=NUMBER 设置下载的容量限制–limit-rate=RATE 限定下载输率目录-nd –no-directories 不创建目录-x, –force-directories 强制创建目录-nH, –no-host-directories 不创建主机目录-P, –directory-prefix=PREFIX 将文件保存到目录 PREFIX/…–cut-dirs=NUMBER 忽略 NUMBER层远程目录HTTP 选项–http-user=USER 设定HTTP用户名为 USER.–http-passwd=PASS 设定http密码为 PASS.-C, –cache=on/off 允许/不允许服务器端的数据缓存 (一般情况下允许).-E, –html-extension 将所有text/html文档以.html扩展名保存–ignore-length 忽略 Content-Length&#39;头域 --header=STRING 在headers中插入字符串 STRING --proxy-user=USER 设定代理的用户名为 USER --proxy-passwd=PASS 设定代理的密码为 PASS --referer=URL 在HTTP请求中包含Referer: URL’头-s, –save-headers 保存HTTP头到文件-U, –user-agent=AGENT 设定代理的名称为 AGENT而不是 Wget/VERSION.–no-http-keep-alive 关闭 HTTP活动链接 (永远链接).–cookies=off 不使用 cookies.–load-cookies=FILE 在开始会话前从文件 FILE中加载cookie–save-cookies=FILE 在会话结束后将 cookies保存到 FILE文件中FTP 选项-nr, –dont-remove-listing 不移走 `.listing’文件-g, –glob=on/off 打开或关闭文件名的 globbing机制–passive-ftp 使用被动传输模式 (缺省值).–active-ftp 使用主动传输模式–retr-symlinks 在递归的时候，将链接指向文件(而不是目录)递归下载-r, –recursive 递归下载－－慎用!-l, –level=NUMBER 最大递归深度 (inf 或 0 代表无穷).–delete-after 在现在完毕后局部删除文件-k, –convert-links 转换非相对链接为相对链接-K, –backup-converted 在转换文件X之前，将之备份为 X.orig-m, –mirror 等价于 -r -N -l inf -nr.-p, –page-requisites 下载显示HTML文件的所有图片递归下载中的包含和不包含(accept/reject)-A, –accept=LIST 分号分隔的被接受扩展名的列表-R, –reject=LIST 分号分隔的不被接受的扩展名的列表-D, –domains=LIST 分号分隔的被接受域的列表–exclude-domains=LIST 分号分隔的不被接受的域的列表–follow-ftp 跟踪HTML文档中的FTP链接–follow-tags=LIST 分号分隔的被跟踪的HTML标签的列表-G, –ignore-tags=LIST 分号分隔的被忽略的HTML标签的列表-H, –span-hosts 当递归时转到外部主机-L, –relative 仅仅跟踪相对链接-I, –include-directories=LIST 允许目录的列表-X, –exclude-directories=LIST 不被包含目录的列表-np, –no-parent 不要追溯到父目录 humen1 Tech","permalink":"http://www.humen1.com/2008/12/wget-e4-bd-bf-e7-94-a8-e6-8c-87-e5-8d-97.html","photos":[]},{"tags":[],"title":"Php测试代码","date":"2008/12/17","text":"在sitepoint上上看到一篇文章Good and BadCode，是关于如何提高php代码的安全性、兼容性和性能的。其中有一段是介绍如何改进以下的这行php代码。这段代码经常被sitepoint用来测试php程序员应聘者。 这段代码很适合用来测试一个php开发人员是否合格。因为这段代码并没有要求太多记忆上的东西，但是对代码的安全，性能，兼容性方面都做了考察。思考一下吧：-） answers from sitepoint: 说明 ： The “short” opening PHP tag (&lt;?) has been replaced with the moreportable (and XML-friendly) &lt;?php form.Before attempting to output the value of $_GET[‘query’], isset is usedto verify that it actually has a value.The unnecessary brackets (()) around the value passed to echo have been removed.Strings are delimited by single quotes instead of double quotes toavoid the performance hit of PHP searching for variables tointerpolate within the strings.Rather than using the string concatenation operator (.) to pass asingle string to the echo statement, the strings to be output by echoare separated by commas for a tiny performance boost.Passing the ENT_QUOTES argument to htmlspecialchars to ensure thatsingle quotes (‘) are also escaped isn’t strictly necessary in thiscase, but it’s a good habit to get into. humen1 Tech","permalink":"http://www.humen1.com/2008/12/php-e6-b5-8b-e8-af-95-e4-bb-a3-e7-a0-81.html","photos":[]},{"tags":[],"title":"主板诊断卡代码对照表","date":"2008/12/17","text":"查表必读：1、特殊代码”00”和”ff”及其它起始码有三种情况出现：①已由一系列其它代码之后再出现：”00”或”ff”，则主板ok。②如果将cmos中设置无错误，则不严重的故障不会影响bios自检的继续，而最终出现”00”或”ff”。③一开机就出现”00”或”ff”或其它起始代码并且不变化则为主板没有运行起来。2、本表是按代码值从小到大排序，卡中出码顺序不定。3、未定义的代码表中未列出。4、对于不同bios（常用ami、award、phoenix）用同一代码代表的意义不同，因此应弄清您所检测的电脑是属于哪一种类型的bios，您可查阅您的电脑使用手册，或从主板上的bios芯片上直接查看，也可以在启动屏幕时直接看到。5、有少数主板的pci槽只有一部分代码出现，但isa槽有完整自检代码输出。且目前已发现有极个别原装机主板的isa槽无代码输出，而pci槽则有完整代码输出，故建议您在查看代码不成功时，将本双槽卡换到另一种插槽试一下。另外，同一块主板的不同pci槽，有的槽有完整代码送出，如dell810主板只有靠近cpu的一个pci槽有完整代码显示，一直变化到”00”或”ff”，而其它pci槽走到”38”后则不继续变化。6、复位信号所需时间isa与pci不一定同步，故有可能isa开始出代码，但pci的复位灯还不熄，故pci代码停要起始代码上。代码对照表00 . 已显示系统的配置；即将控制INI19引导装入。01 处理器测试1，处理器状态核实,如果测试失败，循环是无限的。 处理器寄存器的测试即将开始，不可屏蔽中断即将停用。 CPU寄存器测试正在进行或者失败。02 确定诊断的类型（正常或者制造）。如果键盘缓冲器含有数据就会失效。 停用不可屏蔽中断；通过延迟开始。 CMOS写入／读出正在进行或者失灵。03 清除8042键盘控制器，发出TESTKBRD命令（AAH） 通电延迟已完成。 ROM BIOS检查部件正在进行或失灵。04 使8042键盘控制器复位，核实TESTKBRD。 键盘控制器软复位／通电测试。 可编程间隔计时器的测试正在进行或失灵。05 如果不断重复制造测试1至5，可获得8042控制状态。 已确定软复位／通电；即将启动ROM。 DMA初如准备正在进行或者失灵。06 使电路片作初始准备，停用视频、奇偶性、DMA电路片，以及清除DMA电路片，所有页面寄存器和CMOS停机字节。 已启动ROM计算ROMBIOS检查总和，以及检查键盘缓冲器是否清除。 DMA初始页面寄存器读／写测试正在进行或失灵。07 处理器测试2，核实CPU寄存器的工作。 ROM BIOS检查总和正常，键盘缓冲器已清除，向键盘发出BAT（基本保证测试）命令。 .08 使CMOS计时器作初始准备，正常的更新计时器的循环。 已向键盘发出BAT命令，即将写入BAT命令。 RAM更新检验正在进行或失灵。09 EPROM检查总和且必须等于零才通过。 核实键盘的基本保证测试，接着核实键盘命令字节。 第一个64K RAM测试正在进行。0A 使视频接口作初始准备。 发出键盘命令字节代码，即将写入命令字节数据。 第一个64K RAM芯片或数据线失灵，移位。0B 测试8254通道0。 写入键盘控制器命令字节，即将发出引脚23和24的封锁／解锁命令。 第一个64K RAM奇／偶逻辑失灵。0C 测试8254通道1。 键盘控制器引脚23、24已封锁／解锁；已发出NOP命令。 第一个64K RAN的地址线故障。0D 1、检查CPU速度是否与系统时钟相匹配。2、检查控制芯片已编程值是否符合初设置。3、视频通道测试，如果失败，则鸣喇叭。已处理NOP命令；接着测试CMOS停开寄存器。 第一个64K RAM的奇偶性失灵0E 测试CMOS停机字节。 CMOS停开寄存器读／写测试；将计算CMOS检查总和。 初始化输入／输出端口地址。0F 测试扩展的CMOS。 已计算CMOS检查总和写入诊断字节；CMOS开始初始准备。 .10 测试DMA通道0。 CMOS已作初始准备，CMOS状态寄存器即将为日期和时间作初始准备。 第一个64K RAM第0位故障。11 测试DMA通道1。 CMOS状态寄存器已作初始准备，即将停用DMA和中断控制器。 第一个64DK RAM第1位故障。12 测试DMA页面寄存器。 停用DMA控制器1以及中断控制器1和2；即将视频显示器并使端口B作初始准备。 第一个64DK RAM第2位故障。13 测试8741键盘控制器接口。 视频显示器已停用，端口B已作初始准备；即将开始电路片初始化／存储器自动检测。 第一个64DK RAM第3位故障。14 测试存储器更新触发电路。 电路片初始化／存储器处自动检测结束；8254计时器测试即将开始。 第一个64DK RAM第4位故障。15 测试开头64K的系统存储器。 第2通道计时器测试了一半；8254第2通道计时器即将完成测试。 第一个64DK RAM第5位故障。16 建立8259所用的中断矢量表。 第2通道计时器测试结束；8254第1通道计时器即将完成测试。 第一个64DK RAM第6位故障。17 调准视频输入／输出工作，若装有视频BIOS则启用。 第1通道计时器测试结束；8254第0通道计时器即将完成测试。 第一个64DK RAM第7位故障。18 测试视频存储器，如果安装选用的视频BIOS通过，由可绕过。 第0通道计时器测试结束；即将开始更新存储器。 第一个64DK RAM第8位故障。19 测试第1通道的中断控制器（8259）屏蔽位。 已开始更新存储器，接着将完成存储器的更新。 第一个64DK RAM第9位故障。1A 测试第2通道的中断控制器（8259）屏蔽位。 正在触发存储器更新线路，即将检查15微秒通／断时间。 第一个64DK RAM第10位故障。1B 测试CMOS电池电平。 完成存储器更新时间30微秒测试；即将开始基本的64K存储器测试。 第一个64DK RAM第11位故障。1C 测试CMOS检查总和。 . 第一个64DK RAM第12位故障。1D 调定CMOS配置。 . 第一个64DK RAM第13位故障。1E 测定系统存储器的大小，并且把它和CMOS值比较。 . 第一个64DK RAM第14位故障。1F 测试64K存储器至最高640K。 . 第一个64DK RAM第15位故障。20 测量固定的8259中断位。 开始基本的64K存储器测试；即将测试地址线。 从属DMA寄存器测试正在进行或失灵。21 维持不可屏蔽中断（NMI）位（奇偶性或输入／输出通道的检查）。 通过地址线测试；即将触发奇偶性。 主DMA寄存器测试正在进行或失灵。22 测试8259的中断功能。 结束触发奇偶性；将开始串行数据读／写测试。 主中断屏蔽寄存器测试正在进行或失灵。23 测试保护方式8086虚拟方式和8086页面方式。 基本的64K串行数据读／写测试正常；即将开始中断矢量初始化之前的任何调节。从属中断屏蔽存器测试正在进行或失灵。24 测定1MB以上的扩展存储器。 矢量初始化之前的任何调节完成，即将开始中断矢量的初始准备。 设置ES段地址寄存器注册表到内存高端。25 测试除头一个64K之后的所有存储器。 完成中断矢量初始准备；将为旋转式断续开始读出8042的输入／输出端口。 装入中断矢量正在进行或失灵。26 测试保护方式的例外情况。 读出8042的输入／输出端口；即将为旋转式断续开始使全局数据作初始准备。 开启A20地址线；使之参入寻址。27 确定超高速缓冲存储器的控制或屏蔽RAM。 全1数据初始准备结束；接着将进行中断矢量之后的任何初始准备。 键盘控制器测试正在进行或失灵。28 确定超高速缓冲存储器的控制或者特别的8042键盘控制器。 完成中断矢量之后的初始准备；即将调定单色方式。 CMOS电源故障／检查总和计算正在进行。29 . 已调定单色方式，即将调定彩色方式。 CMOS配置有效性的检查正在进行。2A 使键盘控制器作初始准备。 已调定彩色方式，即将进行ROM测试前的触发奇偶性。 置空64K基本内存。2B 使磁碟驱动器和控制器作初始准备。 触发奇偶性结束；即将控制任选的视频ROM检查前所需的任何调节。 屏幕存储器测试正在进行或失灵。2C 检查串行端口，并使之作初始准备。 完成视频ROM控制之前的处理；即将查看任选的视频ROM并加以控制。 屏幕初始准备正在进行或失灵。2D 检测并行端口，并使之作初始准备。 已完成任选的视频ROM控制，即将进行视频ROM回复控制之后任何其他处理的控制。 屏幕回扫测试正在进行或失灵。2E 使硬磁盘驱动器和控制器作初始准备。 从视频ROM控制之后的处理复原；如果没有发现EGA／VGA就要进行显示器存储器读／写测试。 检测视频ROM正在进行。2F 检测数学协处理器，并使之作初始准备。 没发现EGA／VGA；即将开始显示器存储器读／写测试。 .30 建立基本内存和扩展内存。 通过显示器存储器读／写测试；即将进行扫描检查。 认为屏幕是可以工作的。31 检测从C800：0至EFFF：0的选用ROM，并使之作初始准备。显示器存储器读／写测试或扫描检查失败，即将进行另一种显示器存储器读／写测试。 单色监视器是可以工作的。32 对主板上COM／LTP／FDD／声音设备等I／O芯片编程使之适合设置值。通过另一种显示器存储器读／写测试；却将进行另一种显示器扫描检查。 彩色监视器（40列）是可以工作的。33 . 视频显示器检查结束；将开始利用调节开关和实际插卡检验显示器的关型。 彩色监视器（80列）是可以工作的。34 . 已检验显示器适配器；接着将调定显示方式。 计时器滴答声中断测试正在进行或失灵。 35 . 完成调定显示方式；即将检查BIOSROM的数据区。 停机测试正在进行或失灵。36 . 已检查BIOS ROM数据区；即将调定通电信息的游标。 门电路中A－20失灵。37 . 识别通电信息的游标调定已完成；即将显示通电信息。 保护方式中的意外中断。38 . 完成显示通电信息；即将读出新的游标位置。 RAM测试正在进行或者地址故障＞FFFFH。39 . 已读出保存游标位置，即将显示引用信息串。 .3A . 引用信息串显示结束；即将显示发现信息。 间隔计时器通道2测试或失灵。3B 用OPTI电路片（只是486）使辅助超高速缓冲存储器作初始准备。 已显示发现＜ESC＞信息；虚拟方式，存储器测试即将开始。按日计算的日历时钟测试正在进行或失灵。3C 建立允许进入CMOS设置的标志。 . 串行端口测试正在进行或失灵。3D 初始化键盘／PS2鼠标／PNP设备及总内存节点。 . 并行端口测试正在进行或失灵。3E 尝试打开L2高速缓存。 . 数学协处理器测试正在进行或失灵。40 . 已开始准备虚拟方式的测试；即将从视频存储器来检验。 调整CPU速度，使之与外围时钟精确匹配。41 中断已打开，将初始化数据以便于0：0检测内存变换（中断控制器或内存不良） 从视频存储器检验之后复原；即将准备描述符表。 系统插件板选择失灵。42 显示窗口进入SETUP。 描述符表已准备好；即将进行虚拟方式作存储器测试。 扩展CMOS RAM故障。43 若是即插即用BIOS，则串口、并口初始化。 进入虚拟方式；即将为诊断方式实现中断。 . 44 .已实现中断（如已接通诊断开关；即将使数据作初始准备以检查存储器在0：0返转。） BIOS中断进行初始化。45 初始化数学协处理器。 数据已作初始准备；即将检查存储器在0：0返转以及找出系统存储器的规模。 .46 . 测试存储器已返回；存储器大小计算完毕，即将写入页面来测试存储器。 检查只读存储器ROM版本。47 . 即将在扩展的存储器试写页面；即将基本640K存储器写入页面。48 . 已将基本存储器写入页面；即将确定1MB以上的存储器。 视频检查，CMOS重新配置。49 . 找出1BM以下的存储器并检验；即将确定1MB以上的存储器。 .4A . 找出1MB以上的存储器并检验；即将检查BIOS ROM数据区。 进行视频的初始化。4B . BIOS ROM数据区的检验结束，即将检查＜ESC＞和为软复位清除1MB以上的存储器。 . 4C .清除1MB以上的存储器(软复位)即将清除1MB以上的存储器. 屏蔽视频BIOS ROM。.4D。已清除1MB以上的存储器（软复位）；将保存存储器的大小。 .4E 若检测到有错误；在显示器上显示错误信息，并等待客户按＜F1＞键继续。 开始存储器的测试：（无软复位）；即将显示第一个64K存储器的测试。 显示版权信息。4F 读写软、硬盘数据，进行DOS引导。 开始显示存储器的大小，正在测试存储器将使之更新；将进行串行和随机的存储器测试。 .50 将当前BIOS监时区内的CMOS值存到CMOS中。 完成1MB以下的存储器测试；即将高速存储器的大小以便再定位和掩蔽。 将CPU类型和速度送到屏幕。51 . 测试1MB以上的存储器。 .52 所有ISA只读存储器ROM进行初始化，最终给PCI分配IRQ号等初始化工作。 已完成1MB以上的存储器测试；即将准备回到实址方式。 进入键盘检测。53 如果不是即插即用BIOS，则初始化串口、并口和设置时种值。 保存CPU寄存器和存储器的大小，将进入实址方式。 .54 . 成功地开启实址方式；即将复原准备停机时保存的寄存器。 扫描”打击键”55 . 寄存器已复原，将停用门电路A－20的地址线。 .56 . 成功地停用A－20的地址线；即将检查BIOS ROM数据区。 键盘测试结束。57 . BIOS ROM数据区检查了一半；继续进行。 .58 . BIOS ROM的数据区检查结束；将清除发现＜ESC＞信息。 非设置中断测试。59 . 已清除＜ESC＞信息；信息已显示；即将开始DMA和中断控制器的测试。 .5A . . 显示按”F2”键进行设置。5B . . 测试基本内存地址。5C . . 测试640K基本内存。60 设置硬盘引导扇区病毒保护功能。 通过DMA页面寄存器的测试；即将检验视频存储器。 测试扩展内存。61 显示系统配置表。 视频存储器检验结束；即将进行DMA＃1基本寄存器的测试。 .62 开始用中断19H进行系统引导。 通过DMA＃1基本寄存器的测试；即将进行DMA＃2寄存器的测试。 测试扩展内存地址线。63 . 通过DMA＃2基本寄存器的测试；即将检查BIOS ROM数据区。 .64 . BIOS ROM数据区检查了一半，继续进行。 .65 . BIOS ROM数据区检查结束；将把DMA装置1和2编程。 .66 . DMA装置1和2编程结束；即将使用59号中断控制器作初始准备。 Cache注册表进行优化配置。67 . 8259初始准备已结束；即将开始键盘测试。 .68 . . 使外部Cache和CPU内部Cache都工作。6A . . 测试并显示外部Cache值。6C . . 显示被屏蔽内容。6E . . 显示附属配置信息。70 . . 检测到的错误代码送到屏幕显示。72 . . 检测配置有否错误。74 . . 测试实时时钟。76 . . 扫查键盘错误。7A . . 锁键盘。7C . . 设置硬件中断矢量。7E . . 测试有否安装数学处理器。80 . 键盘测试开始，正在清除和检查有没有键卡住，即将使键盘复原。 关闭可编程输入／输出设备。81 . 找出键盘复原的错误卡住的键；即将发出键盘控制端口的测试命令。 .82 . 键盘控制器接口测试结束，即将写入命令字节和使循环缓冲器作初始准备。 检测和安装固定RS232接口（串口）。83 . 已写入命令字节，已完成全局数据的初始准备；即将检查有没有键锁住。 .84 . 已检查有没有锁住的键，即将检查存储器是否与CMOS失配。 检测和安装固定并行口。 85 . 已检查存储器的大小；即将显示软错误和口令或旁通安排。 .86 . 已检查口令；即将进行旁通安排前的编程。 重新打开可编程I／O设备和检测固定I／O是否有冲突。87 . 完成安排前的编程；将进行CMOS安排的编程。 .88 . 从CMOS安排程序复原清除屏幕；即将进行后面的编程。 初始化BIOS数据区。89 . 完成安排后的编程；即将显示通电屏幕信息。 .8A . 显示头一个屏幕信息。 进行扩展BIOS数据区初始化。8B . 显示了信息：即将屏蔽主要和视频BIOS。 .8C . 成功地屏蔽主要和视频BIOS，将开始CMOS后的安排任选项的编程。 进行软驱控制器初始化。8D . 已经安排任选项编程，接着检查滑了鼠和进行初始准备。 .8E . 检测了滑鼠以及完成初始准备；即将把硬、软磁盘复位。 .8F . 软磁盘已检查，该磁碟将作初始准备，随后配备软磁碟。 .90 . 软磁碟配置结束；将测试硬磁碟的存在。 硬盘控制器进行初始化。91 . 硬磁碟存在测试结束；随后配置硬磁碟。 局部总线硬盘控制器初始化。92 . 硬磁碟配置完成；即将检查BIOS ROM的数据区。 跳转到用户路径2。93 . BIOS ROM的数据区已检查一半；继续进行。 .94 . BIOS ROM的数据区检查完毕，即调定基本和扩展存储器的大小。 关闭A－20地址线。 95 .因应滑鼠和硬磁碟47型支持而调节好存储器的大小；即将检验显示存储器。 .96 . 检验显示存储器后复原；即将进行C800：0任选ROM控制之前的初始准备。 “ES段”注册表清除。97 . C800：0任选ROM控制之前的任何初始准备结束，接着进行任选ROM的检查及控制。 . 98 .任选ROM的控制完成；即将进行任选ROM回复控制之后所需的任何处理。 查找ROM选择。99 . 任选ROM测试之后所需的任何初始准备结束；即将建立计时器的数据区或打印机基本地址。 .9A . 调定计时器和打印机基本地址后的返回操作；即调定RS－232基本地址。 屏蔽ROM选择。9B . 在RS－232基本地址之后返回；即将进行协处理器测试之初始准备。 .9C . 协处理器测试之前所需初始准备结束；接着使协处理器作初始准备。 建立电源节能管理。9D . 协处理器作好初始准备，即将进行协处理器测试之后的任何初始准备。 .9E . 完成协处理器之后的初始准备，将检查扩展键盘，键盘识别符，以及数字锁定。 开放硬件中断。9F . 已检查扩展键盘，调定识别标志，数字锁接通或断开，将发出键盘识别命令。 .A0 . 发出键盘识别命令；即将使键盘识别标志复原。 设置时间和日期。A1 . 键盘识别标志复原；接着进行高速缓冲存储器的测试。 .A2 . 高速缓冲存储器测试结束；即将显示任何软错误。 检查键盘锁。A3 . 软错误显示完毕；即将调定键盘打击的速率。 .A4 . 调好键盘的打击速率，即将制订存储器的等待状态。 键盘重复输入速率的初始化。A5 . 存储器等候状态制定完毕；接着将清除屏幕。 .A6 . 屏幕已清除；即将启动奇偶性和不可屏蔽中断。 .A7 . 已启用不可屏蔽中断和奇偶性；即将进行控制任选的ROM在E000：0之所需的任何初始准备。 .A8 . 控制ROM在E000：0之前的初始准备结束，接着将控制E000：0之后所需的任何初始准备。 清除”F2”键提示。A9 . 从控制E000：0 ROM返回，即将进行控制E000：0任选ROM之后所需的任何初始准备。 .AA . 在E000：0控制任选ROM之后的初始准备结束；即将显示系统的配置。 扫描”F2”键打击。AC . . 进入设置.AE . . 清除通电自检标志。B0 . . 检查非关键性错误。B2 . . 通电自检完成准备进入操作系统引导。B4 . . 蜂鸣器响一声。B6 . . 检测密码设置（可选）。B8 . . 清除全部描述表。BC . . 清除校验检查值。BE 程序缺省值进入控制芯片，符合可调制二进制缺省值表。 . 清除屏幕（可选）。BF 测试CMOS建立值。 . 检测病毒，提示做资料备份。C0 初始化高速缓存。 . 用中断19试引导。C1 内存自检。 . 查找引导扇区中的”55””AA”标记。C3 第一个256K内存测试。 . .C5 从ROM内复制BIOS进行快速自检。 . .C6 高速缓存自检。 . .CA 检测Micronies超速缓冲存储器（如果存在），并使之作初始准备。 . .CC 关断不可屏蔽中断处理器。 . .EE 处理器意料不到的例外情况。 . .FF 给予INI19引导装入程序的控制，主板OK。 humen1 Tech","permalink":"http://www.humen1.com/2008/12/e4-b8-bb-e6-9d-bf-e8-af-8a-e6-96-ad-e5-8d-a1-e4-bb-a3-e7-a0-81-e5-af-b9-e7-85-a7-e8-a1-a8.html","photos":[]},{"tags":[],"title":"解决‘Preg_match() Repeated Subpattern Is Too Long’ 的问题","date":"2008/12/17","text":"还记得之前写了篇文章http://www.humen1.net/2008/10/dz.html这篇文章写了我引用dz论坛的文字过滤机制。最近因为迁移程序到不同的服务器环境下出现了’preg_match() repeated subpattern is too long’ 的问题。原因如下 在php bug 里有这篇文章http://bugs.php.net/bug.php?id=39415&edit;=3最后由高人指点说是PCRE的版本问题。对比了我两台服务器的PCRE版本，的确新服的版本是6.6而老服的版本是6.7那我就暂定是这个原因导致的。不过新服用的是centos5.2做为OS，使用yum更新PCRE说6.6是最高版本了。大家都知道centos使用不是”非常新”（bleeding-edge,指一种最新的，因而也并非完美的技术。使用者为了尝鲜，就要付出稳定性和效率的代价。）的软件导致我更新不到6.7那怎么办呢？想想人家错误写的很明白subpattern is too long 正则表达式太长了么，那我就分段来咯。下面这段是老程序function censorChk($message){$flag = 0;$censor = array();//这里的array是所有屏蔽字数组。 $banned = ‘/(‘.implode(‘|’, $cell).’)/i’;if (preg_match($banned, preg_replace(‘/\\s|\\[[^\\]]\\]/i’,‘’, $message))){$flag = 1;} return $flag;} 修改后成为function censorChk($message){$flag = 0;$censor = array();//这里的array是所有屏蔽字数组。$allChunk = array_chunk($censor,500);//把原始数组分割为n块，每块的长度500foreach ($allChunk as $cell){$banned = ‘/(‘.implode(‘|’, $cell).’)/i’;if (preg_match($banned, preg_replace(‘/\\s|\\[[^\\]]\\]/i’,‘’, $message))){$flag = 1;}} return $flag;} 这样从程序上解决PCRE的限制 humen1 Tech","permalink":"http://www.humen1.com/2008/12/e8-a7-a3-e5-86-b3-e2-80-98preg-match-repeated-subpattern-is-too-long-e2-80-99-e7-9a-84-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[],"title":"SSH,telnet终端中文显示乱码解决办法 (CentOS 5.0 ）","date":"2008/12/16","text":"vi /etc/sysconfig/i18n 将内容改为 LANG=”zh_CN.GB18030”LANGUAGE=”zh_CN.GB18030:zh_CN.GB2312:zh_CN”SUPPORTED=”zh_CN.GB18030:zh_CN:zh:en_US.UTF-8:en_US:en”SYSFONT=”lat0-sun16” humen1 Tech","permalink":"http://www.humen1.com/2008/12/sshtelnet-e7-bb-88-e7-ab-af-e4-b8-ad-e6-96-87-e6-98-be-e7-a4-ba-e4-b9-b1-e7-a0-81-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95-centos-5-0-ef-bc-89.html","photos":[]},{"tags":[],"title":"CentOS添加语言包","date":"2008/12/15","text":"要从语言(Languages)组安装附加语种支持，使用应用程序-添加/删除软件，或者运行命令: shell&gt; yum groupinstall -support 在上面的命令中， 是下列之一: assamese, bengali, chinese, gujarati, hindi,japanese, kannada, korean, malayalam, marathi, oriya, punjabi,sinhala, tamil, thai, 或 telegu。 humen1 Tech","permalink":"http://www.humen1.com/2008/12/centos-e6-b7-bb-e5-8a-a0-e8-af-ad-e8-a8-80-e5-8c-85.html","photos":[]},{"tags":[],"title":"Squid权威指南","date":"2008/12/09","text":"http://blog.s135.com/book/squid/","permalink":"http://www.humen1.com/2008/12/squid-e6-9d-83-e5-a8-81-e6-8c-87-e5-8d-97.html","photos":[]},{"tags":[],"title":"Fms","date":"2008/12/08","text":"http://www.joshuaostrom.com humen1 Tech","permalink":"http://www.humen1.com/2008/12/fms.html","photos":[]},{"tags":[],"title":"合理设置Apache Httpd的最大连接数","date":"2008/12/05","text":"手头有一个网站在线人数增多，访问时很慢。初步认为是服务器资源不足了，但经反复测试，一旦连接上，不断点击同一个页面上不同的链接，都能迅速打开，这种现象就是说明apache最大连接数已经满了，新的访客只能排队等待有空闲的链接，而如果一旦连接上，在keeyalive的存活时间内（KeepAliveTimeout，默认5秒）都不用重新打开连接，因此解决的方法就是加大apache的最大连接数。 1.在哪里设置？ 服务器的为FreeBSD 6.2 ，apache 2.24，使用默认配置（FreeBSD 默认不加载自定义MPM配置），默认最大连接数是250 在/usr/local/etc/apache22/httpd.conf中加载MPM配置（去掉前面的注释）：# Server-pool management (MPM specific)Include etc/apache22/extra/httpd-mpm.conf 可见的MPM配置在/usr/local/etc/apache22/extra/httpd-mpm.conf，但里面根据httpd的工作模式分了很多块，哪一部才是当前httpd的工作模式呢？可通过执行apachectl -l 来查看：Compiled in modules:core.cprefork.chttp_core.cmod_so.c 看到prefork 字眼，因此可见当前httpd应该是工作在prefork模式，prefork模式的默认配置是： StartServers 5MinSpareServers 5MaxSpareServers 10MaxClients 150MaxRequestsPerChild 0 2.要加到多少？ 连接数理论上当然是支持越大越好，但要在服务器的能力范围内，这跟服务器的CPU、内存、带宽等都有关系。 查看当前的连接数可以用：ps aux | grep httpd | wc -l 或：pgrep httpd|wc -l 计算httpd占用内存的平均数:ps aux|grep -v grep|awk ‘/httpd/{sum+=$6;n++};END{print sum/n}’ 由于基本都是静态页面，CPU消耗很低，每进程占用内存也不算多，大约200K。 服务器内存有2G，除去常规启动的服务大约需要500M（保守估计），还剩1.5G可用，那么理论上可以支持1.5*1024*1024*1024/200000= 8053.06368 约8K个进程，支持2W人同时访问应该是没有问题的（能保证其中8K的人访问很快，其他的可能需要等待1、2秒才能连上，而一旦连上就会很流畅） 控制最大连接数的MaxClients ，因此可以尝试配置为： StartServers 5MinSpareServers 5MaxSpareServers 10ServerLimit 5500MaxClients 5000MaxRequestsPerChild 100 注意，MaxClients默认最大为250，若要超过这个值就要显式设置ServerLimit，且ServerLimit要放在MaxClients之前，值要不小于MaxClients，不然重启httpd时会有提示。 重启httpd后，通过反复执行pgrep httpd|wc -l来观察连接数，可以看到连接数在达到MaxClients的设值后不再增加，但此时访问网站也很流畅，那就不用贪心再设置更高的值了，不然以后如果网站访问突增不小心就会耗光服务器内存，可根据以后访问压力趋势及内存的占用变化再逐渐调整，直到找到一个最优的设置值。 (MaxRequestsPerChild不能设置为0，可能会因内存泄露导致服务器崩溃） 更佳最大值计算的公式： apache_max_process_with_good_perfermance &lt; (total_hardware_memory /apache_memory_per_process ) * 2apache_max_process = apache_max_process_with_good_perfermance * 1.5 参考： apache的参数设置 Apache 2.0性能优化―MPM的选择与配置 如何避免apache的httpd进程占用比较多的内存 对apache中并发控制参数prefork理解和调优 附： 实时检测HTTPD连接数：watch -n 1 -d “pgrep httpd|wc -l” humen1 Tech","permalink":"http://www.humen1.com/2008/12/e5-90-88-e7-90-86-e8-ae-be-e7-bd-aeapache-httpd-e7-9a-84-e6-9c-80-e5-a4-a7-e8-bf-9e-e6-8e-a5-e6-95-b0.html","photos":[]},{"tags":[],"title":"CentOS官方推荐的RPMforge软件仓库安装方法[linux]","date":"2008/12/02","text":"RPMForge拥有4000多种CentOS的软件包，被CentOS社区认为是最安全也是最稳定的一个软件仓库。 主页：http://rpmforge.net/ 1、确认系统是否安装了priority这个yum的插件，这个插件用来保证安装软件时候软件仓库先后次序，一般是默认先从官方base或者镜像安装，然后从社区用户contribute的软件中安装，再从第三方软件仓库中安装。当然这个次序可以自己更改，为了安全和稳定还是依照这个次序吧…. #yum install yum-priorities 安装完以后查看 /etc/yum/pluginconf.d/priorities.conf 文件，确认文件中有这一行 [main] enabled=1 2、现在就可以手动编辑 /etc/yum.repos.d/ 目录中后缀为.repos的文件来设置软件仓库的先后次序（感觉我这个翻译不是很适当，priority主要还是个权限问题，但一时找不到更好的词，就这样吧）…. priority=N(N是整数，范围从1-99) 官方推荐配置是 [base], [addons], [updates], [extras] … priority=1 [centosplus],[contrib] … priority=2 Third Party Repos such as rpmforge … priority=N (where N is &gt; 10 and based on your preference) 3、现在开始安装rpmforge的软件仓库 a 先下载rpmforge的安装包 i386 [http://apt.sw.be/redhat/el5/en/i386/RPMS.dag/rpmforge-release-0.3.6-1.el5.rf.i386.rpm](http://apt.sw.be/redhat/el5/en/i386/RPMS.dag/rpmforge-release-0.3.6-1.el5.rf.i386.rpm) x86_64 [http://apt.sw.be/redhat/el5/en/x86\\_64/RPMS.dag/rpmforge-release-0.3.6-1.el5.rf.x86\\_64.rpm](http://apt.sw.be/redhat/el5/en/x86_64/RPMS.dag/rpmforge-release-0.3.6-1.el5.rf.x86_64.rpm)*不知道什么架构的用 uname -i 命令查看 b 安装DAG的PGP Key rpm –import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt c 验证下载包的完整性 rpm -K rpmforge-release-0.3.6-1.el5.rf.*.rpm d 安装包 rpm -i rpmforge-release-0.3.6-1.el5.rf.*.rpm e 更改 /etc/yum.repos.d/rpmforge.repo 配置文件，就是添加 priority=3（或者1.2.4.…）这一句 f 现在就可以使用rpmforge这个软件仓库了…. humen1 Tech","permalink":"http://www.humen1.com/2008/12/centos-e5-ae-98-e6-96-b9-e6-8e-a8-e8-8d-90-e7-9a-84rpmforge-e8-bd-af-e4-bb-b6-e4-bb-93-e5-ba-93-e5-ae-89-e8-a3-85-e6-96-b9-e6-b3-95linux.html","photos":[]},{"tags":[],"title":"Freebsd Tar的详细用法","date":"2008/11/26","text":"tar命令tar 文件是几个文件和（或）目录在一个文件中的集合。这是创建备份和归档的佳径。 tar 使用的选项有： -c ― 创建一个新归档。 -f ― 当与 -c 选项一起使用时，创建的 tar 文件使用该选项指定的文件名；当与 -x 选项一起使用时，则解除该选项指定的归档。 -t ― 显示包括在 tar 文件中的文件列表。 -v ― 显示文件的归档进度。 -x ― 从归档中抽取文件。 -z ― 使用 gzip 来压缩 tar 文件。 -j ― 使用 bzip2 来压缩 tar 文件。 要创建一个 tar 文件，键入： tar -cvf filename.tar directory/file 可以使用 tar 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔： tar -cvf filename.tar /home/mine/work /home/mine/school 上面的命令把 /home/mine 目录下的 work 和 school 子目录内的所有文件都放入当前目录中一个叫做 filename.tar 的新文件里。 要列出 tar 文件的内容，键入：tar -tvf filename.tar 要抽取 tar 文件的内容，键入tar -xvf filename.tar 这个命令不会删除 tar 文件，但是它会把被解除归档的内容复制到当前的工作目录下，并保留归档文件所使用的任何目录结构。譬如，如果这个 tar 文件中包含一个叫做bar.txt 的文件，而这个文件包含在 foo/ 目录中，那么，抽取归档文件将会导致在你当前的工作目录中创建foo/ 目录，该目录中包含 bar.txt 文件 tar 默认不压缩文件。 要创建一个使用 tar 和 bzip 来归档压缩的文件，使用 -j 选项：tar -cjvf filename.tbz file 以上命令创建了一个归档文件，然后将其压缩为 filename.tbz 文件。如果你使用 bunzip2 命令为 filename.tbz 文件解压，filename.tbz 文件会被删除，继之以 filename.tar 文件。 你还可以用一个命令来扩展并解除归档 bzip tar 文件：tar -xjvf filename.tbz 要创建一个用 tar 和 gzip 归档并压缩的文件，使用 -z 选项：tar -czvf filename.tgz file 这个命令创建归档文件 filename.tar，然后把它压缩为 filename.tgz 文件（文件 filename.tar 不被保留）。如果你使用 gunzip 命令来给 filename.tgz 文件解压，filename.tgz 文件会被删除，并被替换为 filename.tar。 你可以用单个命令来扩展 gzip tar 文件：tar -xzvf filename.tgz 一. tar 1.压缩一组文件为tar.gz后缀。# tar cvf backup.tar /etc#gzip -q backup.tar或# tar cvfz backup.tar.gz /etc/tar zxvf XXXX.tar.gz tar jxvf XXXX tar.bz2 2.释放一个后缀为tar.gz的文件。#gunzip backup.tar.gz#tar xvf backup.tar或# tar xvfz backup.tar.gz 3.用一个命令完成压缩#tar cvf - /etc/ | gzip -qc &gt; backup.tar.gz 4.用一个命令完成释放# gunzip -c backup.tar.gz | tar xvf - 5.如何解开tar.Z的文件？# tar xvfz backup.tar.Z或# uncompress backup.tar.Z#tar xvf backup.tar 6.如何解开.tgz文件？#gunzip backup.tgz 7.如何压缩和解压缩.bz2的包？#bzip2 /etc/smb.conf这将压缩文件smb.conf成smb.conf.bz2#bunzip2 /etc/smb.conf.bz2这将在当前目录下还原smb.conf.bz2为smb.conf注: .bz2压缩格式不是很常用，你可以man bzip2 humen1 Tech","permalink":"http://www.humen1.com/2008/11/freebsd-tar-e7-9a-84-e8-af-a6-e7-bb-86-e7-94-a8-e6-b3-95.html","photos":[]},{"tags":[],"title":"带属性转移文件【Unix】","date":"2008/11/20","text":"# cd /usr/local # tar cf - * | (cd /data/local; tar xf -) 将/usr/local内所有数据转移到 /data/local 为了保证数据安全，用tar将数据复制到另一个目录中，之所以使用tar而非cp -R命令，是为了保证复制文件和目录时保留它们的属主、权限控制属性的一致性。 humen1 Tech","permalink":"http://www.humen1.com/2008/11/e5-b8-a6-e5-b1-9e-e6-80-a7-e8-bd-ac-e7-a7-bb-e6-96-87-e4-bb-b6-e3-80-90unix-e3-80-91.html","photos":[]},{"tags":[],"title":"Df和du命令详解","date":"2008/11/20","text":"df命令详细用法 a：显示全部的档案系统和各分割区的磁盘使用情形 i：显示i -nodes的使用量 k：大小用k来表示 (默认值) t：显示某一个档案系统的所有分割区磁盘使用量 x：显示不是某一个档案系统的所有分割区磁盘使用量 T：显示每个分割区所属的档案系统名称 常用命令：df -hi 操作详解 指令 df 可以显示目前所有档案系统的最大可用空间及使用情形，请看下列这个例子： # df -h Filesystem Size Used Avail Capacity Mounted on /dev/ad0s1a 1.9G 389M 1.4G 21% / devfs 1.0K 1.0K 0B 100% /dev /dev/ad0s1d 989M 54K 910M 0% /tmp /dev/ad0s1f 4.8G 3.8G 657M 86% /usr /dev/ad0s1e 1.9G 149M 1.6G 8% /var /dev/ad0s1g 26G 890K 24G 0% /volume2 /dev/da0s1d 325G 261G 38G 87% /volume1 我们加了参数 -h 表示使用「Human-readable」的输出，也就是在档案系统大小使用 GB、MB 等易读的格式。 上面的指令输出的第一个字段及最后一个字段分别是档案系统及其挂入点。我们可以看到 /dev/ad0s1a 这个分割区被挂在根目录下。我们在上一小节提到过 ad 所代表的是 IDE 的硬盘，而 s1 表示第一个主要扇区。我另外有一个 SCSI 硬盘，它的代号是 da，它的容量很大，主要用来存放数据。devfs 是一个特别的档案系统，该档案系统并非真的磁盘，而是 FreeBSD 用来管理系统硬件装置的虚拟档案系统。 接下来的四个字段 Size、Used、Avail、及 Capacity 分别是该分割区的容量、已使用的大小、剩下的大小、及使用的百分比。当硬盘容量已满时，您可能会看到已使用的百分比超过 100%，因为 FreeBSD 会留一些空间给 root，让 root 在档案系统满时，还是可以写东西到该档案系统中，以进行管理。 另外，我们还可以使用参数 -i 来查看目前档案系统 inode 的使用情形。有的时候虽然档案系统还有空间，但若没有足够的 inode 来存放档案的信息，一样会不能增加新的档案。 # df -ih Filesystem Size Used Avail Capacity iused ifree %iused Mounted on /dev/ad0s1a 1.9G 389M 1.4G 21% 20495 262127 7% / devfs 1.0K 1.0K 0B 100% 0 0 100% /dev /dev/ad0s1d 989M 62K 910M 0% 24 141286 0% /tmp /dev/ad0s1f 4.8G 3.8G 657M 86% 311439 348015 47% /usr /dev/ad0s1e 1.9G 149M 1.6G 8% 1758 280864 1% /var /dev/ad0s1g 26G 890K 24G 0% 12 3532786 0% /volume2 /dev/da0s1d 325G 261G 38G 87% 707277 43311409 2% /volume1 我们可以看到根目录的已经用掉的 inode 数量为 20495，还有 262127 的可用 inode。 小提示 还记得什么是 inode 吗？所谓的 inode 是用来存放档案及目录的基本信息 (metadata)，包含时间、档名、使用者及群组等。在分割扇区时，系统会先做出一堆 inode 以供以后使用，inode 的数量关系着系统中可以建立的档案及目录总数。如果要存的档案大部分都很小，则同样大小的硬盘中会有较多的档案，也就是说需要较多的 inode 来挂档案及目录。 du：查询档案或目录的磁盘使用空间 a：显示全部目录和其次目录下的每个档案所占的磁盘空间 b：大小用bytes来表示 (默认值为k bytes) c：最后再加上总计 (默认值) s：只显示各档案大小的总合 x：只计算同属同一个档案系统的档案 L：计算所有的档案大小 常用命令：du -a 操作详解 指令 du 能以指定的目录下的子目录为单位，显示每个目录内所有档案所占用的磁盘空间大小。例如： # du -h /etc 104K /etc/defaults 6.0K /etc/X11 8.0K /etc/bluetooth 4.0K /etc/gnats 52K /etc/isdn 388K /etc/mail 68K /etc/mtree 2.0K /etc/ntp 38K /etc/pam.d 44K /etc/periodic/daily 6.0K /etc/periodic/monthly 42K /etc/periodic/security 16K /etc/periodic/weekly 110K /etc/periodic 6.0K /etc/ppp 318K /etc/rc.d 2.0K /etc/skel 130K /etc/ssh 10K /etc/ssl 1.7M /etc 我们目样使用 -h 参数来显示 human-readable 的格式。在应用时，我们可以使用 du 这个指令来查看哪个目录占用最多的空间。不过，du 的输出结果通常很长，我们可以加上 -s 参数来省略指定目录下的子目录，而只显示该目录的总合即可： # du -sh /etc 1.7M /etc 在查看目录的使用情形时，我们可以将输出结果导到 sort 指令进行排序，以了解哪个档案用了最多的空间： # du /etc | sort -nr | more 1746 /etc 388 /etc/mail 318 /etc/rc.d 130 /etc/ssh 110 /etc/periodic 104 /etc/defaults 68 /etc/mtree 52 /etc/isdn 44 /etc/periodic/daily 42 /etc/periodic/security 38 /etc/pam.d 16 /etc/periodic/weekly 10 /etc/ssl 8 /etc/bluetooth 6 /etc/ppp 6 /etc/periodic/monthly 6 /etc/X11 4 /etc/gnats 2 /etc/skel 2 /etc/ntp sort 的参数 -nr 表示要以数字排序法进行反向排序，因为我们要对目录大小做排序，所以不可以使用 human-readable 的大小输出，不然目录大小中会有 K、M 等字样，会造成排序不正确。 humen1 Tech","permalink":"http://www.humen1.com/2008/11/df-e5-92-8cdu-e5-91-bd-e4-bb-a4-e8-af-a6-e8-a7-a3.html","photos":[]},{"tags":[],"title":"一些实用的时间获得方式（PHP）","date":"2008/11/17","text":"echo ‘本周第一天（星期日为一周开始）：’.date(‘Y-m-d’, time()-86400date(‘w’)).’‘;echo ‘本周第一天（星期一为一周开始）：’.date(‘Y-m-d’, time()-86400\\date(‘w’)+(date(‘w’)&gt;0?86400:-6*86400)).’‘;echo ‘本月第一天：’.date(‘Y-m-d’, mktime(0,0,0,date(‘n’),1,date(‘Y’))).’‘;echo ‘本月最后一天：’.date(‘Y-m-d’, mktime(0,0,0,date(‘n’),date(‘t’),date(‘Y’))).’‘; humen1 Tech","permalink":"http://www.humen1.com/2008/11/e4-b8-80-e4-ba-9b-e5-ae-9e-e7-94-a8-e7-9a-84-e6-97-b6-e9-97-b4-e8-8e-b7-e5-be-97-e6-96-b9-e5-bc-8f-ef-bc-88php-ef-bc-89.html","photos":[]},{"tags":[],"title":"超酷小游戏站（国外）","date":"2008/11/03","text":"http://www.ferryhalim.com/orisinal/ humen1 Tech","permalink":"http://www.humen1.com/2008/11/e8-b6-85-e9-85-b7-e5-b0-8f-e6-b8-b8-e6-88-8f-e7-ab-99-ef-bc-88-e5-9b-bd-e5-a4-96-ef-bc-89.html","photos":[]},{"tags":[],"title":"程式設計師的格言","date":"2008/10/30","text":"看到這幾句是節錄第 3、9、35點 和 ex 第 6、14 點, 本來想紀錄覺得有趣的就好, 但是幾乎都太經典了(特別是最下面的 ex 系列), 還是全文轉載留存, 感謝作者的辛勞. Orz..(註: 內文轉載, 有稍做簡單的排版) 需求規格在程式寫完後才會敲定。基本規格要客戶看到成品後才會決定。詳細規格要使用者用過後才會確定。 要殺一個程式設計師不需要刀，改三次規格就好 程式的異常該稱為「bug」還是「規格上的限制」是看期限還剩多久決定的 過了三天就是別人寫的程式碼 沒有什麼事情比直接讓找不到任何bug的程式直接上線還要可怕的了 日本所說的 SE, 我是覺得比較像台灣稱的 系統分析師 - System Analyst(SA). 作者查詢的 SE 解釋: System Engineer(SE): 根據需求說明，編寫項目設計式樣書，同時參與部分模塊的開發與測試 下述文章完整轉載自: 程式設計師的格言 « but, or bug 程式設計師的格言（盜作不少） 譯自 プログラマーの格言（盗作多し） http://mixi.jp/view_community.pl?id=1772737 (版本2 2008/10/12更新) 譯註 SE是日本軟體公司裡程式設計師的頭子。自己不太寫程式，主要工作是跟客戶確認規格。 程式設計師多半自己不面對客戶。 跟PM又不一樣。（有什麼比較貼切的職稱翻譯嗎？） 每天有24小時。所謂的「今天之內」，是指到明天早上為止。 程式不會照自己所想的跑。只會照所寫的跑。 需求規格在程式寫完後才會敲定。基本規格要客戶看到成品後才會決定。詳細規格要使用者用過後才會確定。 我對軟體設計的方式導出的結論，有兩種方式。一是把軟體設計得單純到很明顯不會有缺陷，不然就是把軟體設計得複雜到沒有明顯的缺陷。- C.A.R.Hoare 程式碼不要在開發現場寫！ 去客戶那寫！除錯不要在期限前做！ 上線後再做！ 畫面是藍色的！(國際太空站太空人重新安裝 Windows NT，日誌中的名句) 先說「沒辦法」的人贏。 有意見的話你寫 要殺一個程式設計師不需要刀，改三次規格就好 首先要先懷疑別人，被懷疑的人或許會把問題解決掉。（註：通常會「先懷疑自己」） 開發沒有終點。只有釋出(release)。 無論規格多晚才能確定，結案期限永遠不會變。這是所謂的「期限守恆定理」。 客戶總是覺得水跟追加需求是不用錢的。 付錢愈計較的客人愈囉唆。 在排定開發行程時，總是視而不見一些連小學生都會的算數。業務部門總是一堆不知道1+1=2的人。 一個人掛了大家都掛了。 bug過了一晚可能就變成規格了。 好的規格找一個天才不如找三個凡人。爛的規格找一百個凡人不如找一個天才。 客製軟體中30%的價格用在確認規格上。30%用在修改規格上。30%用在找bug。結果初期規格反映在價格上占的比例只有10%。 對客戶來說SE是部下，程式設計師是家畜。對SE來說客人是錢，對程式設計師來說顧客是看不見的病毒。除了弄完程式以外，沒有其他驅除的辦法。 顧客想受SE喜歡，要自己了解到系統開發需要時間與金錢，早點確定規格。SE想受顧客喜歡，則要讓程式設計師討厭自己。 很多SE跟程式設計師都暗自想著有錢有閒的話什麼系統都想自己動手做，不過都沒這種機會。 品質的劣化程度依規格改變的次數與規模而定。 業務是認為空想能夠實現的夢想家。SE則是深信任何障礙都能突破的冒險家。程式設計師則是被夢想家和冒險家拋到漆黑海裡的漂流者。 有才能的程式設計師第一次看到設計細節時，要先理解程式的目的。接下來要設法讓SE了解到以指定的方法、工時並無法完成這個工作。 程式是運氣與直覺堆砌而成的奇蹟。若不具備這兩者，不可能以這樣的工時實現這樣的規格。修改規格是對奇蹟吐槽的褻瀆行為。而追加修改則是相信奇蹟還會重現的無謀行動。 程式設計師聽了「把自己當作顧客去著想！」而開始思考。啊，像夢一樣。 對於因為興趣而寫程式的人來說，所謂的技術是程式語言能力。對於因為工作而寫程式的人來說，所謂的技術是邏輯思考能力與人際溝通能力。程式語言可以看著手冊溝通，客戶不行。 程式系統在交貨之前會不斷縮小。先用元件定義取悅老闆。再拿經費概算要部長妥協現實的方案。在運用會議中，課長會嘗識減少自己責任範圍。在細節會議中，負責人會把範圍縮到自己記得的部分。 SE需要持久力，程式設計師需要爆發力。 準時離開公司，工作會變多。 完美的程式需要完美的時間與金錢。聽說揮霍著美國的國家預算的NASA，也覺得時間跟錢不夠。 詳細設計要在程式碼的註解裡做完。註解是唯一的自衛手段，至少要讓自己看懂。 還有時間看程式碼的話就執行他。CPU跑得比腦細胞快。至少這時候可以休息。 程式的異常該稱為「bug」還是「規格上的限制」是看期限還剩多久決定的。 所謂便服日，好像社會上把他叫做假日(註) 日本有些公司會有所謂便服日（不用穿西裝的日子），通常是星期五，但… 地獄持續一段時間後，充滿殺氣的怒吼會變多。再持續一段時間，說話會變少但牢騷會變多，壟罩在凝重的氣氛裡。再持續下去，反而會海闊天空，四周洋溢充滿活力的聲音。這種狀態稱為「Programmer’s High」，也是倒下來的人開始出現的時候。 遠處的火災一定燒到這裡。 禱告，然後 “工作” 吧。(修道院的標語) 程式不是用腦記的，要用身體記住。 明天能放假的話死了也罷。 外面有下雨耶，昨天開始下的嗎？ 心若不廢掉(消極)，身體會廢掉。若不讓自己殘忍，自己會被殺。 客戶會說謊，業務會作夢，SE會做白日夢。程式設計師則惦惦。（愈來愈自言自語） SE總是不講理的(unreasonable)說「沒有辦不到(impossible)」，業務總是沒辦法(impossible)說「沒道理(unreasonable)」。 規格書就像航海圖，客戶則是洋流。洋流陰晴不定，航海圖就變垃圾。程式設計師必須在沒有航海圖的海上憑自己的力量找到大陸。 再嘮嘮叨叨下去也是要付錢的。 多想個10","permalink":"http://www.humen1.com/2008/10/e7-a8-8b-e5-bc-8f-e8-a8-ad-e8-a8-88-e5-b8-ab-e7-9a-84-e6-a0-bc-e8-a8-80.html","photos":[]},{"tags":[],"title":"PHP用array_push() Array_reverse() Array_pop()来模拟队列～","date":"2008/10/28","text":"$a = array(0=&gt;1,1=&gt;2,2=&gt;3);//原始数组 print_r($a); echo “ “; $b = 4;//要入队的数 array_push($a,$b);//将$b压入数组的末尾（入栈） print_r($a); echo “ “; $c = array_reverse($a);//将数组单元顺序颠倒 print_r($c); echo “ “; array_pop($c);//将颠倒后的数组最后一个单元弹出（出栈） print_r($c); echo “ “; $d = array_reverse($c);//将数组顺序恢复 print_r($d); echo “ “; ?&gt; humen1 Tech","permalink":"http://www.humen1.com/2008/10/php-e7-94-a8array-push-array-reverse-array-pop-e6-9d-a5-e6-a8-a1-e6-8b-9f-e9-98-9f-e5-88-97-ef-bd-9e.html","photos":[]},{"tags":[],"title":"纠正了自己的错误想法--DZ论坛文字过滤做法！","date":"2008/10/28","text":"公司项目需要文字的过滤系统，于是我第一反应将敏感字词入库，然后用待过滤string去数据库中select like %string% 但是经过现实的检查这样的做法是错误的。 字库中的字是小的集合，而待过滤的string是大的集合，怎么能用大集合去匹配小集合呢？ 于是我找来DZ论坛的源码研究了一下，发现他的做法相对科学。于是就有了club-fish现在的敏感词过滤系统。 第一步： 还是将敏感词入库 第二步： 将敏感词全部提取出来按一定格式存放在文本文件中（cache） 第三步： 这个是匹配前的准备，将cache中的敏感词组合成正则。 第四步： 用上一步生成的正则去匹配待过滤string，产生结果。 参考程序discuzcode.func.php中的 function censor($message) humen1 Tech","permalink":"http://www.humen1.com/2008/10/e7-ba-a0-e6-ad-a3-e4-ba-86-e8-87-aa-e5-b7-b1-e7-9a-84-e9-94-99-e8-af-af-e6-83-b3-e6-b3-95-dz-e8-ae-ba-e5-9d-9b-e6-96-87-e5-ad-97-e8-bf-87-e6-bb-a4-e5-81-9a-e6-b3-95-ef-bc-81.html","photos":[]},{"tags":[],"title":"让服务器支持Ssl","date":"2008/10/21","text":"1.在编译安装apache时要将mod_ssl选上 2.在安装php扩展的时候将openssl选上 humen1 Tech","permalink":"http://www.humen1.com/2008/10/e8-ae-a9-e6-9c-8d-e5-8a-a1-e5-99-a8-e6-94-af-e6-8c-81ssl.html","photos":[]},{"tags":[],"title":"离开Internet我迷失自己","date":"2008/10/16","text":"这么多年的游戏生涯，再加上这些年的职业生涯。我已经深陷网络。 习惯了每天要面对的，每天要碰触的 显示器和键盘，没有了网络我还有什么剩余价值呢？ 现在的我对自己真正的价值走进了没有答案的误区。 我开始反思了。。。离开internet我还能做什么？！ humen1 Tech","permalink":"http://www.humen1.com/2008/10/e7-a6-bb-e5-bc-80internet-e6-88-91-e8-bf-b7-e5-a4-b1-e8-87-aa-e5-b7-b1.html","photos":[]},{"tags":[],"title":"Mysql5 修改默认最大连接数","date":"2008/10/07","text":"在/etc下的 my.cnf文件中 [mysqld]区块中新增一句 max_connections = 768 然后重启数据库 #mysql -u user -p后 mysql&gt;show variables;会看到max_connections 的值 humen1 Tech","permalink":"http://www.humen1.com/2008/10/mysql5-e4-bf-ae-e6-94-b9-e9-bb-98-e8-ae-a4-e6-9c-80-e5-a4-a7-e8-bf-9e-e6-8e-a5-e6-95-b0.html","photos":[]},{"tags":[],"title":"Re: 小重山","date":"2008/09/19","text":"射雕三部曲主要人物生年事迹表 1143 王重阳(实生于1112) 114? 林朝英 1158 段智兴 1162 成吉思汗 柯镇恶(江南七怪之首) 1163 周伯通 1165 洪七公 1169 欧阳锋 1171 黄药师 1173 曲灵风 1175 邱处机(实生于1148 全真教七真人之一) 1178 裘千仞 1183 金轮大王 1184 朱子柳 1186 陈玄风 1188 黄蓉之母冯氏 梅超风 1193 裘千尺 1198 公孙止 1200 第一次华山论剑(东邪西毒南帝北丐中神通) 中神通王重阳独夺《九阴真经》 1201 王重阳拜访段智兴 瑛姑结识周伯通 瑛姑怀孕10月怀胎 1202 瑛姑生子周念通 段智兴病倒 1203 裘千仞杀害瑛姑之子 邱处机刺杀王道乾并结交郭杨二位好友 猪(正好符合郭靖傻的性格) 郭靖杨康出生(邱处机起名) 穆念慈 1205 王重阳仙逝(实卒于1170) 欧阳锋抢九阴 周伯通到桃花岛索要九阴 初遇黄药师自毁真经下册 在桃花岛困了15年 1206 虎 黄蓉 段智兴皇爷出家法号一灯 1207 成吉思汗统一蒙古 曲灵风卒 1208 李莫愁 1211 冯氏卒 1214 陈玄风卒 1215 忽必烈 1219 郭靖16岁 遇见马钰 学了两年的内功 1220 龙(小龙女这一称呼估计和属相有关) 小龙女 1221 《射雕》重点 郭靖18岁南下中原 郭黄相识 靖康于嘉兴比武 岳阳大会、铁掌峰、会一灯、烟雨楼等事件 1223 穆念慈在铁掌峰受孕 杨康惨死于铁枪庙 耶律齐 1224 郭靖随成吉思汗大军西征 初春打燕京 攻打花剌子模 猴(正好符合杨过的放荡不羁的性格) 杨过 1225 靖蓉成婚 第二次华山论剑(裘千仞周伯通郭靖参加) 成吉思汗逝世(实卒于1227西夏) 《射雕》结束 1227 蒙古灭西夏 史载邱处机死(在小说中未死) 郭芙 程英 陆无双(也可能1228) 1229 穆念慈卒 1234 南宋联合蒙古灭金 小龙女师父(林朝英的丫鬟)被欧阳锋重伤而死 1238 郭靖送杨过到终南山全真教 杨过14岁 小龙女18岁接任古墓掌门 1239 孙婆婆救杨过被郝大通打死 杨过进入古墓派 1242 杨过愿为小龙女而死 破师祖誓言他们从水道离开古墓 1243 兔 郭襄 郭破虏 杨过小龙女练九阴真经 小龙女被欧阳锋点穴被甄志丙强暴 1244 杨过断臂 郭芙冰魄银针正中杨龙二人 绝情谷天竺和尚和李莫愁卒 公孙止裘千尺卒 小龙女跳下断肠崖 神雕带杨过练武 1247.05.15 羊 张三丰(张君宝) 1251 蒙古蒙哥即位 1252 杨过漫游江南行侠仗义得神雕侠称号 1259 裘千仞卒 郭襄16岁生日 1260 三月初七杨过小龙女16年相约 襄阳大战蒙哥卒(实卒于重庆合川) 杨过36岁 小龙女40岁 第三次华山论剑(东邪西狂南僧北侠中顽童) 神雕侠侣一起隐居于活死人墓 蒙古忽必烈即位 《神雕》结束 1263 郭襄少林寻杨过 觉远大师卒 郭襄20岁 张三丰16岁 《倚天》开始 1271 忽必烈建元朝 1273 元攻克襄阳 郭靖黄蓉郭破虏卒 郭襄30岁 1279 蒙古灭南宋 1283 郭襄40岁创峨嵋派 128? 玄冥 1285 鹰王 1292 成昆 1294 忽必烈卒 1295 羊 狮王谢逊 宋远桥(武当七侠之首) 1310 杨逍 1313 牛 张翠山 1315 范遥 1317 蛇 殷素素 与张翠山牛鬼蛇神，难怪命运多舛 1318 殷梨亭(实为利亨) 1328 朱元璋 1330 常遇春 1331 杨过小龙女的曾孙女黄衫女子 1332 徐达 宋青书 1337 牛 张无忌 张三丰90岁 1339 兔 周芷若 赵敏 1346 张翠山殷素素卒 张三丰虚岁100 1347 张无忌回中原 1358 张无忌任明教教主 1368 朱元璋灭元建明 1380 宋远桥卒 1398 朱元璋卒 2003.10.08 金庸先生第一次来到华山 第四次华山论剑 humen1 Tech","permalink":"http://www.humen1.com/2008/09/re-e5-b0-8f-e9-87-8d-e5-b1-b1.html","photos":[]},{"tags":[],"title":"小重山","date":"2008/09/19","text":"昨夜寒蛩不住鸣。 惊回千里梦，已三更。 起来独自绕阶行。 人悄悄，帘外月胧明。白首为功名。 旧山松竹老，阻归程。 欲将心事付瑶琴。 知音少，弦断有谁听。 humen1 Tech","permalink":"http://www.humen1.com/2008/09/e5-b0-8f-e9-87-8d-e5-b1-b1.html","photos":[]},{"tags":[],"title":"Google Chrome","date":"2008/09/03","text":"今早 下了google 浏览器，作为一个G谜自然要抢先试用这款惊世骇俗的浏览器。 和我想象的一样，从UI到操作都简单到了一个新的梯度，这款浏览器也是我本周推荐给我父亲的产品，相信在没有我指导的前提下他也能顺利的浏览Internet。 就我个人近1小时的体验我喜欢的特性如下： 标签随意拖动 – 光标抓住浏览器的页签在窗口中可随意放置，即页签排序，这是目前市面浏览器都有的功能。随即将页签拖拽出窗口，一个新的Chrome窗口诞生了！ 这项功能十分有用，在浏览网路的时候我们希望不要打开N多的窗口，不过有时我们也需要将一类网站与其他部众分离开，举一个例子：我需要将工作时用到的网页放在一个窗口内，如果是非Google浏览器我将要重新打开新窗口或者右键菜单，而google就替我省下了这3、4秒时间&amp;&amp;1-2下鼠标点击。 速度 – 无疑如此简洁（每个元素都是必不可少的）的浏览器在速度体验上让我看到了智慧的光芒，从启动应用程序到浏览web都给我一种如释重负的感觉。伴随着这种清新脱俗的浏览体验，google Chrome应该会给网路带来新的发展源动力。 开发之力 – 作为一个web程序员，最关心的就是开发工具了。google很贴心的为我们准备了2款我认为10分有用的工具，一是”任务管理器”，二是”js控制台”。 别误会，”任务管理器”并非是ctrl+alt+del的快捷方式。此工具能显示出google浏览器中web应用程序的详细信息，并可在浏览器奔溃的时候关闭导致奔溃的进程。此功能 再也不会让你在浏览器奔溃后重启浏览器并丢失所有当前会话了！ “js控制台”就类似于FF的firebug只是比较轻量级。 总体来说Chrome还是一个轻量级选手，不过他的速度、力度足以匹敌重量级选手们，我拭目以待，看他的战绩了！ humen1 Tech","permalink":"http://www.humen1.com/2008/09/google-chrome.html","photos":[]},{"tags":[],"title":"写给自己的话[一]","date":"2008/08/14","text":"有很多话想要对人说，但是怕他人厌烦，同时我也并非乐意与他人分享心情。所以就有了这些文字。 纯属泛水。。。 今天发生了很多事。。。应该说最近发生了很多事，给我本已憔悴的心又加负了。不知道从什么地方开始说也不想以某某文体来承载于是我想到了和自己聊聊，希望这是个不错的主意。 一个我就叫”我” 还有一个副本就叫”吖柒”。 我：吖柒，最近我们公司发生了许多事。 吖柒：是么？好事还是坏事呢？ 我：恩～～不知道，也许还是不知道的好。 吖柒：严重么？ 我：可能，有可能是酷噜的转折，也是我的。 吖柒：转折？！听上去不错啊。事情总会变好的哦。 我：恩，我也这么想，但是事实不是站在我这边的。 吖柒：到底出了什么事了？ 我：和我work了一年多的同事决定要去走自己的路了，新来的同事也辞职了，本来以为搬了办公室会更好的，不过看来情况并没有怎么好转，反而原本淡定的qooluer现在都沉不住气了。 吖柒：。。。改变是经常有的，怎么，你受不了么？ 我：还好，我自认为是小强，有着坚定的意志可以不受干扰的完成自己的梦，不过现实总是不站我一边。我觉得越来越老了，感到害怕是因为我怕自己热情不在――在我还没功成名就前，就被现实打败了！ 吖柒：那又怎么嘀？既然你不选择常人的路就应该承受现实，难道还能回头重来？当初你决定的时候难道没有考虑过失败？ 我：当初把失败看的太轻，付出了以后才发现失败那么可怕！ 吖柒：付出有回报么？ 我：有，不过。。。。 吖柒：那还有什么好不过的，都已经这样了。 我：一直想找到一群有共同目标的人，不过太难了。 吖柒：随缘 我：随缘就不创业了 吖柒：你明白缘么？当你累的要趴下了有人伸手扶你一把，那就是缘，当你觉得不行了还能起死回生那就是缘，当同伴要离开去追求自己的想法那也是缘，如果有缘人与人总有交汇点，分开也是缘，就算用缘作为一个借口，如果能抚慰某些人又怎么能说那不是缘呢？ 我：太哲了。没听明白 - -！ 吖柒：就像你今天不开心，找个人聊天却偏偏找上了自己――能说我和你不是缘么？！ 我：说的太诡异了！！！ 吖柒：玩笑。 我：我不知道明天还有什么稀奇古怪的困难。不过我总会好起来的。我的自愈能力超强，胜过蚯蚓！ 吖柒：最好是那样。 。。。 吖柒：以后最好不要来找我了，我需要好好睡觉！ 我：有很多话我不知道和谁去吐啊！ 吖柒：zzZZ humen1 Tech","permalink":"http://www.humen1.com/2008/08/e5-86-99-e7-bb-99-e8-87-aa-e5-b7-b1-e7-9a-84-e8-af-9d-e4-b8-80.html","photos":[]},{"tags":[],"title":"IE & FF 通用规范表单提交JS","date":"2008/08/06","text":"document.forms[‘formName’].submit(); humen1 Tech","permalink":"http://www.humen1.com/2008/08/ie-ff-e9-80-9a-e7-94-a8-e8-a7-84-e8-8c-83-e8-a1-a8-e5-8d-95-e6-8f-90-e4-ba-a4js.html","photos":[]},{"tags":[],"title":"WinRAR 3.71 注册码 已经通过测试","date":"2008/07/19","text":"1、到官方下载WinRAR 3.71 http://www.rarlab.com/rar/wrar371sc.exe 。 2、将下列注册码复制到记事本中，另存为rarreg.key（或则rarreg.reg ）文件，然后将rarreg.key（或则rarreg.reg ）文件复制到WinRAR 安装目录（默认安装目录是C:\\Program Files\\WinRAR）即可。 RAR registration dataRoland Geister2 PC usage licenseUID=35d377df3f9109c0cf986412212250cf98ba909aa421df59c2d9bfc2c56fe441d634efdebdb34590837e4f735ccf2160ad3921ca0a4618e1028035530675182a9455738d54a57e0ab2d29c2cf0c09f37ac90929aab3444e12e34a236753ff101333ca3b035205e5fe287ab57600a54c3dee94d01de64c598977c4565bc9cfce96f7199d75c1fd8170352555cf8d930f52b4ccfcc9995943805965eeb92f6adb9fd9d032c1e77e51ffc60e6074fed6a1f6e6cc09f1a5773bbc9c878366f5a20ffcae94083722782 humen1 Tech","permalink":"http://www.humen1.com/2008/07/winrar-3-71-e6-b3-a8-e5-86-8c-e7-a0-81-e5-b7-b2-e7-bb-8f-e9-80-9a-e8-bf-87-e6-b5-8b-e8-af-95.html","photos":[]},{"tags":[],"title":"Apache22 链接数设定","date":"2008/07/17","text":"网上google了一下都是一篇老文说的是apache1.x和apache2.x的配置 从apache2.2开始，配置内容不仅仅存在于httpd.conf中了，httpd.conf中只存放了一些简单的支持和关联等配置。更多的设置放在了extra目录下的不同.conf文件中。 仅对最大连接数进行说明：MaxKeepAliveRequests语句被放置在了httpd-default.conf中MaxClients在httpd-mpm.conf中的三个模块beos,prefork,worker中分别进行设置我没有看到ServerLimit设置语句，于是在MaxClients之前手动加了进去。 apache2.2默认最大连接支持20000，如果要设置更大的连接，需要修改源代码并且重新进行编译。 humen1 Tech","permalink":"http://www.humen1.com/2008/07/apache22-e9-93-be-e6-8e-a5-e6-95-b0-e8-ae-be-e5-ae-9a.html","photos":[]},{"tags":[],"title":"给Php编译ming模块支持动态生成flash","date":"2008/07/11","text":"位置在 /usr/ports/graphics/ming make install就可以了，安装好重启apache 可以在phpinfo()中看到ming项 humen1 Tech","permalink":"http://www.humen1.com/2008/07/e7-bb-99php-e7-bc-96-e8-af-91ming-e6-a8-a1-e5-9d-97-e6-94-af-e6-8c-81-e5-8a-a8-e6-80-81-e7-94-9f-e6-88-90flash.html","photos":[]},{"tags":[],"title":"强行修改Mysql Root 密码","date":"2008/07/09","text":"如果mysql正在运行首先杀之： killall -TERM mysqld以安全模式启动mysql#/usr/local/bin/mysqld_safe –skip-grant-tables &amp;进入控制台#mysql use mysqlupdate user set password=password(“new_pass”) where user=”root”;flush privileges;重新杀 MySQL进程 ，用正常方法启动 MySQL humen1 Tech","permalink":"http://www.humen1.com/2008/07/e5-bc-ba-e8-a1-8c-e4-bf-ae-e6-94-b9mysql-root-e5-af-86-e7-a0-81.html","photos":[]},{"tags":[],"title":"Fms3虚拟服务器配置","date":"2008/06/28","text":"首先你需要用不同的域名指向fms服务器的ip（内部测试hosts：192.168.1.104 myhost.club-fish.com） 设定配置文件 默认安装下 /opt/adobe/fms/conf/目录下放着默认的控制器 _defaultRoot_ 我们就用这个默认控制器来配置虚拟主机 #cp ./_defaultVHost_ ./myhost现在我们已经把默认的虚拟主机目录copy为myhost#cd myhost 会看到两个xml配置文件Application.xml Vhost.xml 我们要修改的是 Vhost.xml 里的标签 myhost.club-fish.com 好了！虚拟服务器rtmp://myhost.club-fish.com/已经可以正常运行了。他将运行的应用实例位置和默认虚拟主机一致。如果想设定不同的应用程序那要修改Vhost.xml里的标签来制定服务器端脚本的路径 humen1 Tech","permalink":"http://www.humen1.com/2008/06/fms3-e8-99-9a-e6-8b-9f-e6-9c-8d-e5-8a-a1-e5-99-a8-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[],"title":"FMS3集群配置(默认安装)","date":"2008/06/26","text":"在两台机器上都按照fms3输入相同的序列号 边缘服务器 192.168.1.102源服务器 192.168.1.104 在源服务器的放上服务器脚本无需配置 边缘服务器配置：/opt/adobe/fms/conf/_defaultRoot_/_defaultVHost_/Vhost.xml 找到 标签改为 将local改为remote ok配置相当简单 呼叫的时候原本的urirtmp://192.168.1.104/ 改为 rtmp://192.168.1.102/?rtmp://192.168.1.104/【rtmp://边缘1?rtmp://边缘2?rtmp://边缘3?rtmp://边缘4?rtmp://源】 fms3的集群就部署好了 humen1 Tech","permalink":"http://www.humen1.com/2008/06/fms3-e9-9b-86-e7-be-a4-e9-85-8d-e7-bd-ae-e9-bb-98-e8-ae-a4-e5-ae-89-e8-a3-85.html","photos":[]},{"tags":[],"title":"Freebsd 显示和修改时间","date":"2008/06/24","text":"可以用date查看和修改本地时间 显示当前的时间：dateFri Oct 22 21:38:29 CST 2004 设置时间：date 0410222141时间格式为年、月、日、时、分，每个各占两个数字，其形式即为yymmddhhmm，大部分情况下是对时间进行小调整，可以略去前面的年月日部分，而仅使用四位数字表示时、分，形如hhmm 也可以通过Internet同步时间：ntpdate nist1.symmetricom.com 附:国际通用时间服务器地址列表：Name IP Address Locationtime-a.nist.gov 129.6.15.28 NIST, Gaithersburg, Marylandtime-b.nist.gov 129.6.15.29 NIST, Gaithersburg, Marylandtime-a.timefreq.bldrdoc.gov 132.163.4.101 NIST, Boulder, Coloradotime-b.timefreq.bldrdoc.gov 132.163.4.102 NIST, Boulder, Coloradotime-c.timefreq.bldrdoc.gov 132.163.4.103 NIST, Boulder, Coloradoutcnist.colorado.edu 128.138.140.44 University of Colorado, Bouldertime.nist.gov 192.43.244.18 NCAR, Boulder, Coloradotime-nw.nist.gov 131.107.1.10 Microsoft, Redmond, Washingtonnist1.symmetricom.com 69.25.96.13 Symmetricom, San Jose, Californianist1-dc.glassey.com 216.200.93.8 Abovenet, Virginianist1-ny.glassey.com 208.184.49.9 Abovenet, New York Citynist1-sj.glassey.com 207.126.98.204 Abovenet, San Jose, Californianist1.aol-ca.truetime.com 207.200.81.113 TrueTime, AOL facility, Sunnyvale, Californianist1.aol-va.truetime.com 64.236.96.53 TrueTime, AOL facility, Virginia humen1 Tech","permalink":"http://www.humen1.com/2008/06/freebsd-e6-98-be-e7-a4-ba-e5-92-8c-e4-bf-ae-e6-94-b9-e6-97-b6-e9-97-b4.html","photos":[]},{"tags":[],"title":"Freebsd 更改时区","date":"2008/06/24","text":"sysinstall-&gt; configure-&gt; timezone-&gt; no-&gt; 5.asia-&gt; china-&gt; 1.east China - Beijing, Guangdong, Shanghai, etc.-&gt; ok -&gt;exit- &gt; upgrade-&gt; yes-&gt; ok-&gt; exit-&gt; exit humen1 Tech","permalink":"http://www.humen1.com/2008/06/freebsd-e6-9b-b4-e6-94-b9-e6-97-b6-e5-8c-ba.html","photos":[]},{"tags":[],"title":"MySQL初学者注意事项","date":"2008/06/20","text":"1.如果客户端和服务器端的连接需要跨越并通过不可信任的网络，那么就需要使用SSH隧道来加密该连接的通信。 2.用set password语句来修改用户的密码，三个步骤，先”mysql -u root”登陆数据库系统，然后”mysql&gt; update mysql.user set password=password(‘newpwd’)”，最后执行”flush privileges”就可以了。 3.需要提防的攻击有，防偷听、篡改、回放、拒绝服务等，不涉及可用性和容错方面。对所有的连接、查询、其他操作使用基于ACL即访问控制列表的安全措施来完成。也有一些对SSL连接的支持。 4.除了root用户外的其他任何用户不允许访问mysql主数据库中的user表; 加密后存放在user表中的加密后的用户密码一旦泄露，其他人可以随意用该用户名/密码相应的数据库; 5.用grant和revoke语句来进行用户访问控制的工作; 6.不使用明文密码，而是使用md5()和sha1()等单向的哈系函数来设置密码; 7.不选用字典中的字来做密码; 8.采用防火墙来去掉50%的外部危险，让数据库系统躲在防火墙后面工作，或放置在DMZ区域中; 9.从因特网上用nmap来扫描3306端口，也可用telnet server_host 3306的方法测试，不能允许从非信任网络中访问数据库服务器的3306号TCP端口，因此需要在防火墙或路由器上做设定; 10.为了防止被恶意传入非法参数，例如where ID=234，别人却输入where ID=234 OR 1=1导致全部显示，所以在web的表单中使用’’或””来用字符串，在动态URL中加入”代表双引号、#代表井号、’代表单引号;传递未检查过的值给mysql数据库是非常危险的; 11.在传递数据给mysql时检查一下大小; 12.应用程序需要连接到数据库应该使用一般的用户帐号，只开放少数必要的权限给该用户; 13.在各编程接口(C C++ PHP Perl Java JDBC等)中使用特定’逃脱字符’函数; 14.学会使用tcpdump和strings工具来查看传输数据的安全性，例如tcpdump -l -i eth0 -w -src or dst port 3306 | strings。以普通用户来启动mysql数据库服务; 15.不使用到表的联结符号，选用的参数 –skip-symbolic-links; 16.确信在mysql目录中只有启动数据库服务的用户才可以对文件有读和写的权限; 17.不许将process或super权限付给非管理用户，该mysqladmin processlist可以列举出当前执行的查询文本;super权限可用于切断客户端连接、改变服务器运行参数状态、控制拷贝复制数据库的服务器; 18.file权限不付给管理员以外的用户，防止出现load data ‘/etc/passwd’到表中再用select 显示出来的问题; 19.如果不相信DNS服务公司的服务，可以在主机名称允许表中只设置IP数字地址; 20.使用max_user_connections变量来使mysqld服务进程，对一个指定帐户限定连接数; 21.grant语句也支持资源控制选项; 22.启动mysqld服务进程的安全选项开关，–local-infile=0或1 若是0则客户端程序就无法使用local load data了，赋权的一个例子grant insert(user) on mysql.user to ‘user_name’@’host_name’;若使用–skip-grant-tables系统将对任何用户的访问不做任何访问控制，但可以用mysqladmin flush-privileges或mysqladmin reload来开启访问控制;默认情况是show databases语句对所有用户开放，可以用–skip-show-databases来关闭掉。 23.碰到Error 1045(28000) Access Denied for user ‘root’@’localhost’ (Using password:NO)错误时，你需要重新设置密码，具体方法是：先用–skip-grant-tables参数启动mysqld，然后执行mysql -u root mysql,mysql&gt;update user set password=password(‘newpassword’) where user=’root’;mysql&gt;Flush privileges;，最后重新启动mysql就可以了。 humen1 Tech","permalink":"http://www.humen1.com/2008/06/mysql-e5-88-9d-e5-ad-a6-e8-80-85-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9.html","photos":[]},{"tags":[],"title":"SAS接口简介","date":"2008/06/19","text":"SAS(Serial Attached SCSI)即串行连接SCSI，是新一代的SCSI技术，和现在流行的Serial ATA(SATA)硬盘相同，都是采用串行技术以获得更高的传输速度，并通过缩短连结线改善内部空间等。SAS是并行SCSI接口之后开发出的全新接口。此接口的设计是为了改善存储系统的效能、可用性和扩充性，并且提供与SATA硬盘的兼容性。 SAS的接口技术可以向下兼容SATA。具体来说，二者的兼容性主要体现在物理层和协议层的兼容。在物理层，SAS接口和SATA接口完全兼容，SATA硬盘可以直接使用在SAS的环境中，从接口标准上而言，SATA是SAS的一个子标准，因此SAS控制器可以直接操控SATA硬盘，但是SAS却不能直接使用在SATA的环境中，因为SATA控制器并不能对SAS硬盘进行控制；在协议层，SAS由3种类型协议组成，根据连接的不同设备使用相应的协议进行数据传输。其中串行SCSI协议(SSP)用于传输SCSI命令；SCSI管理协议(SMP)用于对连接设备的维护和管理；SATA通道协议(STP)用于SAS和SATA之间数据的传输。因此在这3种协议的配合下，SAS可以和SATA以及部分SCSI设备无缝结合。 SAS系统的背板(Backplane)既可以连接具有双端口、高性能的SAS驱动器，也可以连接高容量、低成本的SATA驱动器。所以SAS驱动器和SATA驱动器可以同时存在于一个存储系统之中。但需要注意的是，SATA系统并不兼容SAS，所以SAS驱动器不能连接到SATA背板上。由于SAS系统的兼容性，使用户能够运用不同接口的硬盘来满足各类应用在容量上或效能上的需求，因此在扩充存储系统时拥有更多的弹性，让存储设备发挥最大的投资效益。 在系统中，每一个SAS端口可以最多可以连接16256个外部设备，并且SAS采取直接的点到点的串行传输方式，传输的速率高达3Gbps，估计以后会有6Gbps乃至12Gbps的高速接口出现。SAS的接口也做了较大的改进，它同时提供了3.5英寸和2.5英寸的接口，因此能够适合不同服务器环境的需求。SAS依靠SAS扩展器来连接更多的设备，目前的扩展器以12端口居多，不过根据板卡厂商产品研发计划显示，未来会有28、36端口的扩展器引入，来连接SAS设备、主机设备或者其他的SAS扩展器。 和传统并行SCSI接口比较起来，SAS不仅在接口速度上得到显著提升(现在主流Ultra 320 SCSI速度为320MB/sec，而SAS才刚起步速度就达到300MB/sec，未来会达到600MB/sec甚至更多)，而且由于采用了串行线缆，不仅可以实现更长的连接距离，还能够提高抗干扰能力，并且这种细细的线缆还可以显著改善机箱内部的散热情况。 SAS目前的不足主要有以下方面： 1)硬盘、控制芯片种类少：只有希捷、迈拓以及富士通等为数不多的硬盘厂商推出了SAS接口硬盘，品种太少，其他厂商的SAS硬盘多数处在产品内部测试阶段。此外周边的SAS控制器芯片或者一些SAS转接卡的种类更是不多，多数集中在LSI以及Adaptec公司手中。 2)硬盘价格太贵：比起同容量的Ultra 320 SCSI硬盘，SAS硬盘要贵了一倍还多。一直居高不下的价格直接影响了用户的采购数量和渠道的消化数量，而无法形成大批量生产的SAS 硬盘，其成本的压力又会反过来促使价格无法下降。如果用户想要做个简单的RAID级别，那么不仅需要购买多块SAS硬盘，还要购买昂贵的RAID卡，价格基本上和硬盘相当。 3)实际传输速度变化不大：SAS硬盘的接口速度并不代表数据传输速度，受到硬盘机械结构限制，现在SAS硬盘的机械结构和SCSI硬盘几乎一样。目前数据传输的瓶颈集中在由硬盘内部机械机构和硬盘存储技术、磁盘转速所决定的硬盘内部数据传输速度，也就是80MBsec左右，SAS硬盘的性能提升不明显。 4)用户追求成熟、稳定的产品：从现在已经推出的产品来看，SAS硬盘更多的被应用在高端4路服务器上，而4路以上服务器用户并非一味追求高速度的硬盘接口技术，最吸引他们的应该是成熟、稳定的硬件产品，虽然SAS接口服务器和SCSI接口产品在速度、稳定性上差不多，但目前的技术和产品都还不够成熟。 不过随着英特尔等主板芯片组制造商、希捷等硬盘制造商以及众多的服务器制造商的大力推动，SAS的相关产品技术会逐步成熟，价格也会逐步滑落，早晚都会成为服务器硬盘的主流接口。 humen1 Tech","permalink":"http://www.humen1.com/2008/06/sas-e6-8e-a5-e5-8f-a3-e7-ae-80-e4-bb-8b.html","photos":[]},{"tags":[],"title":"Open Flash Chart","date":"2008/06/11","text":"Open Flash Chart 是一个开源的Flash图表绘制工具，提供了各种程序接口，包括PHP、Ruby、Perl、Python、Java、。Net、AS、JS等等各种接口的数据生成，然后Flash展示的功能，是制作简单Flash &amp; PHP 图表的不错开源工具。官方网站：http://teethgrinder.co.uk/open-flash-chart/index.php下载网址：http://teethgrinder.co.uk/open-flash-chart/download.php humen1 Tech","permalink":"http://www.humen1.com/2008/06/open-flash-chart.html","photos":[]},{"tags":[],"title":"Swfobject+swffit实现flash嵌入网页自适应大小","date":"2008/06/04","text":"swfobject http://code.google.com/p/swfobject/swffit http://swffit.millermedeiros.com/comments.php 简介：swfobject 是一个轻量级的第三方flash网页嵌入js脚本，它吸引我的一些特性有，插入代码简洁，flash免激活，后台更新flash player 和版本侦测。 swffit 可以实现flash自适应大小 &nbsp;&nbsp;&nbsp;swfobject.embedSWF(&quot;example.swf&quot;, &quot;my_flash&quot;, &quot;550&quot;, &quot;400&quot;, &quot;8.0.0&quot;);&nbsp;&nbsp;&nbsp;swffit(&quot;my_flash&quot;,550,400);&nbsp;&nbsp; Loading… 注意了swffit（）还有2个隐藏参数swffit(“my_flash”,550,400,1000,800);第一个参数是填充flash的层id第二、三个参数是最小尺寸第四、五个参数是最大尺寸 humen1 Tech","permalink":"http://www.humen1.com/2008/06/swfobjectswffit-e5-ae-9e-e7-8e-b0flash-e5-b5-8c-e5-85-a5-e7-bd-91-e9-a1-b5-e8-87-aa-e9-80-82-e5-ba-94-e5-a4-a7-e5-b0-8f.html","photos":[]},{"tags":[],"title":"如何使用robots.txt ！！？？","date":"2008/05/22","text":"◆什么是robots.txt文件?robots.txt 文件对抓取网络的搜索引擎漫游器（称为漫游器）进行限制。这些漫游器是自动的，在它们访问网页前会查看是否存在限制其访问特定网页的 robots.txt 文件。如果你想保护网站上的某些内容不被搜索引擎收入的话，robots.txt 是一个简单有效的工具。这里简单介绍一下怎么使用它。 ◆如何放置 Robots.txt 文件robots.txt自身是一个文本文件。它必须位于域名的根目录中并 被命名为”robots.txt”。位于子目录中的 robots.txt 文件无效，因为漫游器只在域名的根目录中查找此文件。例如，http://www.example.com/robots.txt 是有效位置，http://www.example.com/mysite/robots.txt 则不是。 这里举一个robots.txt的例子: User-agent: * Disallow: /cgi-bin/ Disallow: /tmp/ Disallow: /~name/ ◆使用 robots.txt 文件拦截或删除整个网站要从搜索引擎中删除您的网站，并防止所有漫游器在以后抓取您的网站，请将以下 robots.txt 文件放入您服务器的根目录： User-agent: *Disallow: / 要只从 Google 中删除您的网站，并只是防止 Googlebot 将来抓取您的网站，请将以下 robots.txt 文件放入您服务器的根目录： User-agent: GooglebotDisallow: / 每个端口都应有自己的 robots.txt 文件。尤其是您通过 http 和 https 托管内容的时候，这些协议都需要有各自的 robots.txt 文件。例如，要让 Googlebot 只为所有的 http 网页而不为 https 网页编制索引，应使用下面的 robots.txt 文件。 对于 http 协议 (http://yourserver.com/robots.txt): User-agent: *Allow: / 对于 https 协议 (https://yourserver.com/robots.txt): User-agent: *Disallow: / ◆允许所有的漫游器访问您的网页User-agent: *Disallow: (另一种方法: 建立一个空的 “/robots.txt” 文件, 或者不使用robot.txt。) ◆使用 robots.txt 文件拦截或删除网页 您可以使用 robots.txt 文件来阻止 Googlebot 抓取您网站上的网页。 例如，如果您正在手动创建 robots.txt 文件以阻止 Googlebot 抓取某一特定目录下（例如，private）的所有网页，可使用以下 robots.txt 条目： User-agent: GooglebotDisallow: /private 要阻止 Googlebot 抓取特定文件类型（例如，.gif）的所有文件，可使用以下 robots.txt 条目： User-agent: GooglebotDisallow: /*.gif$ 要阻止 Googlebot 抓取所有包含 ? 的网址（具体地说，这种网址以您的域名开头，后接任意字符串，然后是问号，而后又是任意字符串），可使用以下条目： User-agent: GooglebotDisallow: /*? 尽管我们不抓取被 robots.txt 拦截的网页内容或为其编制索引，但如果我们在网络上的其他网页中发现这些内容，我们仍然会抓取其网址并编制索引。因此，网页网址及其他公开的信息，例如指 向该网站的链接中的定位文字，有可能会出现在 Google 搜索结果中。不过，您网页上的内容不会被抓取、编制索引和显示。 ◆robots.txt文件的格式User-agent: 该项的值用于描述搜索引擎robot的名字。在”robots.txt”文件中，如果有多条User-agent记录说明有多个robot会受到”robots.txt”的限制，对该文件来说，至少要有一条User-agent记录。如果该项的值设为，则对任何robot均有效，在”robots.txt”文件中，”User-agent:“这样的记录只能有一条。如果在”robots.txt”文件中，加入”User-agent:SomeBot”和若干Disallow、Allow行，那么名为”SomeBot”只受到”User-agent:SomeBot”后面的Disallow和Allow行的限制。Disallow: 该项的值用于描述不希望被访问的一组URL，这个值可以是一条完整的路径，也可以是路径的非空前缀，以Disallow项的值开头的URL不会被robot访问。例如”Disallow:/help”禁止robot访问/help.html、/helpabc.html、/help/index.html，而”Disallow:/help/“则允许robot访问/help.html、/helpabc.html，不能访问/help/index.html。”Disallow:”说明允许robot访问该网站的所有url，在”/robots.txt”文件中，至少要有一条Disallow记录。如果”/robots.txt”不存在或者为空文件，则对于所有的搜索引擎robot，该网站都是开放的。Allow: 该项的值用于描述希望被访问的一组URL，与Disallow项相似，这个值可以是一条完整的路径，也可以是路径的前缀，以Allow项的值开头的URL是允许robot访问的。例如”Allow:/hibaidu”允许robot访问/hibaidu.htm、/hibaiducom.html、/hibaidu/com.html。一个网站的所有URL默认是Allow的，所以Allow通常与Disallow搭配使用，实现允许访问一部分网页同时禁止访问其它所有URL的功能。需要特别注意的是Disallow与Allow行的顺序是有意义的，robot会根据第一个匹配成功的Allow或Disallow行确定是否访问某个URL。 使用”*”和”$”:baiduspider支持使用通配符”*”和”$”来模糊匹配url。 “$” 匹配行结束符。 “*” 匹配0或多个任意字符。 ◆后记1. Google爬虫名称 1） Googlebot：从Google的网站索引和新闻索引中抓取网页 2） Googlebot-Mobile针对Google的移动索引抓取网页 3） Googlebot-Image：针对Google的图片索引抓取网页 4） Mediapartners-Google：抓取网页确定 AdSense 的内容。只有在你的网站上展示 AdSense 广告的情况下，Google才会使用此漫游器来抓取您的网站。 5） Adsbot-Google：抓取网页来衡量 AdWords 目标网页的质量。只有在你使用 Google AdWords 为你的网站做广告的情况下，Google才会使用此漫游器。 2. 百度（Baidu）爬虫名称：Baiduspider 3. 雅虎（Yahoo）爬虫名称：Yahoo Slurp 4. 有道（Yodao）蜘蛛名称：YodaoBot 5. 搜狗（sogou）蜘蛛名称：sogou spider 6. MSN的蜘蛛名称：Msnbot humen1 Tech","permalink":"http://www.humen1.com/2008/05/e5-a6-82-e4-bd-95-e4-bd-bf-e7-94-a8robots-txt-ef-bc-81-ef-bc-81-ef-bc-9f-ef-bc-9f.html","photos":[]},{"tags":[],"title":"让网页灰白，悼念亡灵！","date":"2008/05/21","text":"在网页css 中+入滤镜 body{filter:Gray;} 或者 humen1 Tech","permalink":"http://www.humen1.com/2008/05/e8-ae-a9-e7-bd-91-e9-a1-b5-e7-81-b0-e7-99-bd-ef-bc-8c-e6-82-bc-e5-bf-b5-e4-ba-a1-e7-81-b5-ef-bc-81.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"16进制颜色代码对照表","date":"2008/05/08","text":"#FFFFFF #FFFFCC #FFFF99 #FFFF66 #FFFF33 #FFFF00 #FFCCFF #FFCCCC #FFCC99 #FFCC66 #FFCC33 #FFCC00 #FF99FF #FF99CC #FF9999 #FF9966 #FF9933 #FF9900 #FF66FF #FF66CC #FF6699 #FF6666 #FF6633 #FF6600 #FF33FF #FF33CC #FF3399 #FF3366 #FF3333 #FF3300 #FF00FF #FF00CC #FF0099 #FF0066 #FF0033 #FF0000 #66FFFF #66FFCC #66FF99 #66FF66 #66FF33 #66FF00 #66CCFF #66CCCC #66CC99 #66CC66 #66CC33 #66CC00 #6699FF #6699CC #669999 #669966 #669933 #669900 #6666FF #6666CC #666699 #666666 #666633 #666600 #6633FF #6633CC #663399 #663366 #663333 #663300 #6600FF #6600CC #660099 #660066 #660033 #660000 #CCFFFF #CCFFCC #CCFF99 #CCFF66 #CCFF33 #CCFF00 #CCCCFF #CCCCCC #CCCC99 #CCCC66 #CCCC33 #CCCC00 #CC99FF #CC99CC #CC9999 #CC9966 #CC9933 #CC9900 #CC66FF #CC66CC #CC6699 #CC6666 #CC6633 #CC6600 #CC33FF #CC33CC #CC3399 #CC3366 #CC3333 #CC3300 #CC00FF #CC00CC #CC0099 #CC0066 #CC0033 #CC0000 #33FFFF #33FFCC #33FF99 #33FF66 #33FF33 #33FF00 #33CCFF #33CCCC #33CC99 #33CC66 #33CC33 #33CC00 #3399FF #3399CC #339999 #339966 #339933 #339900 #3366FF #3366CC #336699 #336666 #336633 #336600 #3333FF #3333CC #333399 #333366 #333333 #333300 #3300FF #3300CC #330099 #330066 #330033 #330000 #99FFFF #99FFCC #99FF99 #99FF66 #99FF33 #99FF00 #99CCFF #99CCCC #99CC99 #99CC66 #99CC33 #99CC00 #9999FF #9999CC #999999 #999966 #999933 #999900 #9966FF #9966CC #996699 #996666 #996633 #996600 #9933FF #9933CC #993399 #993366 #993333 #993300 #9900FF #9900CC #990099 #990066 #990033 #990000 #00FFFF #00FFCC #00FF99 #00FF66 #00FF33 #00FF00 #00CCFF #00CCCC #00CC99 #00CC66 #00CC33 #00CC00 #0099FF #0099CC #009999 #009966 #009933 #009900 #0066FF #0066CC #006699 #006666 #006633 #006600 #0033FF #0033CC #003399 #003366 #003333 #003300 #0000FF #0000CC #000099 #000066 #000033 #000000 humen1 Tech","permalink":"http://www.humen1.com/2008/05/16-e8-bf-9b-e5-88-b6-e9-a2-9c-e8-89-b2-e4-bb-a3-e7-a0-81-e5-af-b9-e7-85-a7-e8-a1-a8.html","photos":[]},{"tags":[{"name":"flash","slug":"flash","permalink":"http://www.humen1.com/tags/flash/"}],"title":"7mini .1","date":"2008/05/08","text":"用as3写了一个播放器暂时就叫 7mini 版本是 .1 swfobject.flashvars = {}; swfobject.params = {}; swfobject.attributes = {}; swfobject.embedSWF(“/music/music01.swf”, “swf_div”, “256”, “128”, “9.0.0”,”${swf_path}expressInstall.swf”,swfobject.flashvars, swfobject.params, swfobject.attributes); Loading… humen1 Tech","permalink":"http://www.humen1.com/2008/05/7mini-1.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"ERROR 1418 (HY000) Log_bin_trust_function_creators 解决","date":"2008/05/06","text":"今天要写一个函数.但没有办法建提示错误如下:ERROR 1418 (HY000): This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable) 解决方式:(编缉my.cnf,添加如下)[mysqld]log_bin_trust_routine_creators = 1重启mysql就好了 humen1 Tech","permalink":"http://www.humen1.com/2008/05/error-1418-hy000-log-bin-trust-function-creators-e8-a7-a3-e5-86-b3.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"Freebsd下如何重启mysql.","date":"2008/05/06","text":"freebsd下如何重启mysql.(默认安装)/usr/local/etc/rc.d/mysql-server restart humen1 Tech","permalink":"http://www.humen1.com/2008/05/freebsd-e4-b8-8b-e5-a6-82-e4-bd-95-e9-87-8d-e5-90-afmysql.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"防止Ssh恶意攻击","date":"2008/05/05","text":"DenyHosts是Python语言写的一个程序，它会分析sshd的日志文件，当发现重复的攻击时就会记录IP到/etc/hosts.deny文件，从而达到自动屏IP的功能。 DenyHosts官方网站为：http://denyhosts.sourceforge.net 以下是安装记录（以CentOS 4.3, DenyHosts 2.5 为例） 安装 # cd /usr/local/src# wget http://mesh.dl.sourceforge.net/sourceforge/denyhosts/DenyHosts-2.5.tar.gz# tar -zxvf DenyHosts-2.5.tar.gz# cd DenyHosts-2.5# python setup.py install 默认是安装到/usr/share/denyhosts目录的。 配置 # cd /usr/share/denyhosts/# cp denyhosts.cfg-dist denyhosts.cfg# vi denyhosts.cfg 根据自己需要进行相应的配置(解释见下文件的配置文件) 设置启动脚本 # cp daemon-control-dist daemon-control# chown root daemon-control# chmod 700 daemon-control 完了之后执行daemon-contron start就可以了。 # ./daemon-control start 如果要使DenyHosts每次重起后自动启动还需做如下设置： # cd /etc/init.d# ln -s /usr/share/denyhosts/daemon-control denyhosts# chkconfig �add denyhosts# chkconfig �level 2345 denyhosts on 或者修改/etc/rc.local文件： # vi /etc/rc.local 加入下面这条命令 /usr/share/denyhosts/daemon-control start DenyHosts配置文件： vi /etc/denyhosts.cfgSECURE_LOG = /var/log/secure#ssh 日志文件，它是根据这个文件来判断的。HOSTS_DENY = /etc/hosts.deny#控制用户登陆的文件PURGE_DENY = 5m#过多久后清除已经禁止的BLOCK_SERVICE = sshd#禁止的服务名DENY_THRESHOLD_INVALID = 1#允许无效用户失败的次数DENY_THRESHOLD_VALID = 10#允许普通用户登陆失败的次数DENY_THRESHOLD_ROOT = 5#允许root登陆失败的次数HOSTNAME_LOOKUP=NO#是否做域名反解ADMIN_EMAIL = iakuf@163.com#管理员邮件地址,它会给管理员发邮件DAEMON_LOG = /var/log/denyhosts#自己的日志文件 然后就可以启动了： service denyhost start 可以看看/etc/hosts.deny内是否有禁止的ＩＰ，有的话说明已经成功了。 humen1 Tech","permalink":"http://www.humen1.com/2008/05/e9-98-b2-e6-ad-a2ssh-e6-81-b6-e6-84-8f-e6-94-bb-e5-87-bb.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"centOS 常用管理手札","date":"2008/05/05","text":"for centOS 一、用户环境#locale 显示系统语言环境 语言环境参数保存在/etc/sysconfig/i18n文件里 LANG最主要#locale �a 查看系统对语言的支持情况#LANG=zh_CN.GB2312 使系统支持以中文形式显示 #chkconfig kudzu –list 检查某个服务状态(包括各个级别0~6的状态)#less /etc/sysconfig/hwconf 硬件信息 二、系统管理常用命令 useradd redhat passwd redhat su � exit df �h 分区情况 du �sh /* 统计文件或目录使用空间的大小 fdisk �l /dev/sda netconfig 配置网络参数 ifconfig 显示网络配置信息 service network restart route �n 查看路由信息（默认路由） ping �b 192.168.0.255 扫描整个网段（检查活动主机） ifconfig eth0 10.0.0.254 netmask 255.255.255.0 修改IP地址 ifconfig eth0显示指定网卡参数 修改IP信息后会删除默认路由，需手工添加 route add default gw 192.168.0.1 ifconfig route 修改过的参数不会保存，重启后会消失 要用service network restart命令把参数保存到文件ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0 可以vi直接修改该文件，然后service network restart 重新启用网络服务 redhat-config-network-tui是redhat独有的配置工具，当用这个命令配置网络参数后，会写入到/etc/sysconfig/networking/profiles/目录里，并且比network-scripts/ifcfg-eth0优先，所以用过这个工具配置就不要再使用netconfig，或者先将profiles目录清空 三、文件系统维护 ext2/ext3通过数据块储存文件 格式化文件系统： mkfs.ext3 �b 4096 �i 8192 �m 5 /dev/sdb4 -b 数据块大小 -i inode节点表示的字节数（或数据块大小） -m 5 为管理员保留的磁盘管理空间5% ls �lh /mnt/u du �sh /mnt/u df �lh #tune2fs �l /dev/sdb1 打印文件系统属性 #df tune2fs 调整ext2/ext3文件系统特性的工具 -l 查看文件系统信息 -m 保留块百分比 -c 设置强制自检的挂载次数 -i 设置强制自检的间隔时间 -j ext2转成ext3 tune2fs �c -1 /dev/sdb1 不管挂载多小次都不自检 tune2fs �c -1 �i 0 /dev/sdb1 让分区永远不自检 #mkfs.ext2 /dev/sdb4 格式化成ext2 #tune2fs �j /dev/sdb4 转换为ext3 #df �T 查看分区信息 判断间ext2还是ext3: tune2fs �l /dev/sdb1 | grep features 看Filesystem features： has_journal 是否有has_journal，有则是ext3文件系统 grep �i “name” 不区分大小写 df �T 分区类型 fsck 检查文件系统数据完整性的工具 用法一、fsck �t ext2 /dev/sdb1 二、fsck.ext3 /dev/sdb1 #more /etc/fstab 如发现挂载选项有1或2，那么应该进行自检了 #fsck.ext3 �y /dev/sdb1 自动修复错误 四、管理磁盘文件系统 mount 设备名 挂载点mount /dev/fd0 /mnt/floppy光驱（IDE） /dev/cdrom (/dev/hdx)光驱（SCSI）/dev/scdN (N=0,1…)硬盘（IDE） /dev/hdX (X=a,b,c…)硬盘（SCSI）/dev/sdX (X=a,b,c…)U盘 /dev/sdX (X=a,b,c…) 弹出光盘#eject收回#eject �t因为USB设备内置USB-SCSI转换接口，所以被认为是SCSI硬盘#mkdir /mnt/u#mount /dev/sda1 /mnt/u默认内核已支持SCSI和USB接口#modprobe usb-storage 检查usb-storage模块是否已加载，否则无法自动识别USB设备 #mount �t vfat /dev/hda2 /mnt/c#mount �t ntfs /dev/hda3 /mnt/d 需重新编译内核才能支持NTFS#mount �t iso9660 /dev/cdrom /mnt/cdrom#mount �t vfat �o iocharset=gb2312 /dev/sdb1 /mnt/u常用字符编码有gb2312和utf8#mount /dev/sdb2 /mmt/d �o iocharset=utf8,ro,uid=redhat,umask=0077 Linux下使用U盘#ls /dev 确认设备已识别#mount -o iocharset=gb2312 /dev/sda1more后ctrl+F向下翻页（或空格）ctrl+b（上滚）ls -a 显示隐藏文件（以.开头的文件）文件权限rws s表示执行这个程序的使用者，临时拥有和所有者一样的权力身份来执行该程序cp -r 源 目的 -r参数表示连子目录一起拷贝rm -i 确认删除 -r 删除子目录 -f 强制删除du 磁盘或目 录使用了多少空间df 磁盘或目录剩余可用空间cat &gt;file1 等价你输入文字，输完后ctrl+C或ctrl+D结束 符号表示在文件尾附加，&gt;符号表示创建新文件less 可上下滚动文件内容which 在$PATH设置的目录查找文件 五、使用磁盘配额 默认系统内核已支持quota mount �o usrquota,grpquota /dev/sdb1 /mnt/d1 或 mount �o remount,usrquota,grpquota / 也可以修改 /etc/fstab文件来启用每个文件系统的配额 —- 添加选项usrquota,grpquota 例： 将LABEL=/home /home ext3 defaults 1 2改为LABEL=/home /home ext3 defaults，usrquota 1 2 #init 1 （进入单用户环境） #quotacheck �cvuga 或 quotacheck �cvag /dev/sdb1 （a代表all)(g代表用户组） #quotaon �a 激活 #edquota �u redhat 进VI编缉用户配额 编缉用户可用的字节数，软性的，硬性的，文件数，软件性的，硬性的 quota �u redhat 查看用户磁盘配额 edquota �t 配置过期时间 edquota命令能为一系列用户设置同一配额。假设已为用户ez设立了配额，以下命令将为随后的用户（即mj、jm和tp）复制完全相同的配额限制： $ sudo /usr/sbin/edquota -up ez mj jm tp quotaoff /mnt/sdb1 关闭磁盘配额 quotaon /mnt/sdb1 开启 repquota命令按用户（-u）或组（-g）报告配额使用情况。用repquota -a命令可以得到所有文件系统的报告。 如果想检查单个用户（-u）或组（-g），可以使用quota命令。单个用户可以用此命令检查他们自己的配额使用情况。 关于putty 0.58的简单设置 修改语言环境 LANG=zh_CN.utf8 修改传输数据的字符集translationàUTF8 修改外观appearance字体font为新宋体 ls �ld 显示文件属主，详细信息 六、Raid 安全的动态磁盘策略linux内核可以模拟RAID控制器，用来管理硬盘，但只支持级别0,1,4,5RAID0 又称striping把连续的数据访问分散到多个磁盘上来提高存储性能，速度最快，但最危险。RAID1 又称Mirror或Mirroring最大限度的保证用户数据的可用性和可修复性，用户数据100%自动复制到另外一个硬盘上，速度稍慢，因为要同时写多个硬盘。RAID5 最少需三个硬盘不对存储的数据时行备份，而把数据和对应的奇偶校验信息分别存储在不同的磁盘上，当一个磁盘数据发生损坏后，利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。RAID0+1 也称RAID10结合RAID0和RAID1的优点，很多公司在应用 Linux中的软件RAID1.默认内核已支持软件RAID控制器2.需安装raidtools工具来创建管理RAID设备，raidtools包含有RAID创建管理工具和默认的示范性配置文件，安装完后编辑/etc/raidtab这配置文件，它可以从raidtools中的示范配置文件里（在/usr/share/doc/raid-~/目录下）复制。最后用以下命令创建RAID设备： #mkraid /dev/md0#mkraid -f /dev/md0#mkraid -R /dev/md0 后两个命令是强制创建，覆盖以前建的超级块。 但Fedora Core5不使用这个，而用mdadm工具。3.软件RAID设备文件名：/dev/mdN (N=0,1,2…)4.软件RAID设备可以当分区看待，需格式化后挂载#mkfs.ext3 /dev/md1#mount /dev/md1 /opt5.停止RAID设备#umount /opt#raidstop /dev/md0 要永久删除RAID设备，还需删除raidtab文件，否则重启后RAID仍起作用。6.显示RAID设备信息#lsraid -A -a /dev/md17.RAID1故障模拟 假设sdb1与sdc1两个磁盘做RAID1，sdb1磁盘坏了，加入新一块磁盘sdd1。#raidsetfaulty /dev/md1 /dev/sdb1#raidhotadd /dev/md1 /dev/sdd1#more /proc/mdstat 查看磁盘修复过程#raidhotremove /dev/sdb1 最后还要修改raidtab文件。 使用mdadm来创建和管理RAIDRAID0 添加硬盘 RAID设备的成员是硬盘分区，需先对硬盘分区，分区不能在同一物理硬盘上 #fdisk /dev/sdb n创建主分区，t分区类型fd，w写保存 #fdisk /dev/sdc #mdadm �Cv /dev/md0 �l0 �n2 /dev/sdb1 /dev/sdc1 -C,–create 创建一个新的阵列 -v,verbose 显示细节 /dev/md0 阵列设备的名称 -l,–level= 阵列级别，如0,1,4,5,6 -n,–raid-devices= 阵列活动数目 /dev/sd[bc]1 阵列包含的设备列表 #more /proc/mdstat 查看阵列状态 #mkfs.ext3 /dev/md0 创建文件系统 #mount /dev/md0 /mnt/raid 让系统自动挂载，修改/etc/fstab,添加 /dev/md0 /mnt/raid ext3 defaults 0 0 RAID5 故障模拟 前面已创建了一个RAID5设备md0 #mdadm �Cv /dev/md0 �l5 �n3 �x1 �c128 /dev/sd[b,c,d,e]1 1.将/dev/sdb1标记为已损坏的设备 #mdadm /dev/md0 �f /dev/sdb1 &amp;n bsp; 这时阵列开始重构和恢复数据 2.移除损坏的设备 #mdadm /dev/md0 �r /dev/sdb1 3.将新设备添加到阵列 注意，一：对硬盘正确分区，二：添加设备名要与被移除的一致，如sdb1 #mdadm /dev/md0 �a /dev/sdb1 生成配置文件/etc/mdadm.conf格式如下：DEVICE /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde1 ARRAY /dev/md10 level=raid10 num-devices=4 UUID=12334343dkfj 其中UUID信息通过#mdadm �D /dev/md10得到#mdadm �Ds 扫描该文件信息 常用阵列维护命令1.启用阵列 #mdadm �As /dev/md0 -A 启用已存在的阵列 -s 以/etc/mdadm.conf为依据 没有创建mdadm.conf文件，则采用如下方法启用 #mdadm �A /dev/md0 /dev/sd[bc]12.停止阵列 #mdadm �S /dev/md03.显示阵列详细信息 #mdadm �D /dev/md0 humen1 Tech","permalink":"http://www.humen1.com/2008/05/centos-e5-b8-b8-e7-94-a8-e7-ae-a1-e7-90-86-e6-89-8b-e6-9c-ad.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"正则匹配Email - 不全面[Php]","date":"2008/04/18","text":"匹配 数字or字母 @ 数字or字母 . 数字or字母 if(preg_match(“/^\\w{1,32}@\\w{1,16}.\\w{1,3}(.\\w{1,3})?$/“, $string)) { return true;} else { return false;}?&gt; humen1 Tech","permalink":"http://www.humen1.com/2008/04/e6-ad-a3-e5-88-99-e5-8c-b9-e9-85-8demail-e4-b8-8d-e5-85-a8-e9-9d-a2php.html","photos":[]},{"tags":[],"title":"Zend Studio 6 for Eclipse 自带插件 phpDocumentor 生成文档 编码问题","date":"2008/04/12","text":"用了大概2个月的Zend for eclipse其中一个插件功能我很喜欢，就是phpDocumentor 了，自动生成代码文档但是其中还是有个小问题的，默认的生成编码是iso-8859-1。但是我是用utf-8来编写代码的，而且注释用了中文。直接打开生成后的文档就会出现乱码[这个时候放在apache里用网站方式浏览倒不会出现乱码了，因为编码以apache指定的优先]。于是我决定应该解决这个小问题。 开始第一步查出什么地方指定了编码我用emedit在文件中查找，发现了原来编码的指定是做在模板里的而不是想我想的放在某个配置文件里。模板路径见下，我的zend按在D:\\D:\\Program Files\\Zend\\Zend Studio for Eclipse - 6.0.0\\plugins\\com.zend.php.phpdocumentor_6.0.0.v20080107\\Resources\\phpdocumentor\\phpDocumentor\\Converters\\HTML我只用html，在上一层目录里还有 chm、xml、pdf等 这个目录里还分frames和smarty这两类生成的时候我都要用所以替换编码就在这个目录进行 用emedit 在文件中替换 功能将iso-8859-1替换成 utf-8就好了 然后再生成下，发现可以直接打开而不乱码了。 humen1 Tech","permalink":"http://www.humen1.com/2008/04/zend-studio-6-for-eclipse-e8-87-aa-e5-b8-a6-e6-8f-92-e4-bb-b6-phpdocumentor-e7-94-9f-e6-88-90-e6-96-87-e6-a1-a3-e7-bc-96-e7-a0-81-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[],"title":"Apache 只允许某个Ip访问某个目录","date":"2008/04/08","text":"在 之间+上 Order allow,deny Allow from [220.234.206.194](http://220.234.206.194) Allow from [127.0.0.1](http://127.0.0.1) /dir 就是你要禁止其他主机访问的目录Order allow,deny 启用 allow和deny指令allow xxx 允许xxx通过其他屏蔽deny xxx 屏蔽xxx其他通过 我要的效果是只有我的本机ip能访问此目录所以我+上了我的ip220.234.206.194保险起见吧本机的ip127.0.0.1也+上不然cgi程序跑起来可能有问题。 humen1 Tech","permalink":"http://www.humen1.com/2008/04/apache-e5-8f-aa-e5-85-81-e8-ae-b8-e6-9f-90-e4-b8-aaip-e8-ae-bf-e9-97-ae-e6-9f-90-e4-b8-aa-e7-9b-ae-e5-bd-95.html","photos":[]},{"tags":[{"name":"game","slug":"game","permalink":"http://www.humen1.com/tags/game/"}],"title":"《暗黑之门：伦敦》单机正式版BT下载地址","date":"2008/04/07","text":"种子下载地址 http://www.hellgate.com.cn/hellgatelondon.torrent 注册码：75GU-Y6UV-7YSM-EHRF-0DZV-LAN0 下载完成后吧分割的压缩包解压成镜像文件，用附带的虚拟光驱程序加载镜像文件，运行完全安装，再用下载的免CD补丁覆盖游戏下的文件就可以运行了。此资源来自网络，建议广大爱好者支持正版，耐心等待第九城市引进《暗黑之门：伦敦》。 humen1 Tech","permalink":"http://www.humen1.com/2008/04/e3-80-8a-e6-9a-97-e9-bb-91-e4-b9-8b-e9-97-a8-ef-bc-9a-e4-bc-a6-e6-95-a6-e3-80-8b-e5-8d-95-e6-9c-ba-e6-ad-a3-e5-bc-8f-e7-89-88bt-e4-b8-8b-e8-bd-bd-e5-9c-b0-e5-9d-80.html","photos":[]},{"tags":[{"name":"game","slug":"game","permalink":"http://www.humen1.com/tags/game/"}],"title":"使命召唤4 安装Cdkey序列号","date":"2008/04/07","text":"DL2J-8PY4-4Q22-GE48-88D2 humen1 Tech","permalink":"http://www.humen1.com/2008/04/e4-bd-bf-e5-91-bd-e5-8f-ac-e5-94-a44-e5-ae-89-e8-a3-85cdkey-e5-ba-8f-e5-88-97-e5-8f-b7.html","photos":[]},{"tags":[],"title":"Meta标签详解[html]","date":"2008/04/07","text":"引言 您的个人网站即使做得再精彩，在”浩瀚如海”的网络空间中，也如一叶扁舟不易为人发现，如何推广个人网站，人们首先想到的方法无外乎以下几种： ● 在搜索引擎中登录自己的个人网站 ● 在知名网站加入你个人网站的链接 ● 在论坛中发帖子宣传你的个人网站 很多人却忽视了HTML标签META的强大功效，一个好的META标签设计可以大大提高你的个人网站被搜索到的可能性，有兴趣吗，谁我来重新认识一下META标签吧！ META标签是HTML语言HEAD区的一个辅助性标签，它位于HTML文档头部的标记和 标题 &lt;&lt;标记之间，它提供用户不可见的信息。meta标签通常用来为搜索引擎robots定义页面主题，或者是定义用户浏览器上的cookie；它可以用于鉴别作者，设定页面格式，标注内容提要和关键字；还可以设置页面使其可以根据你定义的时间间隔刷新自己，以及设置RASC内容等级，等等。 详细介绍 下面介绍一些有关 标记的例子及解释。 META标签分两大部分：HTTP标题信息（HTTP-EQUIV）和页面描述信息（NAME）。 ★HTTP-EQUIV HTTP-EQUIV类似于HTTP的头部协议，它回应给浏览器一些有用的信息，以帮助正确和精确地显示网页内容。常用的HTTP-EQUIV类型有： 1、Content-Type和Content-Language （显示字符集的设定） 说明：设定页面使用的字符集，用以说明主页制作所使用的文字已经语言，浏览器会根据此来调用相应的字符集显示page内容。 用法： 注意： 该META标签定义了HTML页面所使用的字符集为GB2132，就是国标汉字码。如果将其中的”charset=GB2312”替换成”BIG5”，则该页面所用的字符集就是繁体中文Big5码。当你浏览一些国外的站点时，IE浏览器会提示你要正确显示该页面需要下载xx语支持。这个功能就是通过读取HTML页面META标签的Content-Type属性而得知需要使用哪种字符集显示该页面的。如果系统里没有装相应的字符集，则IE就提示下载。其他的语言也对应不同的charset，比如日文的字符集是”iso-2022-jp “，韩文的是”ks_c_5601”。 Content-Type的Content还可以是：text/xml等文档类型； Charset选项：ISO-8859-1（英文）、BIG5、UTF-8、SHIFT-Jis、Euc、Koi8-2、us-ascii， x-mac-roman， iso-8859-2， x-mac-ce， iso-2022-jp， x-sjis， x-euc-jp，euc-kr， iso-2022-kr， gb2312， gb_2312-80， x-euc-tw， x-cns11643-1，x-cns11643-2等字符集；Content-Language的Content还可以是：EN、FR等语言代码。 2、Refresh （刷新） 说明：让网页多长时间（秒）刷新自己，或在多长时间后让网页自动链接到其它网页。 用法： http://www.humen1.net“&gt; 注意：其中的5是指停留5秒钟后自动刷新到URL网址。 3、Expires （期限） 说明：指定网页在缓存中的过期时间，一旦网页过期，必须到服务器上重新调阅。 用法： 注意：必须使用GMT的时间格式，或直接设为0（数字表示多少时间后过期）。 4、Pragma （cach模式） 说明：禁止浏览器从本地机的缓存中调阅页面内容。 用法： 注意：网页不保存在缓存中，每次访问都刷新页面。这样设定，访问者将无法脱机浏览。 5、Set-Cookie （cookie设定） 说明：浏览器访问某个页面时会将它存在缓存中，下次再次访问时就可从缓存中读取，以提高速度。当你希望访问者每次都刷新你广告的图标，或每次都刷新你的计数器，就要禁用缓存了。通常HTML文件没有必要禁用缓存，对于ASP等页面，就可以使用禁用缓存，因为每次看到的页面都是在服务器动态生成的，缓存就失去意义。如果网页过期，那么存盘的cookie将被删除。 用法： 21-Oct-98 16:14:21 GMT; path=/“&gt; 注意：必须使用GMT的时间格式。 6、Window-target （显示窗口的设定） 说明：强制页面在当前窗口以独立页面显示。 用法： 注意：这个属性是用来防止别人在框架里调用你的页面。Content选项：_blank、_top、_self、_parent. 7、Pics-label （网页RSAC等级评定） 说明：在IE的Internet选项中有一项内容设置，可以防止浏览一些受限制的网站，而网站的限制级别就是通过该参数来设置的。 用法：：http://www.rsac.org/ratingsv01.html’I gen comment ‘RSACi North America Sever’ by ‘inet@microsoft.com’for ‘http://www.microsoft.com‘ on ‘1997.06.30T14:21－0500’ r(n0 s0 v0 l0))”&gt; 注意：不要将级别设置的太高。RSAC的评估系统提供了一种用来评价Web站点内容的标准。用户可以设置Microsoft Internet Explorer（IE3.0以上）来排除包含有色情和暴力内容的站点。上面这个例子中的HTML取自Microsoft的主页。代码中的（n 0 s 0 v 0 l 0）表示该站点不包含不健康内容。级别的评定是由RSAC，即美国娱乐委员会的评级机构评定的，如果你想进一步了解RSAC评估系统的等级内容，或者你需要评价自己的网站，可以访问RSAC的站点：http://www.rsac.org/. 8、Page-Enter、Page-Exit （进入与退出） 说明：这个是页面被载入和调出时的一些特效。 用法： 注意：blendTrans是动态滤镜的一种，产生渐隐效果。另一种动态滤镜RevealTrans也可以用于页面进入与退出效果: &lt; /div&gt; Duration表示滤镜特效的持续时间（单位：秒） Transition 滤镜类型。表示使用哪种特效，取值为0-23. 0 矩形缩小 1 矩形扩大 2 圆形缩小 3 圆形扩大 4 下到上刷新 5 上到下刷新 6 左到右刷新 7 右到左刷新 8 竖百叶窗 9 横百叶窗 10 错位横百叶窗 11 错位竖百叶窗 12 点扩散 13 左右到中间刷新 14 中间到左右刷新 15 中间到上下 16 上下到中间 17 右下到左上 18 右上到左下 19 左上到右下 20 左下到右上 21 横条 22 竖条 23 以上22种随机选择一种 9、MSThemeCompatible （XP主题） 说明：是否在IE中关闭 xp 的主题 用法： 注意：关闭 xp 的蓝色立体按钮系统显示样式，从而和win2k 很象。 10、IE6 (页面生成器) 说明：页面生成器generator，是ie6 用法： 注意：用什么东西做的，类似商品出厂厂商。 11、Content-Script-Type (脚本相关) 说明：这是近来W3C的规范，指明页面中脚本的类型。 用法： 注意： ★NAME变量 name是描述网页的，对应于Content（网页内容），以便于搜索引擎机器人查找、分类（目前几乎所有的搜索引擎都使用网上机器人自动查找meta值来给网页分类）。 name的value值（name=””）指定所提供信息的类型。有些值是已经定义好的。例如description(说明)、keyword(关键字)、refresh(刷新)等。还可以指定其他任意值，如：creationdate(创建日期) 、 document ID(文档编号)和level(等级)等。 name的content指定实际内容。如：如果指定level(等级)为value(值)，则Content可能是beginner(初级)、intermediate(中级)、advanced(高级)。 1、Keywords (关键字) 说明：为搜索引擎提供的关键字列表 用法： 注意：各关键词间用英文逗号”,”隔开。META的通常用处是指定搜索引擎用来提高搜索质量的关键词。当数个META元素提供文档语言从属信息时，搜索引擎会使用lang特性来过滤并通过用户的语言优先参照来显示搜索结果。例如： 2、Description (简介) 说明：Description用来告诉搜索引擎你的网站主要内容。 用法： 注意： 3、Robots (机器人向导) 说明：Robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。Content的参数有all、none、index、noindex、follow、nofollow。默认是all。 用法： 注意：许多搜索引擎都通过放出robot/spider搜索来登录网站，这些robot/spider就要用到meta元素的一些特性来决定怎样登录。 all：文件将被检索，且页面上的链接可以被查询； none：文件将不被检索，且页面上的链接不可以被查询；(和 “noindex, no follow” 起相同作用) index：文件将被检索；（让robot/spider登录） follow：页面上的链接可以被查询； noindex：文件将不被检索，但页面上的链接可以被查询；(不让robot/spider登录) nofollow：文件将不被检索，页面上的链接可以被查询。(不让robot/spider顺着此页的连接往下探找) 4、Author (作者) 说明：标注网页的作者或制作组 用法：abc@sina.com“&gt; 注意：Content可以是：你或你的制作组的名字,或Email 5、Copyright (版权) 说明：标注版权 用法： 注意： 6、Generator (编辑器) 说明：编辑器的说明 用法： 注意：Content=”你所用编辑器” 7、revisit-after (重访) 说明： 用法： 注意： ★Head中的其它一些用法 1、scheme (方案) 说明：scheme can be used when name is used to specify how the value of content shouldbe interpreted. 用法： 注意： 2、Link (链接) 说明：链接到文件 用法： 注意：很多网站如果你把她保存在收件夹中后，会发现它连带着一个小图标，如果再次点击进入之后还会发现地址栏中也有个小图标。现在只要在你的页头加上这段话，就能轻松实现这一功能。 用来将目前文件与其它 URL 作连结，但不会有连结按钮，用於 标记间， 格式如下： 3、Base (基链接) 说明：插入网页基链接属性 用法：http://www.humen1.net/“ target=”_blank”&gt; 注意：你网页上的所有相对路径在链接时都将在前面加上”http://www.cn8cn.com/“。其中target=”_blank”是链接文件在新的窗口中打开，你可以做其他设置。将”_blank”改为”_parent”是链接文件将在当前窗口的父级窗口中打开；改为”_self”链接文件在当前窗口（帧）中打开；改为”_top”链接文件全屏显示。 以上是META标签的一些基本用法，其中最重要的就是：Keywords和Description的设定。为什么呢？道理很简单，这两个语句可以让搜索引擎能准确的发现你，吸引更多的人访问你的站点!根据现在流行搜索引擎(Google，Lycos，AltaVista等)的工作原理，搜索引擎先派机器人自动在WWW上搜索，当发现新的网站时，便于检索页面中的Keywords和Description，并将其加入到自己的数据库，然后再根据关键词的密度将网站排序。 由此看来，我们必须记住添加Keywords和Description的META标签，并尽可能写好关键字和简介。否则，后果就会是： ● 如果你的页面中根本没有Keywords和Description的META标签，那么机器人是无法将你的站点加入数据库，网友也就不可能搜索到你的站点。 ● 如果你的关键字选的不好，关键字的密度不高，被排列在几十甚至几百万个站点的后面被点击的可能性也是非常小的。 写好Keywords(关键字)要注意以下几点： ● 不要用常见词汇。例如www、homepage、net、web等。 ● 不要用形容词，副词。例如最好的，最大的等。 ● 不要用笼统的词汇，要尽量精确。例如”爱立信手机”，改用”T28SC”会更好。 “三人之行，必有我师”，寻找合适关键词的技巧是：到Google、Lycos、Alta等著名搜索引擎，搜索与你的网站内容相仿的网站，查看排名前十位的网站的META关键字，将它们用在你的网站上，效果可想而知了。 ★小窍门 为了提高搜索点击率，这里还有一些”捷径”可以帮得到你： ● 为了增加关键词的密度，将关键字隐藏在页面里(将文字颜色定义成与背景颜色一样)。 ● 在图像的ALT注释语句中加入关键字。如： ● 利用HTML的注释语句，在页面代码里加入大量关键字。用法： 文件头，显示在浏览器标题区 humen1 Tech","permalink":"http://www.humen1.com/2008/04/meta-e6-a0-87-e7-ad-be-e8-af-a6-e8-a7-a3html.html","photos":[]},{"tags":[],"title":"Freebsd不重启更新网络配置","date":"2008/04/07","text":"freebsd不重启更新rc.conf配置文件两种方法第一种# cd /etc# sh rc第二种# /etc/netstart 推荐第二种 humen1 Tech","permalink":"http://www.humen1.com/2008/04/freebsd-e4-b8-8d-e9-87-8d-e5-90-af-e6-9b-b4-e6-96-b0-e7-bd-91-e7-bb-9c-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[],"title":"Winxp下修改一些默认文件夹的路径","date":"2008/04/03","text":"首先要在”开始”――”运行”内输入”regedit”打开注册表编辑器，然后要在”文件”下拉菜单中的”导出”功能备份好注册表，以防万一，接着在左侧窗口依次打开：HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders在右侧窗口里，你看到的”名称”就代表那些特殊的文件夹，”数据”就是它们所对应的默认存储路径。 下面介绍一下各个”名称”所代表的文件夹名称 含义 默认路径AppData 应用程序数据目录 C:\\Documents and Settings\\User name\\Application DataCookies Cookies路径 C:\\Documents and Settings\\User name\\CookiesDesktop 桌面路径 C:\\Documents and Settings\\User name\\桌面Favorites 收藏夹 C:\\Documents and Settings\\User name\\FavoritesNetHood NetHood路径 C:\\Documents and Settings\\User name\\NetHoodPersonal 我的文档 C:\\Documents and Settings\\User name\\My DocumentsPrintHood 打印 C:\\Documents and Settings\\User name\\PrintHoodRecent 文档项路径 C:\\Documents and Settings\\User name\\RecentSendTo SendTo路径 C:\\Documents and Settings\\User name\\SendToStart Menu 开始菜单路径 C:\\Documents and Settings\\User name\\「开始」菜单Templates 新建文件目录 C:\\Documents and Settings\\User name\\TemplatesPrograms 程序菜单路径 C:\\Documents and Settings\\User name\\「开始」菜单\\程序Startup 启动路径 C:\\Documents and Settings\\User name\\「开始」菜单\\程序\\启动History 网页历史记录 C:\\Documents and Settings\\ User name \\Local Settings\\HistoryMy Pictures 图片收藏 C:\\Documents and Settings\\User name\\My Documents\\My PicturesMy Music 我的音乐 C:\\Documents and Settings\\User name\\My Documents\\My MusicMy Video 我的视频 C:\\Documents and Settings\\User name\\My Documents\\My VideosCache Internet临时文件夹 C:\\ Documents and Settings\\User name \\Temporary Internet Files这些文件夹称为Shell文件夹其中”User name”为当前用户的名称了解了对应的文件夹，就可以根据自己的需要去更改对应的路径了。（千万不要在这儿改啊，那样可就瞎忙乎了，系统重起后它会恢复成原来的路径）在同一层中你可以看到一个”User Shell Folders”的子键，即在HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ User Shell Folders这里包括了用户定制的所有Shell文件夹的值项。只要通过修改”数据”，就可以改变它们的存储路径。双击需要修改的名称，在弹出的”编辑字符串”的”数值数据”里填上你要更改的完整路径，按下”确定”就完成了。如果没有你需要的，可以在右边窗口单击鼠标右键，选择”新建”菜单中的”字符串值”命令，对应上表，添加一个用于Shell文件夹的字符串值。在上面的文件夹中，并没有outlook的通讯簿和邮件存放路径，它们分别在通讯簿路径：HKEY_CURRENT_USER\\Software\\Microsoft\\WAB\\WAB4\\Wab File Name主键下，将”默认”键值改为你需要的路径。邮件存放路径：HKEY_CURRENT_USER\\Identities\\{8150FA22-A51C-4993-8A96-DC4B9A6B4C55}\\Software\\Microsoft\\Outlook Express\\5.0下，将 “Store Root”键值改为你需要的路径。最后别忘了将修改好的这部分注册表导出保存，以便重装系统后可以直接导入而无须再次修改。注意：修改了文件夹的路径值后，原有文件夹中的文件并不会移到新的文件夹中，这样做只改变了文件夹的指向。提示：此方法在win9x 中同样可行。此外，我的文档、Internet临时文件夹可以在它们的属性中修改，邮件存放路径可以在outlook的”工具”→”选项”→”维护”中修改。如果你是多操作系统的用户，可以将相同的文件夹放在同一路径下，这样既减少了硬盘的存储量，也方便了管理和访问，只是”Internet临时文件夹”的”使用的磁盘空间”要设置的相同。 humen1 Tech","permalink":"http://www.humen1.com/2008/04/winxp-e4-b8-8b-e4-bf-ae-e6-94-b9-e4-b8-80-e4-ba-9b-e9-bb-98-e8-ae-a4-e6-96-87-e4-bb-b6-e5-a4-b9-e7-9a-84-e8-b7-af-e5-be-84.html","photos":[]},{"tags":[],"title":"修改Mysql Root密码","date":"2008/03/31","text":"mysql密码丢失后，在mysql命令行下执行如下命令，即可将root用户密码清空： mysqld_safe –skip-grant-tables&amp; mysql修改密码 mysql修改，可在mysql命令行执行如下： mysql -u root mysql mysql&gt; UPDATE user SET password=PASSWORD(“new password”) WHERE user=’root’; mysql&gt; FLUSH PRIVILEGES; mysql&gt; QUIT humen1 Tech","permalink":"http://www.humen1.com/2008/03/e4-bf-ae-e6-94-b9mysql-root-e5-af-86-e7-a0-81.html","photos":[]},{"tags":[],"title":"启动apache出现(2)No Such File or Directory: Failed to Enable the 'Httpready' Accept Filter","date":"2008/03/31","text":"Freebsd启动apache出现[warn] (2)No such file or directory: Failed to enable the ‘httpready’ Accept Filter 找到/boot/loader.conf并修改，输入： accf_http_load=”yes” 然后保存就可以了！ humen1 Tech","permalink":"http://www.humen1.com/2008/03/e5-90-af-e5-8a-a8apache-e5-87-ba-e7-8e-b02no-such-file-or-directory-failed-to-enable-the-httpready-accept-filter.html","photos":[]},{"tags":[],"title":"RSYNC使用详解[freebsd]","date":"2008/03/31","text":"RSYNC使用详解目的是同步两台主机上的文件主机A ：192.168.1.200主机B：192.168.1.201环境还是freebsd 6.2 1.先安装rsync 我用ports装（两台都装） # cd /usr/ports/net/rsync# make install clean 2.配置服务端192.168.1.200# vi /usr/local/etc/rsyncd.conf [data_www] ///模块名称—也就一个需要同步或备份的目录 path = /data/www //要同步的目录 comment = home cad folder //描述 ignore errors read only = yes list = no auth users = backup ////登录用户名 secrets file = /usr/local/etc/rsyncd.pass ////密码存放文件 /****//usr/local/etc/rsyncd.pass密码格式如下 用户名：密码 （有个冒号哟）我是这样设定的backup:123456 !!!!!!!!出于安全目的，文件的属性必需是只有属主可读(不能错)!!!!!!!!!!!!!!!!! chmod 600 /usr/local/etc/rsyncd.pass 3.启动服务# rsync –daemon开机启动这样配置 配置文件 /etc/rc.conf 加入rsyncd_enable=”YES” 4.配置客户端192.168.1.201要避免在同步时交互输入密码，我们先把密码放在一个文件里我用了和服务端一样的文件名和路径/usr/local/etc/rsyncd.pass但是内容不同，在服务端格式是 用户名:密码。在客户端我们就只要密码就好于是写入123456 #chmod 600 /usr/local/etc/rsyncd.pass 我们再写个shell脚本用来快速执行 #vi /etc/sh/rsync_data.sh写入以下内容 /usr/local/bin/rsync -vzrtopg –progress –delete –password-file=/usr/local/etc/rsyncd.pass /data/www/ backup@192.168.1.200::data_www ok现在来同步 # /etc/sh/rsync_data.sh这样主机B 的/data/www目录的内容就会同步到主机A了。 humen1 Tech","permalink":"http://www.humen1.com/2008/03/rsync-e4-bd-bf-e7-94-a8-e8-af-a6-e8-a7-a3freebsd.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Centos 网络配置","date":"2008/03/26","text":"在centos系统的 /etc/sysconfig/network-script/ifcfg-eth0文件中存放着这台机子网卡IP地址配置的相关信息，它的具体格式为：[root@localhost network-scripts]# cat ifcfg-eth0DEVICE=eth0BOOTPROTO=noneONBOOT=yesTYPE=EthernetNETMASK=255.255.255.128IPADDR=11.19.13.16USERCTL=noPEERDNS=yesGATEWAY=61.49.23.129只要我们按照上面的格式配置好文件的各个数据项，且用/etc/init.d/network reload 命令 或service network reload重新导入该文件，我们就可以将我们的网络启动起来。 humen1 Tech","permalink":"http://www.humen1.com/2008/03/centos-e7-bd-91-e7-bb-9c-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[],"title":"fms3启动时产生错误libnspr4.so [centos4.6]","date":"2008/03/26","text":"./shmrd: error while loading shared libraries: libnspr4.so: cannot open shared object file: No such file or directory 于是 # wget http://download.opensuse.org/distribution/10.2/repo/oss/suse/i586/mozilla-nspr-4.6.3-10.i586.rpm# cd /opt/adobe/fms/# ls# rpm -ivh mozilla-nspr-4.6.3-10.i586.rpm 之后重启fms问题解决 humen1 Tech","permalink":"http://www.humen1.com/2008/03/fms3-e5-90-af-e5-8a-a8-e6-97-b6-e4-ba-a7-e7-94-9f-e9-94-99-e8-af-aflibnspr4-so-centos4-6.html","photos":[]},{"tags":[],"title":"一些类Uinx中查看软件信息的命令[freebsd&linux]","date":"2008/03/26","text":"查看软件安装的位置 # pkg_info �L softwarename | less查看软件安装的版本 # pkg_info | grep softwarename查看这个软件的具体信息 # pkg_info softwarelinux/freebsd查看目录大小的命令 freebsd的命令: 在某个目录里执行 #du -h -d 1可以查看目录里的每个子目录的大小 linux下的命令则为: #du -h –max-depth=1 humen1 Tech","permalink":"http://www.humen1.com/2008/03/e4-b8-80-e4-ba-9b-e7-b1-bbuinx-e4-b8-ad-e6-9f-a5-e7-9c-8b-e8-bd-af-e4-bb-b6-e4-bf-a1-e6-81-af-e7-9a-84-e5-91-bd-e4-bb-a4freebsdlinux.html","photos":[]},{"tags":[],"title":"Mysql51中文手册（在线）","date":"2008/03/25","text":"http://www.humen1.net/doc/mysql_51_zh/ humen1 Tech","permalink":"http://www.humen1.com/2008/03/mysql51-e4-b8-ad-e6-96-87-e6-89-8b-e5-86-8c-ef-bc-88-e5-9c-a8-e7-ba-bf-ef-bc-89.html","photos":[]},{"tags":[],"title":"执子之手，与子偕老。","date":"2008/03/20","text":"击鼓其镗，踊跃用兵。土国城漕，我独南行。从孙子仲，平陈与宋。不我以归，忧心有忡。爰居爰处？爰丧其马？于以求之？于林之下。死生契阔，与子成说。执子之手，与子偕老。于嗟阔兮，不我活兮。于嗟洵兮，不我信兮。 [译文]击鼓声镗镗（震于耳旁），（将士们）奋勇演练着刀枪。土墙和漕城修筑正忙，惟有我随军远征到南方。 跟随孙子仲（行旅奔波），平定（作乱的）陈、宋二国，回家的心愿得不到允可，心中郁郁忧愁不乐， （我却）身在何方，身处何地？我的马儿丢失在哪里？到哪里（才能）将它寻觅？到那（山间的）林泉之地。 生生死死离离合合，（无论如何）我与你说过。与你的双手交相执握，伴着你一起垂垂老去。 可叹如今散落天涯，怕有生之年难回家乡。可叹如今天各一方，令我的信约竟成了空话。 humen1 Tech","permalink":"http://www.humen1.com/2008/03/e6-89-a7-e5-ad-90-e4-b9-8b-e6-89-8b-ef-bc-8c-e4-b8-8e-e5-ad-90-e5-81-95-e8-80-81-e3-80-82.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"安装FMS3 Linux版[linux]","date":"2008/03/14","text":"之前在red hat linux 9上安装需要很多c的库依赖。看了adobe的官网fms3 适用于red hat 4 （也就是AS4版）但是不太想用redhat了，于是用了免费的CentOS对应的版本应该是centos4.2以上(AS4 update2)于是去下了个centOS4.6找了几处镜像以下链接是速度最快的（我用的是上海有线通）http://centos.candishosting.com.cn/4.6/isos/i386/CentOS-4.6-i386-bin1of4.isohttp://centos.candishosting.com.cn/4.6/isos/i386/CentOS-4.6-i386-bin2of4.isohttp://centos.candishosting.com.cn/4.6/isos/i386/CentOS-4.6-i386-bin3of4.isohttp://centos.candishosting.com.cn/4.6/isos/i386/CentOS-4.6-i386-bin3of4.iso 注意* 第四张盘可以不用下，安装系统只要前三张盘 centOS的安装我就不说了，我选择的是custom安装，牢记要选上开发工具选项，fms3的依赖包里有c++的列库依赖 正式开始了 先创建个用户和用户组给fms用 [root@seven ~]# groupadd fms[root@seven ~]# useradd -g fms fms 将安装包放在随便哪个目录里解压（我放在 /share 里） [root@seven ~]# cd /share[root@seven share]# tar -xzf FlashMediaServer3.tar.gz …一阵解压后切到FMS3目录下 [root@seven share]# cd /FMS_3_0_0_r1157[root@seven FMS_3_0_0_r1157]# ./installFMS -platformWarnOnly 官方文档上写的只有 ./installFMS 这个行不通的装过2的人都知道 安装过程和2差不多在 2008 年 一月 里有安装2的过程可以参考 装好以后切到程序目录[root@seven FMS_3_0_0_r1157]# cd /opt/adobe/fms[root@seven fms] ./fmsmgr server fms start 用top察看进程看到以下四个说明安装已成功了 fmscorefmsedgefmsmasterfmsadmin 如果有什么问题比如跑不起服务试试看以下这些方法 1.有可能是其中一个依赖包没有 ldd fmsadminlinux-gate.so.1 =&gt; (0×00cea000)libpthread.so.0 =&gt; /lib/libpthread.so.0 (0×00721000)libasneu.so.1 =&gt; /usr/lib/libasneu.so.1 (0×00b68000)librt.so.1 =&gt; /lib/librt.so.1 (0×0074f000)libdl.so.2 =&gt; /lib/libdl.so.2 (0×0071b000)libstdc .so.6 =&gt; /usr/lib/libstdc .so.6 (0×04735000)libm.so.6 =&gt; /lib/libm.so.6 (0×006f2000)libgcc_s.so.1 =&gt; /lib/libgcc_s.so.1 (0×00dcb000)libc.so.6 =&gt; /lib/libc.so.6 (0×005b0000)/lib/ld-linux.so.2 (0×0058e000) 起初我在装的时候libasneu.so.1 =&gt; 为空所以 #cp /opt/adobe/fms/libasneu.so.1 /lib/libasneu.so.1 然后 #./fmsmgr adminserver start 2.如果4个进程都跑起来了但是fms_adminConsole.swf还是连不上 那么试试看将你的防火墙关闭先 开启： service iptables start关闭： service iptables stop 永久性的 – 开启： chkconfig iptables on关闭： chkconfig iptables off 这样安全么？测试的时候可以，放到外面当然不行了 编辑防火墙配置 vi /etc/sysconfig/iptables 找到-A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited 在其上+上 -A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 1111 -j ACCEPT -A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 1935 -j ACCEPT 然后/etc/rc.d/init.d/iptables restart 就ok了 humen1 Tech","permalink":"http://www.humen1.com/2008/03/e5-ae-89-e8-a3-85fms3-linux-e7-89-88linux.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"仔细设定Mysql用户权限。提高查询速度！","date":"2008/03/12","text":"之前一直是将用户权限设定为全权，包括结构及和文件及 最近看了篇文章于是测试了下 只给数据及权限 果然查询速度提高 40% 多 humen1 Tech","permalink":"http://www.humen1.com/2008/03/e4-bb-94-e7-bb-86-e8-ae-be-e5-ae-9amysql-e7-94-a8-e6-88-b7-e6-9d-83-e9-99-90-e3-80-82-e6-8f-90-e9-ab-98-e6-9f-a5-e8-af-a2-e9-80-9f-e5-ba-a6-ef-bc-81.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"将类路径转换为.语法路径传递给AS[PHP]","date":"2008/03/08","text":"define(“ROOT_PATH”,”/xxx/yyy/zzz/“); function A (){ $this-&gt;rootPath = ROOT_PATH; $this-&gt;file = __FILE__; return $this-&gt;classRoot = basename(str_replace(“/“,”.”,str_replace(“$this-&gt;rootPath” ,””, $this-&gt;file)),”.php”); } humen1 Tech","permalink":"http://www.humen1.com/2008/03/e5-b0-86-e7-b1-bb-e8-b7-af-e5-be-84-e8-bd-ac-e6-8d-a2-e4-b8-ba-e8-af-ad-e6-b3-95-e8-b7-af-e5-be-84-e4-bc-a0-e9-80-92-e7-bb-99asphp.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"网站检查工具","date":"2008/03/03","text":"- Dr. Watson’s site validation check Dr. Watson 是一个免费的网页分析服务，你只需提交你的URL ，Watson 就可以直接从WEB服务器提取到相关的检测报告。Watson 还能检查你网站的其它方面，包括链接的有效性，下载速度，搜索引擎兼容性，链接的友好性等。它将很多检验工具集合为一体，下面是简单列表： 页面加载时间检测语法和风格分析字数统计拼写检查链接检查搜索引擎优化检测引入链接检测源代码检测 - W3C Markup validation Service 检测标记、源代码、HTML/XHTML等语法错误并提出修改建议。它来自于 W#C 集团，所以其检查比较严厉，文档检测标准独特，一些其他的相关检测网站均不具备， - SEO Consultants Validator 这是一个HTML/XHTML/CSS有效性检测工具，当检查出错误时，提供更改的建议，包括语法风格检查和源代码检查。 - XML Validation checker 这个工具用来检测你的XML文件是否有效，检查范围包括空格和语法错误，当检查出错误时会用指出错误产生的行号，方便你的修正。 - Robots.txt checker 这个工具主要检查 Robots.txt 文件。当你拿不准你的 Robots.txt 是否有效或是否能被搜索引擎错误识别时，你最好先用它来检查一下，因为 Robots.txt 一旦出了问题对你的搜索收录存在很大的问题。 - Page load time checker 你想知道在世界各地打开你的网站的加载时间吗？这个工具就为你提供了可以世界各地打开你网页的时间同时给出处理的文档大小。 - All in One website validation check XML/HTML 有效性、CSS、链接和结构合理性检测工具 - RSS Feed validator 检查你的RSS是否合乎标准，如果你的FEED需要修正，它会在相关错误处提示警告信息。 - General Conformance check 想知道你的站点是否还有可改善之处吗？可以用它来做一下所有的常规检测。 - Quality and Accessibility check 检测内容比较广泛，如易用性、页面内容、元数据、链接、浏览器兼容、搜索和导航、W3C网页内容指导等方面，它能够给你提供一个具体的错误细节报告和解决思路。 humen1 Tech","permalink":"http://www.humen1.com/2008/03/e7-bd-91-e7-ab-99-e6-a3-80-e6-9f-a5-e5-b7-a5-e5-85-b7.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"mcrypt使用[PHP]","date":"2008/02/27","text":"要使用本函数库要先准备 mcrypt 程序，可以到 ftp://argeas.cs-net.gr/pub/unix/mcrypt 下载这个程序 libmcrypt-x.x.tar.gz。同时在编译 php 程序时需要加入 –with-mcrypt 的选项，俾使本函数库能顺利运作。本函数提供的编码方式有 des、tripledes、blowfish (默认值)、3-way、safer-sk64、safer-sk128、twofish、tea、rc2 及使用 cbc, ofb, cfb, ecb 作为密码检索的 gost。此外还有 rc6 及 idea 等非免费的编码方式。见下面列示为已定义的密码： mcrypt_blowfishmcrypt_desmcrypt_tripledesmcrypt_threewaymcrypt_gostmcrypt_cryptmcrypt_des_compatmcrypt_safer64mcrypt_safer128mcrypt_cast128mcrypt_teanmcrypt_rc2mcrypt_twofish (mcrypt 2.x 前的版本用)mcrypt_twofish128 (mcrypt 2.x 后的版本用)mcrypt_twofish192mcrypt_twofish256mcrypt_rc6mcrypt_idea在密码检索本 (cipher) 方面，本函库支持 cbc、ofb、cfb 与 ecb 四种密码检索本。这四种密码检索本的简单叙述如下，更详细的信息请参考 schneier 所着作的 applied cryptography (isbn: 0-471-11709-9)： ecb (electronic codebook): 适合随机的资料，例如使用另外的密钥。若资料量少且随机时，使用 ecb 较不适合。cbc (cipher block chaining): 适合文件的加密，安全性较 ecb 好。cfb (cipher feedback): 适合对位组资料流中的某段独立位组资料 (single bytes) 加密。ofb (output feedback): 与 cfb 相容，尤其适合在无法忍受错误波及的应用上。目前 php 仍无法对单位 (bit) 的熵值做加密解密的步骤，目前只适合对字符串作密码处理。 在使用 cfb 及 ofb 二种模式时，必须要向量初始化 (initialization vector, iv)，cbc 模式也可以使用向量初始化。向量初始化的值在加解密时必须是独一无二的，同时也要保持相同。当加密后的资料输出时，也可同时输出密码钥匙 (例如存在文件中)；或者也可以将向量初始化的值与加密后的资料一起输出。 mcrypt_get_cipher_name: 取得编码方式的名称。mcrypt_get_block_size: 取得编码方式的区块大小。mcrypt_get_key_size: 取得编码钥匙大小。mcrypt_create_iv: 从随机源将向量初始化。mcrypt_cbc: 使用 cbc 将资料加/解密。mcrypt_cfb: 使用 cfb 将资料加/解密。mcrypt_ecb: 使用 ecb 将资料加/解密。mcrypt_ofb: 使用 ofb 将资料加/解密。 mcrypt_get_cipher_name取得编码方式的名称。语法: string mcrypt_get_cipher_name(int cipher);返回值: 字符串函数种类: 编码处理内容说明: 本函数用来取得编码方式的名称。返回值为名称字符串，若没有指定的编码方式则返回 false 或输入的名称。使用范例下例会输出 tripledes 字符串。$cipher = mcrypt_tripledes;print mcrypt_get_cipher_name($cipher);?&gt; mcrypt_get_block_size取得编码方式的区块大小。语法: int mcrypt_get_block_size(int cipher);返回值: 整数函数种类: 编码处理内容说明: 本函数用来取得编码方式的区块大小。参数为编码名称，返回整数单位为位组 (byte)。 mcrypt_get_key_size取得编码钥匙大小。语法: int mcrypt_get_key_size(int cipher);返回值: 整数函数种类: 编码处理内容说明: 本函数用来取得编码钥匙的大小。参数为编码名称，返回整数治募�单位为位组 (byte)。 mcrypt_create_iv从随机源将向量初始化。语法: string mcrypt_create_iv(int size, int source);返回值: 字符串函数种类: 编码处理内容说明: 本函数用来建立向量初始化 (initialization vector, iv) 的值。参数 size 为指定的向量初始化长度。参数 source 为随机资料的来源，来源可以是 mcrypt_rand (系统产生的随机值)、mcrypt_dev_random (unix 系统中 /dev/random 的资料)、mcrypt_dev_urandom (unix 系统中 /dev/urandom 的资料)，若使用 mcrypt_rand 当做随机源，记得先使用 srand() 产生乱数种子。使用范例$cipher = mcrypt_tripledes;$block_size = mcrypt_get_block_size($cipher);$iv = mcrypt_create_iv($block_size, mcrypt_dev_random);?&gt; mcrypt_cbc使用 cbc 将资料加/解密。语法: string mcrypt_cbc(int cipher, string key, string data, int mode, string [iv]);返回值: 字符串函数种类: 编码处理内容说明: 本函数使用 cbc 密码检索本 (cipher block chaining)，将资料加密及解密。参数 cipher 为加/解密方式，例如 mcrypt_tripledes。参数 key 是密码钥匙，当然要注意保持它的机密性。欲加密或解密的字符串就放在参数 data 之中。参数 mode 表示加密 mcrypt_encrypt 或是解密 mcrypt_decrypt。参数 iv 是可省略的参数，代表向量初始化 (initialization vector, iv)。 mcrypt_cfb使用 cfb 将资料加/解密。语法: string mcrypt_cfb(int cipher, string key, string data, int mode, string iv);返回值: 字符串函数种类: 编码处理内容说明: 本函数使用 cfb 密码检索本 (cipher feedback)，将资料加密及解密。参数 cipher 为加/解密方式，例如 mcrypt_tripledes。参数 key 是密码钥匙，当然要注意保持它的机密性。欲加密或解密的字符串就放在参数 data 之中。参数 mode 表示加密 mcrypt_encrypt 或是解密 mcrypt_decrypt。参数 iv 是代表向量初始化 (initialization vector, iv)。 mcrypt_ecb使用 ecb 将资料加/解密。语法: string mcrypt_ecb(int cipher, string key, string data, int mode);返回值: 字符串函数种类: 编码处理内容说明: 本函数使用 ecb 密码检索本 (electronic codebook)，将资料加密及解密。参数 cipher 为加/解密方式，例如 mcrypt_tripledes。参数 key 是密码钥匙，当然要注意保持它的机密性。欲加密或解密的字符串就放在参数 data 之中。参数 mode 表示加密 mcrypt_encrypt 或是解密 mcrypt_decrypt。 mcrypt_ofb使用 ofb 将资料加/解密。语法: string mcrypt_ofb(int cipher, string key, string data, int mode, string iv);返回值: 字符串函数种类: 编码处理内容说明: 本函数使用 ofb 密码检索本 (output feedback)，将资料加密及解密。参数 cipher 为加/解密方式，例如 mcrypt_tripledes。参数 key 是密码钥匙，当然要注意保持它的机密性。欲加密或解密的字符串就放在参数 data humen1 Tech","permalink":"http://www.humen1.com/2008/02/mcrypt-e4-bd-bf-e7-94-a8php.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"redhat查看硬件信息[Linux]","date":"2008/02/27","text":"#cat /proc/cpuinfo#cat /proc/meminfo#fdisk -l#lspci humen1 Tech","permalink":"http://www.humen1.com/2008/02/redhat-e6-9f-a5-e7-9c-8b-e7-a1-ac-e4-bb-b6-e4-bf-a1-e6-81-aflinux.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"安装Mcrypt扩展","date":"2008/02/26","text":"mcrypt被用来实现可逆加密 默认没有装这里我要装一下 有个依赖库libmcrypt 要先装 位置/usr/ports/security/libmcrypt 然后装mcrypt /usr/ports/security/php5-mcrypt 根据提示要在/usr/local/etc/php/extensions.ini中+上 extension=mcrypt.so 这句 但是装好默认就+上了 所以 apachectl restart OK～ humen1 Tech","permalink":"http://www.humen1.com/2008/02/e5-ae-89-e8-a3-85mcrypt-e6-89-a9-e5-b1-95.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"移动硬盘文件不能删除？","date":"2008/02/25","text":"最近在移动硬盘上多了2个文件夹，名字很长（数字字母），怎么也删不掉 估计是借给别人时，在移动硬盘里直接运行安装程序造成的缓存文件 尝试了网上所有的办法，除了格式化 硬盘没那么大，都是重要的资料，其实放着也不唉事但就是看着不爽 根据提示看来是应为没有文件夹的宿主权限 然后我尝试了一下改变文件夹宿主的操作，结果问题得到了解决 具体操作如下 右键不能删除的文件夹，属性-》安全-》高级 选择 所有者 标签 选择当前用户 勾选复选框 替换子容器及对象的所有者 确定 然后就可以删除了～～ 网上的各种做法是在是让我无言。。。。。 humen1 Tech","permalink":"http://www.humen1.com/2008/02/e7-a7-bb-e5-8a-a8-e7-a1-ac-e7-9b-98-e6-96-87-e4-bb-b6-e4-b8-8d-e8-83-bd-e5-88-a0-e9-99-a4-ef-bc-9f.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"FreeBSD 用Cvsd创建cvs服务器","date":"2008/02/19","text":"1. 下载及安装 用ports 安装cvsd,位于 /usr/ports/devel/cvsd用ports 安装cvs,位于 /usr/ports/devel/cvs ipv6 创建 cvsd 用户(#useradd)。 2. 修改配置 指定虚拟根目录的实际路径，在RootJail命令后设置/usr/local/etc/cvsd/cvsd.conf # RootJail# This is the location of the chroot jail# cvs should be run in.# Specify @#none@# (without quotes) to not use# a chroot jail.# This directory should be initialized with# the cvsd-buildroot script.RootJail /home/soft/cvsd 创建 /home/soft/cvsd,使用命令行 /usr/local/sbin/cvsd-buildroot /home/soft/cvsd/ 初始化虚根目录 创建cvsroot 目录 : mkdir /home/soft/cvsd/cvsroot 用命令 cvs -d /home/soft/cvsd/cvsroot init 初始化cvs目录 用命令建立cvs用户:cvsd-passwd /home/soft/cvsd/cvsroot/ cvsuser:cvsd上面的命令建立cvsuer 这个帐号，它和系统的 cvsd用户挂接。注意，cvsd是操作系统的用户名,是第一步操作中建立的。你还可以使用该命令建立其它帐号. 将cvsroot 加入/usr/local/etc/cvsd/cvsd.conf的最后一行,如下面Repos /cvsroot 此句指明要使用虚拟根下的 “cvsroot” 这个仓库。 3 设置启动脚本#echo cvsd_enable=”YES” &gt;&gt; /etc/rc.conf #reboot 4.注意事项 cvsd只是cvs的一个外壳程序，将cvs运行在虚拟根环境下，提高系统的安全性。你在安装cvsd后还必须安装cvs程序。 不要跨分区建立仓库，否则会提示找不到用户.我的/home 和/ 是两个不同的分区.我开始在home下创建仓库,在var下创建虚根目录,作了符号链接后不能读取文件. 声明: 转载此文请保留此声明信息。 驱动开发网 华语地区核心层开发专业网站 http://www.driverdevelop.com 软件创造价值，驱动提供力量! humen1 Tech","permalink":"http://www.humen1.com/2008/02/freebsd-e7-94-a8cvsd-e5-88-9b-e5-bb-bacvs-e6-9c-8d-e5-8a-a1-e5-99-a8.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Iframe自适应高度和宽度","date":"2008/02/18","text":"iframe自适应高度和宽度,在页面标签内写入如下。 function SetWinHeight(obj){var win=obj;if (document.getElementById){&nbsp;&nbsp;&nbsp; if (win && !window.opera)&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp; if (win.contentDocument && win.contentDocument.body.offsetHeight) &nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; win.height = win.contentDocument.body.offsetHeight; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; win.width =win.contentDocument.body.offsetWidth;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp; else if(win.Document && win.Document.body.scrollHeight)&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; win.height = win.Document.body.scrollHeight;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; win.width=win.Document.body.scrollWidth;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp; }}} 然后在里面写入如下 humen1 Tech","permalink":"http://www.humen1.com/2008/02/iframe-e8-87-aa-e9-80-82-e5-ba-94-e9-ab-98-e5-ba-a6-e5-92-8c-e5-ae-bd-e5-ba-a6.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Mysql类 自己为求方便封装了一下","date":"2008/02/13","text":"############################################################# What’s this . This is a PHP5 CLASS to provide access utility# for MySQL database. # AUTHOR :: Humen1# WEB SITE :: http://www.humen1.net# Vision :: 1.0 ############################################################ class mydb{///start of the CLASS private $host; private $usr; private $pwd; private $db; private $charset = NULL; private $charsetArray = Array(“utf8”,”big5”,”gb2312”,”gbk”,”latin1”); private $link; private $result; private $error = Array(); /** #ERROR = Array( [0]=&gt;,) **/ ###construct function mydb($DB_host,$DB_user,$DB_passwd,$DB_name = “”){ $this-&gt;host = $DB_host; $this-&gt;usr = $DB_user; $this-&gt;pwd = $DB_passwd; $this-&gt;db = $DB_name; } ###set database name function set_db($DB_name){ $this-&gt;db = $DB_name; } ###get connection flag function connection(){ ///get connection $this-&gt;link = @mysql_connect($this-&gt;host,$this-&gt;usr,$this-&gt;pwd); if(!$this-&gt;link){ $this-&gt;error[0] = sprintf(“Error connecting to host %s by user %s”, $this-&gt;host,$this-&gt;usr); } ///select db if(!mysql_select_db($this-&gt;db,$this-&gt;link)){ $this-&gt;error[1] = sprintf(“Error in selecting %s database.\\n mysql errno is %d and error message is %s”,$this-&gt;db,mysql_errno($this-&gt;link),mysql_error($this-&gt;link)); } } ###set query charset function set_charset($Charset){ if(in_array($Charset,$this-&gt;charsetArray)){ $this-&gt;charset = $Charset; } } ###Quick execute the statement function query($SQL){ $this-&gt;connection(); if($this-&gt;charset !== NULL){ mysql_query(“SET NAMES “.$this-&gt;charset , $this-&gt;link); } $this-&gt;result = mysql_query($SQL , $this-&gt;link); if(!$this-&gt;result){ $this-&gt;error[2] = sprintf(“Error query in %s database.\\n mysql errno is %d and error message is %s”,$this-&gt;db,mysql_errno($this-&gt;link),mysql_error($this-&gt;link)); }else{ return $this-&gt;result; } } ###fetch the result as array function fetch($result_type = MYSQL_BOTH){ ///MYSQL_ASSOC,MYSQL_NUM,MYSQL_BOTH if($result_type == “1”) $result_type = MYSQL_NUM; if($result_type == “A”) $result_type = MYSQL_ASSOC; if(!$this-&gt;result){ $this-&gt;error[3] = “Error fetch array in %s database.There is no Result”; }else{ return mysql_fetch_array($this-&gt;result,$result_type); } } ###fetch the result as object function fetch_obj(){ return ($this-&gt;result) ? @mysql_fetch_object($this-&gt;result) : false; } ###return the next id function next_id(){ return ($this-&gt;link) ? @mysql_insert_id($this-&gt;link) : false; } ###return the affectde rows function affected_rows(){ return ($this-&gt;link) ? @mysql_affected_rows($this-&gt;link) : false; } ###return the rows number from result function num_rows(){ return ($this-&gt;result) ? @mysql_num_rows($this-&gt;result) : false; } ###return the fields number from result function num_fields(){ return ($this-&gt;result) ? @mysql_num_fields($this-&gt;result) : false; } ###free the result function free(){ return ($this-&gt;result) ? @mysql_free_result($this-&gt;result) : false; } /****************Advanced Plus************************/ ###get one record only function getOne($SQL){ $SQL .= “ LIMIT 1”; $this-&gt;query($SQL); return ($this-&gt;result) ? @mysql_fetch_row($this-&gt;result) : false; } ///End of the CLASS}?&gt; humen1 Tech","permalink":"http://www.humen1.com/2008/02/mysql-e7-b1-bb-e8-87-aa-e5-b7-b1-e4-b8-ba-e6-b1-82-e6-96-b9-e4-be-bf-e5-b0-81-e8-a3-85-e4-ba-86-e4-b8-80-e4-b8-8b.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"一个简单的Url_rewrite规则，实现动态php 静态化","date":"2008/01/30","text":".htaccess RewriteEngine OnRewriteRule ^(.+)\\.html index.php\\?Action=$1 // 简单介绍下 RewriteEngine On开启apache mod_rewrite RewriteRule ^(.+)\\.html index.php\\?Action=$1 将 http://www.club-fish.com/xxxx.html 转义成 http://www.club-fish.com/index.php?Action=xxxx humen1 Tech","permalink":"http://www.humen1.com/2008/01/e4-b8-80-e4-b8-aa-e7-ae-80-e5-8d-95-e7-9a-84url-rewrite-e8-a7-84-e5-88-99-ef-bc-8c-e5-ae-9e-e7-8e-b0-e5-8a-a8-e6-80-81php-e9-9d-99-e6-80-81-e5-8c-96.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Google排名优化－面向Google(Search Engine Friendly)的URL设计","date":"2008/01/30","text":"不得不承认，将动态网页链接rewriting成静态链接是最保险和稳定的面向搜索引擎优化方式 此外随着互联网上的内容以惊人速度的增长也越来越突出了搜索引擎的重要性，如果网站想更好地被搜索引擎收录，网站设计除了面向用户友好（User Friendly）外，搜索引擎友好（Search Engine Friendly）的设计也是非常重要的。进入搜索引擎的页面内容越多，则被用户用不同的关键词找到的几率越大。在Google的算法调查一文中提到一个站点被Google索引页面的数量其实对PageRank也是有一定影响的。由于Google 突出的是整个网络中相对静态的部分（动态网页索引量比较小）,链接地址相对固定的静态网页比较适合被Google索引（怪不得很多大网站的邮件列表归档和BLOG按日期归档的文档很容被搜的到），因此很多关于面向搜索引擎 URL设计优化(URI Pretty)的文章中提到了很多利用一定机制将动态网页参数变成像静态网页的形式：比如可以将：http://phpunixman.sourceforge.net/index.php?mode=man¶meter;=ls变成：http://phpunixman.sourceforge.net/index.php/man/ls 实现方式主要有2种： 基于url rewriteIIS的ISAPI REWRITE下载（免费） 基于path_info 把URI地址用作参数传递：URL REWRITE 最简单的是基于各种WEB服务器中的URL重写转向（Rewrite）模块的URL转换：这样几乎可以不修改程序的实现将 news.asp?id=234 这样的链接映射成 news/234.html，从外面看上去和静态链接一样。Apache服务器上有一个模块（非缺省）：mod_rewrite：URL REWRITE功能之强大足够写上一本书。 当我需要将将news.asp?id=234的映射成news/234.html时，只需设置：RewriteRule /news/(\\d+)\\.html /news\\.asp\\?id=$1 [N,I]这样就把 /news/234.html 这样的请求映射成了 /news.asp?id=234当有对/news/234.html的请求时：web服务器会把实际请求转发给/news.asp?id=234 而在IIS也有相应的REWRITE模块：比如ISAPI REWRITE和IIS REWRITE，语法都是基于正则表达式，因此配置几乎和apache的mod_rewrite是相同的： 比对于某一个简单应用可以是：RewriteRule /news/(\\d+)\\.html /news/news\\.php\\?id=$1 [N,I]这样就把 http://www.chedong.com/news/234.html 映射到了 http://www.chedong.com/news/news.php?id=234 一个更通用的能够将所有的动态页面进行参数映射的表达式是：把 http://www.myhost.com/foo.php?a=A&b;=B&c;=C 表现成 http://www.myhost.com/foo.php/a/A/b/B/c/C。RewriteRule (.?\\.php)(\\?[^/])?/([^/])/([^/])(.+?)?$1(?2$2&amp;:\\?)$3=$4?5$5: [N,I] 以下是针对phpBB的一个Apache mod_rewrite配置样例： RewriteEngine On RewriteRule /forum/topic_(.+)\\.html$ /forum/viewtopic.php?t=$1 [L] RewriteRule /forum/forum_(.+)\\.html$ /forum/viewforum.php?f=$1 [L] RewriteRule /forum/user_(.+)\\.html$ /forum/profile.php?mode=viewprofile&u;=$1 [L] 这样设置后就可以通过topic_1234.html forum_2.html user_34.html这样的链接访问原来的动态页面了。 通过URL REWRITE还有一些好处：mod_rewrite和isapirewrite基本兼容，但是还是有些不同，比如：isapirewrite中”?”需要转义成”\\?”，mod_rewrite不用，isapirewrite支持 “\\d+” （全部数字），mod_rewrite不支持 隐藏后台实现：这在后台应用平台的迁移时非常有用：当从asp迁移到java平台时，对于前台用户来说，根本感受不到后台应用的变化； 简化数据校验：因为像(\\d+)这样的参数，可以有效的控制数字的格式甚至位数； 比如我们需要将应用从news.asp?id=234迁移成news.php?query=234时，前台的表现可以一直保持为 news/234.html。从实现应用和前台表现的分离：保持了URL的稳定性，而使用mod_rewrite甚至可以把请求转发到其他后台服务器上。 基于PATH_INFO的URL美化Url美化的另外一个方式就是基于PATH_INFO：PATH_INFO是一个CGI 1.1的标准，经常发现很多跟在CGI后面的”/value_1/value_2”就是PATH_INFO参数：比如：http://phpunixman.sourceforge.net/index.php/man/ls 中：$PATH_INFO = “/man/ls” PATH_INFO是CGI标准，因此PHP Servlet等都有的支持。比如Servlet中就有request.getPathInfo()方法。注意：/myapp/servlet/Hello/foo的 getPathInfo()返回的是/foo，而/myapp/dir/hello.jsp/foo的getPathInfo()将返回的 /hello.jsp，从这里你也可以知道jsp其实就是一个Servlet的PATH_INFO参数。ASP不支持PATH_INFO PHP中基于PATH_INFO的参数解析的例子如下：//注意：参数按”/“分割，第一个参数是空的：从/param1/param2中解析出$param1 $param2这2个参数if ( isset($_SERVER[“PATH_INFO”]) ) { list($nothing, $param1, $param2) = explode(‘/‘, $_SERVER[“PATH_INFO”]);} 如何隐蔽应用：例如 .php，的扩展名：在APACHE中这样配置： ForceType application/x-httpd-php 如何更像静态页面：app_name/my/app.html解析的PATH_INFO参数的时候，把最后一个参数的最后5个字符”.html”截断即可。注意：APACHE2中缺省是不允许PATH_INFO的，需要设置 AcceptPathInfo on 特别是针对使用虚拟主机用户，无权安装和配置mod_rewrite的时候，PATH_INFO往往就成了唯一的选择。 OK，这样以后看见类似于http://www.example.com/article/234这样的网页你就知道可能是 article/show.php?id=234这个php程序生成的动态网页，很多站点表面看上去可能有很多静态目录，其实很有可能都是使用1，2个程序实现的内容发布。比如很多WIKIWIKI系统都使用了这个机制：整个系统就一个简单的wiki程序，而看上去的目录其实都是这个应用拿后面的地址作为参数的查询结果。 利用基于MOD_REWRITE/PATH_INFO ＋ CACHE服务器的解决方案对原有的动态发布系统进行改造，也可以大大降低旧有系统升级到新的内容管理系统的成本。并且方便了搜索引擎收录入索引。 附：如何在IIS上利用PHP支持PATH_INFOPHP的ISAPI模式安装备忘：只试成 php-4.2.3-Win32 解包目录========php-4.2.3-Win32.zip c:\\php PHP.INI初始化文件=================复制：c:\\php\\php.ini-dist 到 c:\\winnt\\php.ini 配置文件关联============按照install.txt中的说明配置文件关联 运行库文件==========复制 c:\\php\\php4ts.dll 到 c:\\winnt\\system32\\php4ts.dll 这样运行后：会发现php把PATH_INFO映射到了物理路径上Warning: Unknown(C:\\CheDong\\Downloads\\ariadne\\www\\test.php\\path): failed to create stream: No such file or directory in Unknown on line 0 Warning: Unknown(): Failed opening ‘C:\\CheDong\\Downloads\\ariadne\\www\\test.php\\path’ for inclusion (include_path=’.;c:\\php4\\pear’) in Unknown on line 0 安装ariadne的PATCH==================停止IIS服务net stop iisadminftp://ftp.muze.nl/pub/ariadne/win/iis/php-4.2.3/php4isapi.dll覆盖原有的c:\\php\\sapi\\php4isapi.dll 注：ariadne是一个基于PATH_INFO的内容发布系统，PHP 4.3.2 RC2中CGI模式的PATH_INFO已经修正，照常安装即可。 参考资料：URL Rewrite文档：ISAPI REWRITE文档IIS的ISAPI REWRITE下载（免费）http://httpd.apache.org/docs/mod/mod_rewrite. htmlhttp://httpd.apache.org/docs-2.0/mod/mod_rewrite.html 搜索引擎友好的URL设计http://www.sitepoint.com/article/485说不定这个URL原来就是articel.php?id=485 一个基于PATH_INFO的开源内容管理系统http://typo3.com/ Google的PageRank算法说明：http://pr.efactory.de/ humen1 Tech","permalink":"http://www.humen1.com/2008/01/google-e6-8e-92-e5-90-8d-e4-bc-98-e5-8c-96-ef-bc-8d-e9-9d-a2-e5-90-91googlesearch-engine-friendly-e7-9a-84url-e8-ae-be-e8-ae-a1.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"freeBSD Ftpd配置介绍","date":"2008/01/29","text":"像自带sendmail一样，freeBSD在系统安装时自带了ftp，这就是freeBSD的ftpd进程，默认以inetd方式运行，你只要在/etc/inetd.conf里如下设置：ftp stream tcp nowait root /usr/libexec/ftpd ftpd -lftp stream tcp6 nowait root /usr/libexec/ftpd ftpd -l并在/etc/rc.conf里设置：inetd_enable=”YES”这样ftpd就能顺畅运行。但是如果你的ftp运行很繁忙，用inetd方式运行ftp势必影响效率和性能，此时建议你以独立方式运行freeBSD的ftpd，方法很简单，如下：在/etc/inetd.conf里注释掉以上两句，用如下方式启动：#/usr/libexec/ftpd -Dftpd的参数比较多常用的如下：-A: 只允许匿名登录；-M: 不允许匿名创建目录；-m: 赋予匿名修改，覆盖等权限；更多参数请man ftpd.ftpd的相关设置文件：/etc/ftpusers List of unwelcome/restricted users./etc/ftpchroot List of normal users who should be chroot’d./etc/ftphosts Virtual hosting configuration file./etc/ftpwelcome Welcome notice./etc/ftpmotd Welcome notice after login./var/run/nologin Displayed and access refused./var/log/ftpd Log file for anonymous transfers./var/log/xferlog Default place for session logs. humen1 Tech","permalink":"http://www.humen1.com/2008/01/freebsd-ftpd-e9-85-8d-e7-bd-ae-e4-bb-8b-e7-bb-8d.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"关于 Redhat9 的网络配置文件","date":"2008/01/25","text":"完整搜索顺序是：（*为接口名） /etc/sysconfig/networking/profiles/default/ifcfg-*/etc/sysconfig/networking/profiles/default/*/etc/sysconfig/networking/default/ifcfg-*/etc/sysconfig/networking/default/*/etc/sysconfig/network-scripts/ifcfg-*/etc/sysconfig/network-scripts/* 从上往下，找到任何一个就忽略其他。具体某人的机器这些配置放在哪里？是由你运行的网络接口配置程序决定的（linux有N多网络配置程序，像早些的netconf,netconfig,ifconfig,现在的X中gnome的配置程序，kde也有，redhat有个专用的redhat-config-network），程序作者想把它们放在哪里就是哪里，但一定是上面的范围。 humen1 Tech","permalink":"http://www.humen1.com/2008/01/e5-85-b3-e4-ba-8e-redhat9-e7-9a-84-e7-bd-91-e7-bb-9c-e9-85-8d-e7-bd-ae-e6-96-87-e4-bb-b6.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Redhat配置文件介绍","date":"2008/01/25","text":"1./etc/sysconfig/mouse MOUSETYPE=”ps/2” XMOUSETYPE=”PS/2” FULLNAME=”Generic 3 Button Mouse (PS/2)” XEMU3=no 2. /etc/sysconfig/network 网络配置文件 NETWORKING=yes #肯定是YES，不用网络有必要使用LINUX吗？ FORWARD_IPV4=no #IPV4转发，当你的机器作路由器时将此项设为yes HOSTNAME=helius.dlut.edu.cn #主机名 GATEWAY=202.118.66.1 #默认网关（路由器） GATEWAYDEV=eth0 #与默认网关在同一物理网上的网卡逻辑设备名 #对于大多数用户应该是eth0,除非你的机器作路由或有两块以上网卡 3./etc/sysconfig/soundcard # THIS FILE IS WRITTEN BY SNDCONFIG # PLEASE USE SNDCONFIG TO MODIFY # TO CHANGE THIS FILE! # There should be no spaces at the start of a line # or around the ‘=’ sign CARDTYPE=SB32 4. /etc/sysconfig/sendmail sendmail启动参数，具体参数请参考系统启动文件、sendmail文档及FAQ，示例文件内容如下： DAEMON=yes QUEUE=1h 5. /etc/sysconfig/static-routes 静态路由表配置文件，可使用linuxconf或control-pannel配置并生成此文件，格式如下： 网卡逻辑设备名 传送给route命令的参数(不带add) 示例文件格式如下： eth0 net 202.118.68.0 netmask 255.255.252.0 gw 202.118.66.16 eth0 net 202.118.65.0 netmask 255.255.255.0 gw 202.118.66.13 eth0 net 202.199.128.0 netmask 255.255.240.0 gw 202.118.66.253 6. /etc/sysconfig/pcmcia PCMCIA卡配置文件，台式机上不用配置此文件，示例文件内容如下： PCMCIA=no PCIC= PCIC_OPTS= CORE_OPTS= 6. /etc/sysconfig/network-scripts/* 网络配置启动文件及参数配置 ifcfg-* 相应网络接口网络配置，如eth0对应文件ifcfg-eth0,内容如下： #以后为注释，配置文件中不用加 文件ifcfg-eth0 DEVICE=eth0 #此设备名一定要和文件名中的设备名对应，如ifcfg-eth1文件中此 #设备名为eth1 IPADDR=202.118.66.81 #IP地址 NETMASK= 255.255.255.0 #网络屏蔽位，通常为255.255.255.0 NETWORK=202.118.66.0 #网络地址，在网络屏蔽位是255.255.255.0时将IP地址最后 #一位设为0即可 BROADCAST=202.118.66.255#广播地址，在网络屏蔽位是255.255.255.0时将IP地址最后 #一位设为255即可 ONBOOT=yes BOOTPROTO=none 此目录下除ifcfg-之外，还有ifup-，ifdown-*等文件，对于大多数用户而言，这 些文件不用修改。 7. /etc/conf.modules 此文件为内核模块配置文件，系统在启动时从此文件中读取网卡、声卡等设备的配置， 具体说明请参考/usr/doc/HOWTO/下相应的说明文档。 示例文件内容如下： alias eth0 tulip alias sound sb options opl3 io=0x388 alias midi awe_wave post-install awe_wave /usr/bin/sfxload /etc/midi/GU11-ROM.SF2 options sb io=0x220 irq=5 dma=1 dma16=5 mpu_io=0x330 humen1 Tech","permalink":"http://www.humen1.com/2008/01/redhat-e9-85-8d-e7-bd-ae-e6-96-87-e4-bb-b6-e4-bb-8b-e7-bb-8d.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Red Hat Linux配置文件一览","date":"2008/01/25","text":"配置文件是Red Hat Linux管理的一个主要内容.为特定计算机进行的设置,包括用户帐号,网络地址或GUI属性,都保存在纯文本中. 一般情况下,Red Hat Linux系统的配置文件被保存在几个地方,下面是几个主要的地方: 1.$HOME:所有的用户都把信息保存在他们的主目录下,该目录可指导他们的登录帐号操作.大多数的配置文件都用圆点(.)开始,因次使用标准的ls命令(需要键入ls -a查看它), 配置文件不出现在用户的目录中.有定义用户shell行为,桌面外观以及文本编辑器使用的选项的圆点文件,甚至有为每个用户配置网络权限的文件(如.rhosts). 2./etc:这个地方包括许多最基本的Red Hat Linux系统配置文件,这些文件包括: (1)aliases:可以包含由Red Hat Linux邮件服务使用的分布表. (2)bashrc:为bash shell用户设置系统默认值(默认情况下,它可以设置shell提示符,包括当前的用户名,主机名以及当前的目录). (3)crontab:为运行自动任务设置cron环境和次数. (4)csh.cshrc(或cshrc):为csh(C shell)用户设置系统默认值. (5)exports:包含一些本地目录列表,远程计算机可以使用Network File System(网络文件系统,简称NFS)共享这些目录. (6)fdprm:设置供通用软盘格式使用的参数. (7)fstab:识别共用存储媒体用的设备(硬盘,软盘以及光驱)以 及在Linux系统中安装它们的位置.使用mount命令选择要安装哪个文件系统. (8)gettydefs:包含终端设备(调制解调器,终端以及在终端设备上的远程登录)使用的线行定义. (9)group:识别定义在系统上的分组名以及分组ID(GID).Linux中的分组权限由与每个文件以及目录关联的rwx(读,写,执行)三个设置中的第二个来定义. (10)host.conf:设置在TCP/IP网络(如 Internet)上用于搜索域名(如 redhat.com)的位置.默认情况下,搜索本地主文件,然后是resolv.conf中的名字服务器项. (11)hosts:包含可以从计算机中搜索到的IP地址和主机名(通常该文件仅用于保存LAN活更大的私人网络上的计算机名). (12)host.allow:列出允许在本地计算机上使用TCP/IP服务的主计算机. (13)host.deny:列出不允许本地计算机上使用TCP/IP服务的主计算机. (14)xinetd.conf:包含daemon过程中用到的一些简单配置信息.单个服务器的信息都会被放在/etc/xinetd.d目录中. (15)info-dir:包含info命令可用信息的标题. (16)inittab:包含确认哪些程序启动和结束的信息. (17)issue:包含一些登录信息行,这些登录信息行是在终端准备好允许你从本地终端或也文本模式下的控制台中登录到linux时所显示的. (18)issue.net:包含用户使用telnet服务从网络的计算机上登录到Linux系统上所显示出的登录信息行. (19)lilo.conf:设置linux启动加载器(lilo)使用的各种参数来启动Linux系统. (20)mail.rc:设置与使用邮件相关的系统参数. (21)man.config:man命令用来确认man页面位置的默认路径的文件. (22)mtab:包含当前安装的文件系统列表. (23)passwd:为系统的所有合法用户保存帐号信息;也包含其他信息,如主目录和默认shell. (24)profile:设置所有用户使用的系统环境和启动程序,当有用户登录时读取这个文件. (25)printcap:包含打印机配置的定义信息. (26)protocols:设置各种Internet服务用的协议编号和名字. (27)redhat-release:包含识别当前Red Hat 版本号的字符串. (28)resolv.conf:识别DNS名字服务器计算机的位置,TCP/IP用该计算机把Internet host.domain名转换成IP地址. (29)rpc:定义远程过程调用名和编号. (30)rpmfind:包含rpmfind命令所使用配置信息,rpmfind在Internet上搜索RPM软件包的. (31)services:定义TCP/IP服务以及它们的端口分配. (32)shadow:包含定义在passwd文件中的加密口令. (33)shells:列出可用在系统上的shell命令行解释器(bash,sh,csh等). (34)syslog.conf:定义daemon产生的登录信息以及它们被保存在什么文件中.(一般说来,登录信息被保存在/var/log目录下的文件中). (35)termcap:列出供字符终端使用的定义,这样基于字符的应用程序就可以知道给出的终端支持哪些特性. (36)php.ini:Linux系统上的PHP配置文件. (37)ftpaccess:wu-ftp服务器的访问配置文件. (38)vsftpd.conf:vsftp服务的配置文件. 3./etc/X11:包含子目录,而每个子目录又包含RedHat Linux上可用的X以及不同X Window管理程序使用的系统配置文件.XF86Config文件以及配置包含使用xdm以及xinit启动X的文件目录. 4./etc/corn*:这是一组包含定义crond工具运行应用程序文件的目录,运行按每天,每小时,每月和每周来安排. 5./etc/default:包含为各种工具设置默认值的文件.例如,useradd命令所用的文件定义了在创建新用户帐号时说用到的默认分组数,主目录,口令截止日期,shell以及框架目录(/etc/skel). 6./etc/httpd:包含用于配置Apache服务器的文件. 7./etc/init.d:包含运行脚本的永久拷贝.这些脚本与/etc/rc?.d目录中的文件链接. 8./etc/pcmcia:包含使你为计算机配置各种PCMCIA卡的配置文件. 9./etc/ppp:包含用于设置Point-to-Point协议的配置文件(以便使你的计算机能用拨号方式上网). 10./etc/rc?.d:包含几个子目录,每个子目录又包含在系统启动,关闭以及系统状态修改期间直接使程序启动和停止的配置文件. 11./etc/security:包含设置计算机使用的各种默认安全条件的文件. 12./etc/skel:当某个用户增加到系统中时,包含在该目录下的任何文件就被自动复制到该用户的主目录中. 13./etc/xinetd.d:包含一组文件,每个文件定义xinetd守护进程的特殊端口等待的网络服务程序.当xinetd守护进程过程接受请求服务程序时,它使用这些文件的信息来确定用来处理请求的守护程序. humen1 Tech","permalink":"http://www.humen1.com/2008/01/red-hat-linux-e9-85-8d-e7-bd-ae-e6-96-87-e4-bb-b6-e4-b8-80-e8-a7-88.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"SAMBA配置详解","date":"2008/01/17","text":"使用 Linux 和 SAMBA替代Windows NT/2000 服务器 摘要: 这一篇文章提供了以前LinuxFocus 文章关于SAMBA用于在Unix-Windows异构网络共享资源的方案。 特别地，它集中在使用SAMBA运行Windows提供的服务。这不仅是因为Linux强大灵活，还更出于经济考虑的结果: * 极大的节省了购买Windows服务器的许可证费用。* 要达到相似的性能表现，Linux比Windows使用更少的硬件资源（也就是处理器和内存了）。 一个运行SAMBA配置恰当的Linux服务器可以替代Windows NT/2000服务器， 它一般能共享目录, 提供活动目录服务(active directory service ,ADS) 但是它可以做为主域控制器(Primary Domain Controller, PDC), 进行 Windows 2000/NT/98/95 作为客户机的用户认证 ，共享资源（目录和打印机） 和定制用户会话。这篇文章主要集中到这些方面。 许多的计算机环境都以Windows 服务器提供的功能为基础，装有SAMBA的Linux 服务器会在不改变客户机的情况下，替代所有基于Windows系统提供的功能。以下的要讨论的步骤假定：SAMBA已经安装并且运行正确的机器将被用做服务器。读者需要 Linux和Windows服务器的基本的知识。 案例学习 考虑Linux/Samba 服务器作为主域控制器（PDC）, 每个认证过的用户进入 两种共享的目录，一个是公共空间，一个是私人空间。在这篇文章里，讨论一种进 入私人数据空间的极为常见的情况，就是每个用户有一个个人的目录。 要考虑的细节： Linux/Samba NetBIOS 名字:SMBServerWindows 域名(工作组): THEDOMAIN每个用户的私人分区: H: (Windows) =&gt; /home/ (Linux server)公共分区: P: (Windows) =&gt; /home/public 图 1 显示了一个简单的网络示意图，客户机运行Windows系统，使用 Windows NT/2000服务器提供的资源和服务。 这个服务器能被 Linux/SAMBA服务器替代。 Fig. 1 � 在Windows服务器上运行的主域控制器和 文件服务器 配置 遵循以下步骤： 1) 创建要在主域服务器(Linux/Samba)待认证的用户。使用adduser 命令, useradd 或 userconf, 你可以使用一些用户管理的工具，也可以 是带有图形界面的(Webmin，Linuxconf，Yast等). 需要确认如果用户只进入Linux/Samba服务（如果你想）， 这就是说用户不必进入Linux命令行，这样的话只有把home目录设成/dev/null ，命令行设成/bin/false。 2) 把UNIX用户转换成Linux/Samba/Windows用户,生成smbpasswd 文件。 cat /etc/passwd | mksmbpasswd.sh &gt; /etc/samba/smbpasswd 另一个方法是，执行一下的SAMBA命令来创建用户和定义密码： smbaddusersmbpasswd 这些命令和adduser与passwd一样有类似的作用。 3) 编辑SAMBA的配置文件（smb.conf）， 你要确定加入或减去下列标有comment的可选项： netbios name = SMBServerworkgroup = THEDOMAINserver string = Linux Samba NT Serverlog file = /var/log/samba/%m.logmax log file = 0security = userencrypt password = yessmb password file = /etc/samba/smbpasswdssl CA certificate = /usr/share/ssl/…. (cancel comment)socket options = (cancel comment)local master = yespreferred master = yesdomain master = yesdomain logons = yeslogon script = logon.batwins support = yes 注意：做为每一个用户的特有的登陆(login)， 需要使用”%U.bat”文件替换 原先的”登陆描述”(login script)。这样每一个用户都有一个的带有自 己用户名的”登陆描述”， %u 也是可以使用的. 如果你想定义用户属于 那个组，你可以使用 %g或%G，这些参数和其他参数的定义可以在手册 中找到。(man smb.conf) 4) 创建共享资源编辑smb.conf 文件 并注释所有的”共享”的例子，加入以下 的信息，如果没有必要的话，不用更改： [netlogon]comment = Initialization Scriptspath = /home/netlogonread only = yesguest ok = yesbrowseable = no [home]comment = User Directorypath = /home/%Ubrowseable = yeswritable = yes [public]comment = Public Directorypath = /home/publicbrowseable = yeswritable = yesguest ok = yescreate mask = 0777force create mask = 0777 保存smb.conf 文件。 5) 你可以使用如下的命令来验证smb.conf是否正确： testparm 这些命令分析smb.conf 文件并报告发现的错误。 6) 分别使用权限0754和0777 创建/home/netlogon 和/home/public目录。 7) 编辑logon描述文件logon.bat。重要提示: 使用DOS/Windows文字编辑器 （比如Notepad或Edit）来创建logon.bat文件 （所以保存的文本文件是微软兼容的形式），你也可以在Linux上做这件事但是你必须转换成正确的文本形式。 你可以使用比如 Vim的命令”:set textmode”得到有微软行结尾符的文件。 net time SMBServer /y (you can also use: /yes instead of /y )net use H: SMBServerhome -y (you can also use: /yes or /y instead of -y )net use P: SMBServerpublic -y 8) 加入SMBServer信息到lmhosts文件中。编辑/etc/samba/lmhosts 文件后 /etc/lmhosts)文件并且 加入关于SMBServer信息的一行。 SMB服务器, 比如: 192.168.0.10 SMBServer 9) 重启动SAMBA的后台程序（smbd）。 service smb restart 如果在你的Linux版本中上面的命令不工作，你可以使用如下命令：ps -auxgx | grep smbkill -9smbd 10) 使用smbclient来验证以上的配置是正确的。 smbclient -L //SMBServer 如果”Password:”显示出来, 按”Enter” 键，服务器的共享的 资源会显示出来。 11) 使用Windows 95/98/NT 计算机在域THEDOMAIN中进行客户登陆， 使用Linux/Samba创建的用户（看步骤1和2）。 在95/98/ME中, 配置可以按照一下的顺序： 开始 =&gt; 设置 =&gt; 控制面板=&gt; 网络 =&gt;微软网络客户 =&gt; 属性。 Windows NT/2000（工作站/专业版）中也是类似的用法， 可能顺序不是一样。 单击选项”Start session in Windows NT/2000 domain” 并写下域名 THEDOMAIN (WORKGROUP)。 一个配置文件的实例 一个完整的SAMBA配置文件罗列如下，这个文件在不通的Linux分发版本中测试通过。 读者可以修改它以达到自己想要的结果。其中每条指令都被恰当的注释。 最后，给那些","permalink":"http://www.humen1.com/2008/01/samba-e9-85-8d-e7-bd-ae-e8-af-a6-e8-a7-a3.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"FlashMediaServer安装篇","date":"2008/01/16","text":"FlashMediaServer安装篇1、下载fms2安装程序，点击下载http://www.flashcom.com.cn/tools/FlashMediaServer2.tar.gz2、安装： tar zxvf FlashMediaServer2.tar.gz cd FMS_2_0_1_r27_linux ./installFMS -platformWarnOnly 说明：-platformWarnOnly，忽略安装平台，因为有些系统会安装不了，所以这个一定要加上。执行安装程序后会有些类似于同意条款之类的东西，直接ctrl+c就得，然后需要填写一些配置，一般默认就可以，我填的是这样的： Installation directory = /opt/macromedia/fms //安装目录 FMS Server Port = 1935 //服务端口FMS Admin Server Port = 1111 //管理端口 Administrative username = yingzi //管理员 Administrative password = (suppressed) //管理员密码 FMS owner = root FMS service user = root FMS service user group = root FMS run as daemon = YesStart FMS = Yes 3、启动和停止 启动： ./fmsmgr server fms start ./fmsmgr adminserver start 停止： ./fmsmgr server fms stop ./fmsmgr adminserver stop humen1 Tech","permalink":"http://www.humen1.com/2008/01/flashmediaserver-e5-ae-89-e8-a3-85-e7-af-87.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"基于Apache Mod_proxy的反向代理缓存加速实现","date":"2008/01/11","text":"Apache包含了mod_proxy模块，可以用来实现代理服务器，针对后台服务器的反向加速 安装apache 1.3.x 编译时： –enable-shared=max –enable-module=most 注：Apache 2.x中mod_proxy已经被分离成mod_proxy和mod_cache：同时mod_cache有基于文件和基于内存的不同实现 创建/var/www/proxy，设置apache服务所用户可写 mod_proxy配置样例：反相代理缓存＋缓存 架设前台的www.example.com反向代理后台的www.backend.com的8080端口服务。 修改：httpd.conf ServerName www.example.com ServerAdmin admin@example.com # reverse proxy setting ProxyPass / http://www.backend.com:8080/ ProxyPassReverse / http://www.backend.com:8080/ # cache dir root CacheRoot “/var/www/proxy” # max cache storage CacheSize 50000000 # hour: every 4 hour CacheGcInterval 4 bitsCN_com # max page expire time: hour CacheMaxExpire 240 # Expire time = (now - last_modified) * CacheLastModifiedFactor CacheLastModifiedFactor 0.1 # defalt expire tag: hour CacheDefaultExpire 1 # force complete after precent of content retrived: 60-90% CacheForceCompletion 80 CustomLog /usr/local/apache/logs/dev_access_log combined 基于Squid的反向代理加速实现 Squid是一个更专用的代理服务器，性能和效率会比Apache的mod_proxy高很多。 如果需要combined格式日志补丁： http://www.squid-cache.org/mail-archive/squid-dev/200301/0164.html squid的编译： ./configure –enable-useragent-log –enable-referer-log –enable-default-err-language=Simplify_Chinese –enable-err-languages=”Simplify_Chinese English” –disable-internal-dns make #make install #cd /usr/local/squid make dir cache chown squid.squid * vi /usr/local/squid/etc/squid.conf 中国网管论坛 在/etc/hosts中：加入内部的DNS解析，比如： 192.168.0.4 [url]www.chedong.com\\[/url\\] 192.168.0.4 news.chedong.com 192.168.0.3 bbs.chedong.com ———————cut here———————————- # visible name visible_hostname cache.example.com # cache config: space use 1G and memory use 256M cache_dir ufs /usr/local/squid/cache 1024 16 256 cache_mem 256 MB cache_effective_user squid cache_effective_group squid http_port 80 httpd_accel_host virtual httpd_accel_single_host off httpd_accel_port 80 httpd_accel_uses_host_header on httpd_accel_with_proxy on # accelerater my domain only acl acceleratedHostA dstdomain .example1.com acl acceleratedHostB dstdomain .example2.com acl acceleratedHostC dstdomain .example3.com # accelerater http protocol on port 80 acl acceleratedProtocol protocol HTTP acl acceleratedPort port 80 # access arc 中国网管联盟 acl all src 0.0.0.0/0.0.0.0 # Allow requests when they are to the accelerated machine AND to the # right port with right protocol http_access allow acceleratedProtocol acceleratedPort acceleratedHostA http_access allow acceleratedProtocol acceleratedPort acceleratedHostB http_access allow acceleratedProtocol acceleratedPort acceleratedHostC # logging emulate_httpd_log on cache_store_log none # manager acl manager proto cache_object http_access allow manager all cachemgr_passwd pass all ———————-cut here——————————— 创建缓存目录： /usr/local/squid/sbin/squid -z 启动squid /usr/local/squid/sbin/squid 停止squid： /usr/local/squid/sbin/squid -k shutdown 启用新配置： /usr/local/squid/sbin/squid -k reconfig 通过crontab每天0点截断/轮循日志： 0 0 * * * (/usr/local/squid/sbin/squid -k rotate) 附：SQUID性能测试试验 bitscn.com phpMan.php是一个基于php的man page server，每个man page需要调用后台的man命令和很多页面格式化工具，系统负载比较高，提供了Cache Friendly的URL，以下是针对同样的页面的性能测试资料： 测试环境：Redhat 8 on Cyrix 266 / 192M Mem 测试程序：使用apache的ab(apache benchmark)： 测试条件：请求50次，并发50个连接 测试项目：直接通过apache 1.3 (80端口) vs squid 2.5(8000端口：加速80端口) 测试1：无CACHE的80端口动态输出： ab -n 100 -c 10 [url]http://www.chedong.com:81/phpMan.php/man/kill/1\\[/url\\] This is ApacheBench, Version 1.3d &lt;$Revision: 1.2 $&gt; apache-1.3 Copyright (c) 1996 Adam Twiss, Zeus Technology Ltd, [url]http://www.zeustech.net/\\[/url\\] Copyright (c) 1998-2001 The Apache Group, [url]http://www.apache.org/\\[/url\\] Benchmarking localhost (be patient)…..done Server Software: Apache/1.3.23 Server Hostname: localhost Server Port: BBS.bitsCN.com网管论坛 80 Document Path: /phpMan.php/man/kill/1 Document Length: 4655 bytes Concurrency Level: 5 Time taken for tests: 63.164 seconds Complete requests: 50 Failed requests: 0 Broken pipe errors: 0 Total transferred: 245900 bytes HTML transferred: 232750 bytes Requests per second: 0.79 [#/sec] (mean) Time per request: 6316.40 [ms] (mean) Time per request: 1263.28 [ms] (mean, across all concurrent requests) Transfer rate: 3.89 [Kbytes/sec] received Connnection Times (ms) min mean[+/-sd] median max Connect: 0 29 106.1 0 553 Processing: 2942 6016 1845.4 6227 10796 Waiting: 2941 5999 1850.7 6226 10795 Total: 2942 6045 1825.9 6227 10796 Percentage of the requests served within a certain time (ms) bitsCN.Com 50% 6227 66% 706 9 75% 7190 80% 7474 90% 8195 95% 8898 98% 9721 99% 10796 100% 10796 (last request) 测试2：SQUID缓存输出 /home/apache/bin/ab -n50 -c5 “http://localhost:8000/phpMan.php/man/kill/1“ This is ApacheBench, Version 1.3d &lt;$Revision: 1.2 $&gt; apache-1.3 Copyright (c) 1996 Adam Twiss, Zeus Technology Ltd, [url]http://www.zeustech.net/\\[/url\\] Copyright (c) 1998-2001 The Apache Group, [url]http://www.apache.org/\\[/url\\] Benchmarking localhost (be patient)…..done Server Software: Apache/1.3.23 Server Hostname: localhost Server Port: 8000 Document Path: /phpMan.php/man/kill/1 Document Length: 4655 bytes Concurrency Level: 5 Time taken for tests: 4.265 seconds Complete requests: 50 bitsCN.nET中国网管博客 Failed requests: 0 Broken pipe errors: 0 Total transferred: 248043 bytes HTML transferred: 232750 bytes Requests per second: 11.72 [#/sec] (mean) Time per request: 426.50 [ms] (mean) Time per request: 85.30 [ms] (mean, across all concurrent requests) Transfer rate: 58.16 [Kbytes/sec] received Connnection Times (ms) min mean[+/-sd] median max Connect: 0 1 9.5 0 68 Processing: 7 83 537.4 7 3808 Waiting: 5 81 529.1 6 3748 Total: 7 84 547.0 7 3876 Perce humen1 Tech","permalink":"http://www.humen1.com/2008/01/e5-9f-ba-e4-ba-8eapache-mod-proxy-e7-9a-84-e5-8f-8d-e5-90-91-e4-bb-a3-e7-90-86-e7-bc-93-e5-ad-98-e5-8a-a0-e9-80-9f-e5-ae-9e-e7-8e-b0.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Windows Xp 删除服务","date":"2008/01/09","text":"在”开始→运行”中键入”ｒｅｇｅｄｉｔ．ｅｘｅ”，打开”注册表编辑器”，展开分支”ＨＫＥＹ＿ＬＯＣＡＬ＿ＭＡＣＨＩＮＥ＼ＳＹＳＴＥＭ＼ＣｕｒｒｅｎｔＣｏｎｔｒｏｌＳｅｔ＼Ｓｅｒｖｉｃｅｓ”，在右侧窗格中显示的就是本机安装的服务项。可以直接删 humen1 Tech","permalink":"http://www.humen1.com/2008/01/windows-xp-e5-88-a0-e9-99-a4-e6-9c-8d-e5-8a-a1.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"安装Pdo扩展 for freebsd6.2 Php5","date":"2007/12/29","text":"*php5-extensions ZLIB PDO 这两项选中 对mysql的链接驱动 #/usr/ports/databases/php5-pdo_mysql #make install clean restart apache humen1 Tech","permalink":"http://www.humen1.com/2007/12/e5-ae-89-e8-a3-85pdo-e6-89-a9-e5-b1-95-for-freebsd6-2-php5.html","photos":[]},{"tags":[],"title":"为什么要使用PDO进行PHP程序开发？","date":"2007/12/29","text":"先来看看PHP MANUAL对PDO的定义。[原文]The PHP Data Objects (PDO) extension defines a lightweight, consistent interface for accessing databases in PHP. Each database driver that implements the PDO interface can expose database-specific features as regular extension functions. Note that you cannot perform any database functions using the PDO extension by itself; you must use a database-specific PDO driver to access a database server. PDO provides a data-access abstraction layer, which means that, regardless of which database you’re using, you use the same functions to issue queries and fetch data. PDO does not provide a database abstraction; it doesn’t rewrite SQL or emulate missing features. You should use a full-blown abstraction layer if you need that facility.[译文]PDO扩展为PHP定义了一个访问数据库的轻量的，持久的接口。实现了PDO接口的每一种数据库驱动都能以正则扩展的形式把他们各自的特色表现出来。注意；利用PDO扩展本身并不能实现任何数据库函数。你必须使用一个特定的数据库PDO驱动去访问数据库。PDO提供了一个数据访问抽象层，这就意味着，不管你使用的是哪种数据库，你都可以用同样的函数去进行查询的获取数据。PDO并不提供数据提取，它不会重写SQL语句，或者模仿这些 功能。你需要使用一个成熟的提取层，如果你需要的话。 怎么样，是不是看了译文就有一种恍然大悟的感觉了？没有？那说的再详细点。我们为什么要使用PDO？1、更换数据库时取得极大便利在PHP4/3时代，PHP要利用php_mysql.dll、php_pgsql.dll、php_mssql.dll、php_sqlite.dll等等扩展来连接MySQL、PostgreSQL、MS SQL Server、SQLite，这其实也没什么。也就是在配置时多添句话就行了。可怕的是，这些扩展和各自对应的数据库打交道时，他们各自的函数有很多是不一样的。比如：PHP利用libmysql.dll和MYSQL打交道时，如果要从数据表中提取数据作为关联数组，用的是mysql_fetch_accoc，而如果要从postgre数据库取得同样的结果，你就不得不用pg_fetch_assoc。很简单的例子说明了很重要的问题，假如你要更换数据库类型，比如从MYSQL更换成POSTGRE，你就不得把你所有和数据库有关的程序都改一遍。这时候，你应该会明白，为什么我不用PDO？？2、极大提高程序运行效率针对上面的情况，也许你会说，我可以使用ADODB(LITE)，PEAR::db来实现对不同类型数据库函数的封装啊。这样子，即使我更换数据库，也不需要修改程序。答：php代码的效率怎么能够和直接用C/C++写的扩展效率比较呢？根本不是一个数量级的。OK，从现在开始用PDO进行你的开发吧。 humen1 Tech","permalink":"http://www.humen1.com/2007/12/e4-b8-ba-e4-bb-80-e4-b9-88-e8-a6-81-e4-bd-bf-e7-94-a8pdo-e8-bf-9b-e8-a1-8cphp-e7-a8-8b-e5-ba-8f-e5-bc-80-e5-8f-91-ef-bc-9f.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"Mysql 优化","date":"2007/12/27","text":"一、我们可以且应该优化什么？ 硬件 操作系统/软件库 SQL服务器(设置和查询) 应用编程接口(API) 应用程序 -------------------------------------------------------------------------------- 二、优化硬件 如果你需要庞大的数据库表(&gt;2G)，你应该考虑使用64位的硬件结构，像Alpha、Sparc或即将推出的IA64。因为MySQL内部使用大量64位的整数，64位的CPU将提供更好的性能。 对大数据库，优化的次序一般是RAM、快速硬盘、CPU能力。 更多的内存通过将最常用的键码页面存放在内存中可以加速键码的更新。 如果不使用事务安全(transaction-safe)的表或有大表并且想避免长文件检查，一台UPS就能够在电源故障时让系统安全关闭。 对于数据库存放在一个专用服务器的系统，应该考虑1G的以太网。延迟与吞吐量同样重要。 -------------------------------------------------------------------------------- 三、优化磁盘 为系统、程序和临时文件配备一个专用磁盘，如果确是进行很多修改工作，将更新日志和事务日志放在专用磁盘上。低 寻道时间对数据库磁盘非常重要。对与大表，你可以估计你将需要log(行数)/log(索引块长度/3*2/(键码长度 + 数据指针长度))+1次寻到才能找到一行。对于有500000行的表，索引Mediun int类型的列，需要log(500000) / log(1024/3*2/(3 + 2))+1=4次寻道。上述索引需要500000*7*3/2= 5.2M的空间。实际上，大多数块将被缓存，所以大概只需要1-2次寻道。然而对于写入（如上），你将需要4次寻道请求来找到在哪里存放新键码，而且一般要2次寻道来更新索引并写入一行。对于非常大的数据库，你的应用将受到磁盘寻道速度的限制，随着数据量的增加呈N log N数据级递增。将数据库和表分在不同的磁盘上。在MySQL中，你可以为此而使用符号链接。条列磁盘(RAID 0)将提高读和写的吞吐量。带镜像的条列(RAID 0+1)将更安全并提高读取的吞吐量。写入的吞吐量将有所降低。不要对临时文件或可以很容易地重建的数据所在的磁盘使用镜像或RAID(除了RAID 0)。在Linux上，在引导时对磁盘使用命令hdparm -m16 -d1以启用同时读写多个扇区和DMA功能。这可以将响应时间提高5~50%。在Linux上，用async (默认)和noatime挂载磁盘(mount)。对于某些特定应用，可以对某些特定表使用内存磁盘，但通常不需要。 -------------------------------------------------------------------------------- 四、优化操作系统 不要交换区。如果内存不足，增加更多的内存或配置你的系统使用较少内存。不要使用NFS磁盘(会有NFS锁定的问题)。增加系统和MySQL服务器的打开文件数量。(在safe_mysqld脚本中加入ulimit -n #)。增加系统的进程和线程数量。如果你有相对较少的大表，告诉文件系统不要将文件打碎在不同的磁道上(Solaris)。使用支持大文件的文件系统(Solaris)。选择使用哪种文件系统。在Linux上的Reiserfs对于打开、读写都非常快。文件检查只需几秒种。 -------------------------------------------------------------------------------- 五、选择应用编程接口 PERL可在不同的操作系统和数据库之间移植。适宜快速原型。应该使用DBI/DBD接口。PHP比PERL易学。使用比PERL少的资源。通过升级到PHP4可以获得更快的速度。CMySQL的原生接口。较快并赋予更多的控制。低层，所以必须付出更多。C++较高层次，给你更多的时间来编写应用。仍在开发中ODBC运行在Windows和Unix上。几乎可在不同的SQL服务器间移植。较慢。MyODBC只是简单的直通驱动程序，比用原生接口慢19%。有很多方法做同样的事。很难像很多ODBC驱动程序那样运行，在不同的领域还有不同的错误。问题成堆。Microsoft偶尔还会改变接口。不明朗的未来。(Microsoft更推崇OLE而非ODBC)ODBC运行在Windows和Unix上。几乎可在不同的SQL服务器间移植。较慢。MyODBC只是简单的直通驱动程序，比用原生接口慢19%。有很多方法做同样的事。很难像很多ODBC驱动程序那样运行，在不同的领域还有不同的错误。问题成堆。Microsoft偶尔还会改变接口。不明朗的未来。(Microsoft更推崇OLE而非ODBC)JDBC理论上可在不同的操作系统何时据库间移植。可以运行在web客户端。Python和其他可能不错，可我们不用它们。 -------------------------------------------------------------------------------- 六、优化应用 应该集中精力解决问题。在编写应用时，应该决定什么是最重要的：速度操作系统间的可移植性SQL服务器间的可移植性使用持续的连接。.缓存应用中的数据以减少SQL服务器的负载。不要查询应用中不需要的列。不要使用SELECT * FROM table_name…测试应用的所有部分，但将大部分精力放在在可能最坏的合理的负载下的测试整体应用。通过以一种模块化的方式进行，你应该能用一个快速”哑模块”替代找到的瓶颈，然后很容易地标出下一个瓶颈。如果在一个批处理中进行大量修改，使用LOCK TABLES。例如将多个UPDATES或DELETES集中在一起。 -------------------------------------------------------------------------------- 七、应该使用可移植的应用 Perl DBI/DBDODBCJDBCPython(或其他有普遍SQL接口的语言)你应该只使用存在于所有目的SQL服务器中或可以很容易地用其他构造模拟的SQL构造。www.mysql.com上的Crash-me页可以帮助你。为操作系统/SQL服务器编写包装程序来提供缺少的功能。 -------------------------------------------------------------------------------- 八、如果你需要更快的速度，你应该： 找出瓶颈(CPU、磁盘、内存、SQL服务器、操作系统、API或应用)并集中全力解决。使用给予你更快速度/灵活性的扩展。逐渐了解SQL服务器以便能为你的问题使用可能最快的SQL构造并避免瓶颈。优化表布局和查询。使用复制以获得更快的选择(select)速度。如果你有一个慢速的网络连接数据库，使用压缩客户/服务器协议。不要害怕时应用的第一个版本不能完美地移植，在你解决问题时，你总是可以在以后优化它。 -------------------------------------------------------------------------------- 九、优化MySQL 挑选编译器和编译选项。位你的系统寻找最好的启动选项。通读MySQL参考手册并阅读Paul DuBios的《MySQL》一书。(已有中文版-译注)多用EXPLAIN SELECT、SHOW VARIABLES、SHOW STATUS和SHOW PROCESSLIST。了解查询优化器的工作原理。优化表的格式。维护你的表(myisamchk、CHECK TABLE、 OPTIMIZE TABLE)使用MySQL的扩展功能以让一切快速完成。如果你注意到了你将在很多场合需要某些函数，编写MySQL UDF函数。不要使用表级或列级的GRANT，除非你确实需要。购买MySQL技术支持以帮助你解决问题:) -------------------------------------------------------------------------------- 十、编译和安装MySQL 通过位你的系统挑选可能最好的","permalink":"http://www.humen1.com/2007/12/mysql-e4-bc-98-e5-8c-96.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"查看硬件信息[Freebsd]","date":"2007/12/27","text":"less /var/run/dmesg.boot humen1 Tech","permalink":"http://www.humen1.com/2007/12/e6-9f-a5-e7-9c-8b-e7-a1-ac-e4-bb-b6-e4-bf-a1-e6-81-affreebsd.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Apache压力测试","date":"2007/12/27","text":"测试脚本index.php内容为：phpinfo();?&gt;; 用10000个连接，200个并发连接测试： ab -n 10000 -c 200 http://localhost/index.php humen1 Tech","permalink":"http://www.humen1.com/2007/12/apache-e5-8e-8b-e5-8a-9b-e6-b5-8b-e8-af-95.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"设定Mysql Root密码","date":"2007/12/26","text":"ports安装好的mysql的root用户密码为空 这个时候 #mysqladmin -u root -p password mypasswd 这样你的密码就变成mypasswd 了 humen1 Tech","permalink":"http://www.humen1.com/2007/12/e8-ae-be-e5-ae-9amysql-root-e5-af-86-e7-a0-81.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Redhat下修改主机名","date":"2007/12/26","text":"#vi /etc/hosts 修改主机名#vi /etc/sysconfig/network，修改HOSTNAME一行为”HOSTNAME=主机名”(没有这行？那就添加这一行吧)，然后运行命令” hostname 主机名”。reboot humen1 Tech","permalink":"http://www.humen1.com/2007/12/redhat-e4-b8-8b-e4-bf-ae-e6-94-b9-e4-b8-bb-e6-9c-ba-e5-90-8d.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"AMFPHP 1.9 中文乱码问题解决方法","date":"2007/12/26","text":"AMFPHP 1.9 中文乱码问题解决方法修改gateway.php里边的$gateway-&gt;setCharsetHandler(“utf8_decode”, “ISO-8859-1”, “ISO-8859-1”);为$gateway-&gt;setCharsetHandler( “mbstring”, “gb2312”, “gb2312” ); humen1 Tech","permalink":"http://www.humen1.com/2007/12/amfphp-1-9-e4-b8-ad-e6-96-87-e4-b9-b1-e7-a0-81-e9-97-ae-e9-a2-98-e8-a7-a3-e5-86-b3-e6-96-b9-e6-b3-95.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"FreeBSD 下安装Samba","date":"2007/12/25","text":"在FreeBSD 下安装Samba 1. Samba 安装 ----------------- Samba有二进制安装的版本, 也有源代码安装版本. 我用的系统是FreeBSD, Samba的二进制安装并不支持FreeBSD. 所以, 我就选择了源代码安装方式. 我使用的samba版本是 samba-3.0.21a.tar.gz shell&gt; tar zxvf samba-3.0.21a.tar.gz shell&gt; cd samba-3.0.21a/source shell&gt; ./configure shell&gt; make shell&gt; make install shell&gt; cp ../examples/smb.conf.default /usr/local/samba/lib/smb.conf 2. 创建用户 ------------- 这里我不得不说一句,目前我还没看到网上有任何一篇文章仔细地解释samba的用户关系问题! 不厚道啊~~ 我是摸索了好久才得出以下认识的: (1)samba用户管理使用smbpasswd和pdbedit命令 (2)samba认证使用的用户和组首先要在本地系统中存在 (3)samba只存储独立于本地系统的用户和口令信息,组则使用本地系统的组信息首先在本地系统中创建用户user1和user2, 创建组group1和group2, user1属于group1, user2属于group2. 然后再创建samba用户: shell&gt; /usr/local/samba/bin/smbpasswd -a user1 New SMB password:Retype new SMB password: shell&gt; /usr/local/samba/bin/smbpasswd -a user2 New SMB password:Retype new SMB password: 如果失败,则可能是本地系统没有事先建立同名帐号. 可以使用pdbedit -L列出现有samba用户清单, 如果清单中有新加入的用户名, 则说明用户 创建成功. 3. 配置Samba ----------------- shell&gt; vi /usr/local/samba/lib/smb.conf 下面是我实际搭建环境中的一个实例: ----------------------------------- # Samba config file created using SWAT# from 10.217.15.133 (10.217.15.133)# Date: 2006/01/05 09:42:54 [global] workgroup = MYGROUP netbios name = SINA-NFS server string = Sina NFS log file = /usr/local/samba/var/log-%M-%I max log size = 50 load printers = No dns proxy = No [it] path = /data1/it valid users = @group1, @group2 read list = @group1, @group2 write list = @group1, @group2 [driver] path = /data2/driver write list = @group1 guest ok = Yes [software] path = /data2/software write list = @group1 guest ok = Yes [patch] path = /data2/patch write list = @group1 guest ok = Yes 以上是通过SWAT配置后生成的最终配置文件,但实际上我手工配置时还在global部分加入了: security = user encrypt passwords = yes smb passwd file = /usr/local/samba/private/smbpasswd 那上面配置要实现的目的是: (1)所有用户都可以看到(browseable)共享目录it,driver,software,patch; (2)group1的用户对共享目录it,driver,software,patch有读写权限; (3)group2的用户对共享目录it有读写权限,对共享目录driver,software,patch只读; (4)非group1和group2的用户对共享目录driver,software,patch只读,对共享目录it无读写权限; 4.设置共享目录权限 --------------------- shell&gt; chmod -R 0777 /data1/it shell&gt; chmod -R 0777 /data2/driver shell&gt; chmod -R 0777 /data2/patch shell&gt; chmod -R 0777 /data2/software 5.启动samba --------------- /usr/local/samba/sbin/smbd -D &amp; /usr/local/samba/sbin/nmbd -D &amp; 6.自动运行samba ------------------ 有两种方法: (1)在/etc/rc.local加入以下内容: /usr/local/samba/sbin/smbd -D &amp; /usr/local/samba/sbin/nmbd -D &amp; (2)在/etc/inetd.conf中加入以下内容: netbios-ssn stream tcp nowait root /usr/local/samba/sbin/smbd -D smbdnetbios-ns dgram udp wait root /usr/local/samba/sbin/nmbd -D nmbdswat stream tcp nowait/400 root /usr/local/samba/sbin/swat swat 第二种方法要保证inetd正常运行. 7.SWAT管理 ------------- 默认情况下SWAT已被安装. 我试过通过执行/usr/local/samba/sbin/swat启动SWAT没有成功, 只有通过inetd.conf才可以成功启动. 启动成功后可以通过http://samba_server_ip:901/访问SWAT管理页面. 默认情况, SWAT使用本地系统的root用户作为管理帐号. 注意, 是系统用户, 不是samba的共享用户. 8.检查服务是否正常 --------------------- 通过netstat -an看到服务端口已处理监听状态: tcp4 0 0 .901 *. LISTENtcp4 0 0 .139 *. LISTENudp4 0 0 10.0.0.38.138 .udp4 0 0 10.0.0.38.137 . udp4 0 0 .138 *. udp4 0 0 .137 *. 9.小技巧 ------------- (1)如何在一个共享目录中嵌入其它目录 有时我们需要使用多块磁盘, 那经常变更目录或更换磁盘非常麻烦, 我还不了解在samba中如何 使用多个磁盘支持同一共享目录. 所以, 我使用的方法是: *在已有共享目录中建立一个到其它磁盘的链接.*假设我要在共享目录it下建立一个到磁盘/data3上的目录iso的链接, 那么需要进行以下操作: shell&gt; cd /data1/it shell&gt; ln -s /data3/iso iso shell&gt; chmod -R 0777 /data3/iso humen1 Tech","permalink":"http://www.humen1.com/2007/12/freebsd-e4-b8-8b-e5-ae-89-e8-a3-85samba.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Scp(ssh文件复制)[freebsd]","date":"2007/12/24","text":"SSH提供了一些命令和shell用来登录远程服务器。在默认情况下它不允许你拷贝文件，但是还是提供了一个”scp”命令。上传：scp 源文件 用户名＠主机：目的文件名。scp －r 原文件夹 用户名＠主机：目的文件夹。下载：scp 用户名＠主机：／path／文件名 ／path／文件名。 humen1 Tech","permalink":"http://www.humen1.com/2007/12/scpssh-e6-96-87-e4-bb-b6-e5-a4-8d-e5-88-b6freebsd.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"sendmail.群发[freebsd]","date":"2007/12/24","text":"今天弄清了怎么实现群发功能，设置一个 all@domain.com的邮箱地址当向这个地址发送邮件时可以发送给指定用户 在sendmail的设置文件里有这样一支/etc/mail/aliases 我们vi它 最后+上 all: xxx@domain.com,xxx1@domain.com 保存 #makemap hash /etc/mail/aliases.db &lt; /etc/mail/aliases 好了！！ humen1 Tech","permalink":"http://www.humen1.com/2007/12/sendmail-e7-be-a4-e5-8f-91freebsd.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Redhat忘记密码了！！！","date":"2007/12/21","text":"默认的引导装载程序 GRUB ！在引导装载程序菜单上，键入 [e] 来进入编辑模式。 你会面对一个引导项目列表。查找其中类似以下输出的那一行： kernel /vmlinuz-2.4.18-0.4 ro root=/dev/hda2 按箭头键直到这一行被突出显示，然后按 [e] 。 按一下空格键来添加一个空格，然后添加 single 来通知 GRUB 引导单用户 Linux 模式。按 [Enter] 键来使编辑结果生效。 你会被带回编辑模式屏幕，从这里，按 [b] ，GRUB 就会引导单用户 Linux 模式。载入结束后，你会面对一个类似以下的 shell 提示： sh-2.05# 现在，你便可以改变root命令，键入： sh-2.05# passwd root 你会被要求重新键入口令来校验。结束后，口令就会被改变，你便可以在提示下键入 reboot 来重新引导；然后，象平常一样登录为根用户。 humen1 Tech","permalink":"http://www.humen1.com/2007/12/redhat-e5-bf-98-e8-ae-b0-e5-af-86-e7-a0-81-e4-ba-86-ef-bc-81-ef-bc-81-ef-bc-81.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Cvsup资源 - 中国[Freebsd]","date":"2007/12/21","text":"用之前先ping一下看看速度！！！ 中国大陆 cvsup.cn.FreeBSD.org cvsup2.cn.FreeBSD.org cvsup3.cn.FreeBSD.org cvsup4.cn.FreeBSD.org cvsup5.cn.FreeBSD.org 非官方： cvsup.FreeBSDChina.orgcvsup2.FreeBSDChina.orgcvsup3.FreeBSDChina.orgcvsup4.FreeBSDChina.orgcvsup5.FreeBSDChina.org 中国台湾 cvsup.tw.FreeBSD.org cvsup3.tw.FreeBSD.org cvsup4.tw.FreeBSD.org cvsup5.tw.FreeBSD.org cvsup6.tw.FreeBSD.org cvsup7.tw.FreeBSD.org cvsup8.tw.FreeBSD.org cvsup9.tw.FreeBSD.org cvsup10.tw.FreeBSD.org cvsup11.tw.FreeBSD.org cvsup12.tw.FreeBSD.org cvsup13.tw.FreeBSD.org cvsup14.tw.FreeBSD.org humen1 Tech","permalink":"http://www.humen1.com/2007/12/cvsup-e8-b5-84-e6-ba-90-e4-b8-ad-e5-9b-bdfreebsd.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Freebsd 安装 一个老机车的插曲","date":"2007/12/21","text":"公司有一台hp的迷你机，光驱是笔记本光驱接口，只有一个ide。于是我在这个ide口上接了一个cd一个hdd准备安装bsd 安装好之后去掉cd发现原来此机器不能用bios来选择先启动的设备，只能按主-从 启动。。。装的时候cd当然是master了，于是hdd就被判为了ad1(从盘)。cd一去掉bsd启动不起了，原因是 /etc/fstab里记录的ad1***都不存在了！！hdd现在变成了master也就是ad0 于是我就进单用户想编辑/etc/fstab。。。郁闷的是我也不知道咋的他就成了只读模式了，还不让我改！！！ 逼不得已我拆下硬盘接到了另外一个我已经装好了的bsd下。 然后 先check一下是否读到 #dmesg|grep adFreeBSD is a registered trademark of The FreeBSD Foundation.xl0: Ethernet address: 00:b0:d0:bc:9d:ceuhub0: Intel UHCI root hub, class 9/0, rev 1.00/1.00, addr 1uhub1: Intel UHCI root hub, class 9/0, rev 1.00/1.00, addr 1ad0: DMA limited to UDMA33, controller found non-ATA66 cablead0: 14324MB at ata0-master UDMA33ad1: DMA limited to UDMA33, controller found non-ATA66 cablead1: 14594MB at ata0-slave UDMA33 看到了ad1那就是了 # fsck ad1 ** /dev/ad1s1a** Last Mounted on /mnt** Phase 1 - Check Blocks and Sizes** Phase 2 - Check Pathnames** Phase 3 - Check Connectivity** Phase 4 - Check Reference Counts** Phase 5 - Check Cyl groups1045 files, 18408 used, 235407 free (1783 frags, 29203 blocks, 0.7% fragmentation) ***** FILE SYSTEM MARKED CLEAN *****# mount -rw /dev/ad1s1a /disc2#cd /disc2/etc #ee fstab # Device Mountpoint FStype Options Dump Pass#/dev/ad0s1b none swap sw 0 0/dev/ad0s1a / ufs rw 1 1/dev/ad0s2f /data ufs rw 2 2/dev/ad0s2e /tmp ufs rw 2 2/dev/ad0s2g /usr ufs rw 2 2/dev/ad0s2d /var ufs rw 2 2/dev/acd0 /cdrom cd9660 ro,noauto 0 0 将Device列全改成ad0 保存退出关机卸硬盘 装到那台机车机器上一看。。。。oh yeah 起来了！！ humen1 Tech","permalink":"http://www.humen1.com/2007/12/freebsd-e5-ae-89-e8-a3-85-e4-b8-80-e4-b8-aa-e8-80-81-e6-9c-ba-e8-bd-a6-e7-9a-84-e6-8f-92-e6-9b-b2.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Eclipse 安装Pdt","date":"2007/12/20","text":"安装PDT如果决定不使用Xdebug for PDT的话，那么在这里就可以采用自订的线上安装，步骤如下： 选择功能表上的「 Help / Software Updates / Find and Install… 」。 在Feature Updates视窗中，选择「 Search for new features to install 」后按「 Next 」。 按下「 New Remote Site 」，在New Update Site视窗中的Name栏位输入「 PDT (可以随便填) 」，而URL栏位则填入「 http://download.eclipse.org/tools/php/ updates/ 」。 回到Feature Updates视窗后，「 Site to include in search 」栏中应该会多出一个已经被勾选的「 PDT 」项目。这时除了「 PDT 」外，请取消勾选其他项目，然后再按下「 Finish 」。 接下来的步骤就和上面必要套件安装步骤是一样的，这里略过。 如果想使用Xdebug for PDT ，那么这边PDT就要改用本地安装的方式来安装，步骤如下： 解开PDT 0.7 RC2 ( org.eclipse.php_feature-S20070130_RC2.zip ) ，假设这里我解开到「 D:\\Temp\\PDT\\eclipse 」。 选择功能表上的「 Help / Software Updates / Find and Install… 」。 在Feature Updates视窗中，选择「 Search for new features to install 」后按「 Next 」。 按下「 New Local Site 」，这时安装程式会要我们选择一个资料夹，这里就选「 D:\\Temp\\PDT\\eclipse 」。 在Edit Local Site视窗中的Name栏位输入「 PDT (可以随便填) 」。 回到Feature Updates视窗后，「 Site to include in search 」栏中应该会多出一个已经被勾选的「 PDT 」项目。这时除了「 PDT 」外，请取消勾选其他项目，然后再按下「 Finish 」。 humen1 Tech","permalink":"http://www.humen1.com/2007/12/eclipse-e5-ae-89-e8-a3-85pdt.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"不能用Outlook发信？(freebsd Sendmail)","date":"2007/12/18","text":"在女朋友家用adsl不能从公司的smtp发送邮件。为什么呢？问了老大才解决了这个低级问题。 原来ip没有被授权 解决方法： 添加ip到/etc/mail/access然后生成map文件 # makemap hash /etc/mail/access.map &lt; /ec/mail/access humen1 Tech","permalink":"http://www.humen1.com/2007/12/e4-b8-8d-e8-83-bd-e7-94-a8outlook-e5-8f-91-e4-bf-a1-ef-bc-9ffreebsd-sendmail.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Mysql 主从镜像机制[Freebsd]","date":"2007/12/18","text":"测试用例 主机和从机配置完全一样。环境vm5.5.3 Freebsd6.2 Mysql-5.1.4 master : 192.168.1.71slave : 192.168.1.72 mysql是ports默认设置安装的数据文件在/var/db/mysql/下 1.主机配置#mysql -u root -p#Enter password: mysql&gt;GRANT FILE,SELECT,REPLICATION SLAVE ON . TO seven@192.168.1.72 IDENTIFIED BY ‘seven’;mysql&gt; flush tables with read lock;mysql&gt; show master status;+——————+———-+————–+——————+| File | Position | Binlog_Do_DB | Binlog_Ignore_DB |+——————+———-+————–+——————+| mysql-bin.000035 | 106 | | |+——————+———-+————–+——————+1 row in set (0.01 sec)记下file &amp; position mysql&gt;exit#/usr/local/etc/rc.d/mysql_server stop #ee /etc/my.cnf [mysqld]下server-id=1log-bin=mysql-bin #log文件名 2.从机配置 #ee /etc/my.cnf[mysqld]下server-id=2 重启mysql#mysql -u root -p#Enter password: mysql&gt;CHANGE MASTER TO -&gt; MASTER_HOST=’192.168.1.71‘, -- 主服务器名或IP地址 -&gt; MASTER_USER=’seven’, -&gt; MASTER_PASSWORD=’seven’, -&gt; MASTER_LOG_FILE=’mysql-bin.000035’, – 日志名 -&gt; MASTER_LOG_POS=106; – 显示偏移量mysql&gt;START SLAVE; – 启动从服务器线程 —–重启2台服务器—– **测试*在主服务器（1.71）数据库上做如下操作:mysql&gt; show processlist\\G*************************** 1. row *** Id: 1 User: root Host: localhost db: NULLCommand: Query Time: 0 State: NULL Info: show processlist*************************** 2. row *** Id: 2 User: seven Host: 192.168.1.72:56493 db: NULLCommand: Binlog Dump Time: 510 State: Has sent all binlog to slave; waiting for binlog to be updated Info: NULL2 rows in set (0.01 sec) 在从服务器（1.72）数据库上做如下操作: mysql&gt; show processlist\\G*************************** 1. row *** Id: 1 User: system user Host: db: NULLCommand: Connect Time: 577 State: Waiting for master to send event Info: NULL*************************** 2. row *** Id: 2 User: system user Host: db: NULLCommand: Connect Time: 451 State: Has read all relay log; waiting for the slave I/O thread to update it Info: NULL*************************** 3. row *** Id: 3 User: root Host: localhost db: NULLCommand: Query Time: 0 State: NULL Info: show processlist3 rows in set (0.01 sec) 还可以使用。。。。 查看主机状态mysql&gt; show master status\\G*************************** 1. row *** File: mysql-bin.000022 Position: 453 Binlog_Do_DB:Binlog_Ignore_DB:1 row in set (0.00 sec) 查看从服务器状态mysql&gt; show slave status\\G*************************** 1. row *** Slave_IO_State: Waiting for master to send event Master_Host: 192.168.1.71 Master_User: seven Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000022 Read_Master_Log_Pos: 453 Relay_Log_File: bsd_s-relay-bin.000009 Relay_Log_Pos: 598 Relay_Master_Log_File: mysql-bin.000022 Slave_IO_Running: Yes Slave_SQL_Running: Yes Replicate_Do_DB: Replicate_Ignore_DB: Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: Last_Errno: 0 Last_Error: Skip_Counter: 0 Exec_Master_Log_Pos: 453 Relay_Log_Space: 898 &amp;nbs p; Until_Condition: None Until_Log_File: Until_Log_Pos: 0 Master_SSL_Allowed: No Master_SSL_CA_File: Master_SSL_CA_Path: Master_SSL_Cert: Master_SSL_Cipher: Master_SSL_Key: Seconds_Behind_Master: 0Master_SSL_Verify_Server_Cert: No Last_IO_Errno: 2013 Last_IO_Error: error connecting to master ‘seven@192.168.1.71:3306’ - retry-time: 60 retries: 86400 Last_SQL_Errno: 0 Last_SQL_Error:1 row in set (0.00 sec) humen1 Tech","permalink":"http://www.humen1.com/2007/12/mysql-e4-b8-bb-e4-bb-8e-e9-95-9c-e5-83-8f-e6-9c-ba-e5-88-b6freebsd.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"忘记Mysql密码？[freebsd]","date":"2007/12/18","text":"#killall mysqld#/usr/local/bin/mysqld_safe –skip-grant-tables &amp;#mysql…mysql&gt;use mysqlmysql&gt;update user set password=password(“root”) where user=”root”;mysql&gt;flush privileges;mysql&gt;exit #killall mysqld #/usr/local/etc/rc.d/mysql_server start #mysql -u root -p#Enter password: rootmysql&gt; humen1 Tech","permalink":"http://www.humen1.com/2007/12/e5-bf-98-e8-ae-b0mysql-e5-af-86-e7-a0-81-ef-bc-9ffreebsd.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Apache 不能启动[Freebsd]","date":"2007/12/17","text":"启动 httpd 时出现Starting httpd: httpd: apr_sockaddr_info_get() failed for MYHOSThttpd: Could not reliably determine the server’s fully qualified domain name, using 127.0.0.1 for ServerName. 这个问题是没有在 /etc/httpd/conf/httpd.conf 中设定 ServerName ，所以它会用主机上的名称来取代，首先会去找/etc/hosts中有没有主机的定义解决方式：1.设定 ServerName2.在 /etc/hosts 中填入主机名MYHOST： ee /etc/hosts 127.0.0.1 localhost.localdomain localhost MYHOST humen1 Tech","permalink":"http://www.humen1.com/2007/12/apache-e4-b8-8d-e8-83-bd-e5-90-af-e5-8a-a8freebsd.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"更改ssh端口[Freebsd]","date":"2007/12/17","text":"配置文件位置 /etc/ssh/sshd_config 在配置文件中搜索 Port 修改为 Port 2222 *2222为我要修改的当前端口，确保没有被使用。ssh原来的默认端口是22 humen1 Tech","permalink":"http://www.humen1.com/2007/12/e6-9b-b4-e6-94-b9ssh-e7-ab-af-e5-8f-a3freebsd.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Red Hat Linux 在Vm5下安装网卡问题","date":"2007/12/04","text":"VMware以上和Redhat 9以上之间，网卡驱动有些不兼容：Redhat 9.0作Guest OS时，用”ifconfig eth0 up”是无法激活虚拟网卡的，总是提示诸如 “Determining IP information for eth0… failed; no link present. Check cable?” 原因貌似是VMware提供的虚拟网卡驱动有一点点问题，解决办法在VMware的论坛里面提到过了： 以root权限，编辑 /etc/sysconfig/network-scripts/ifcfg-ethx 其中x是数字，比如eth0。在文件中添加： check_link_down () { return 1; } 然后ifdown eht0 / ifup eth0 应该就可以了 humen1 Tech","permalink":"http://www.humen1.com/2007/12/red-hat-linux-e5-9c-a8vm5-e4-b8-8b-e5-ae-89-e8-a3-85-e7-bd-91-e5-8d-a1-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"Version_compare ()函数","date":"2007/11/30","text":"version_compare ( string version1, string version2 [, string operator]) 对比php版本 str1 与str2 按照 string operator 规则（默认是 ‘&gt;’）对比 真返回1 否返回-1 // prints -1echo version_compare (“4.0.4”, “4.0.6”); // these all print 1echo version_compare(“4.0.4” , “4.0.6”, “&lt;”);echo version_compare(“4.0.6”, “4.0.6”, “eq”);?&gt; humen1 Tech","permalink":"http://www.humen1.com/2007/11/version-compare-e5-87-bd-e6-95-b0.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Iframe 的宽高问题","date":"2007/11/28","text":"今天在该一个弹出层对话框问题 用js控制弹出层的高度宽度想让嵌套在其中的iframe自适应宽高 开始的写法 [html] [/html] 结果死也没反应 后来改成 [html] [/html] 问题就解决了 humen1 Tech","permalink":"http://www.humen1.com/2007/11/iframe-e7-9a-84-e5-ae-bd-e9-ab-98-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Jpgraph在bsd中运行的小错误（字体问题）","date":"2007/11/26","text":"今天在自己的bsd环境中跑jpgraph这个类包时发现提示字体不存在的情况 而且离奇的是提示的目录位置居然是X11下 网上找了会没有找到好的解决方法，抱着试一试的心态从windows/fonts下找了个与提示相同文件名的字体放到提示的目录中，居然顺利解决了。。。 humen1 Tech","permalink":"http://www.humen1.com/2007/11/jpgraph-e5-9c-a8bsd-e4-b8-ad-e8-bf-90-e8-a1-8c-e7-9a-84-e5-b0-8f-e9-94-99-e8-af-af-ef-bc-88-e5-ad-97-e4-bd-93-e9-97-ae-e9-a2-98-ef-bc-89.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Magic linux下安装apache2.2","date":"2007/11/22","text":"下载Apache服务器的最新稳定发布版本,官方下载地址是：http://httpd.apache.org/download.cgi。1、 下载源码文件httpd-2.2.6.tar.gz 到linux服务器的某个目录。2、 解压文件 # tar zxvf httpd-2.2.6.tar.gz .3、 配置 # ./configure –refix=/usr/local/apache22 //指定安装目录，以后要删除安装就只需删除这个目录。4、 编译和安装。 # make ; make install .5、 编写启动脚本，把它放到目录 /etc/rc.d/init.d/里，这里取名为httpd,其内容如下：#!/bin/bash#description:http server#chkconfig: 235 98 98case “$1” instart)echo “Starting Apache daemon…”/usr/local/apache2/bin/apachectl -k start;; stop)echo “Stopping Apache daemon…”/usr/local/apache2/bin/apachectl -k stop;; restart)echo “Restarting Apache daemon…”/usr/local/apache2/bin/apachectl -k restart;; status)statusproc /usr/local/apache2/bin/httpd;; *)echo “Usage: $0 {start|stop|restart|status}”exit 1;;Esac 注意：#description:http server 这一行必须加上，否则在执行命令 # chkconfig –add httpd 时会出现“service apache does not support chkconfig”的错误报告。#chkconfig: 2345 98 98 表示在执行命令 # chkconfig –add httpd 时会在目录 /etc/rc2.d/ 、/etc/rc3.d/ /etc/rc5.d 分别生成文件 S98httpd和 K98httpd。这个数字可以是别的。 6、 执行命令 # chkconfig –add httpd ，进入目录/etc/rc3.d/检查是否生成文件 S98httpd及K98httpd.7、 启动服务 # /usr/local/apache22/bin/httpd -k start humen1 Tech","permalink":"http://www.humen1.com/2007/11/magic-linux-e4-b8-8b-e5-ae-89-e8-a3-85apache2-2.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Vm安装magic Linux 分辨率问题","date":"2007/11/22","text":"vm版本 5.5.3安装时候选了个默认显示器，分辨率选了800x600进了系统发现图形化显示器设置里的最大分辨率就是800x600网上搜索了一下原来是xorg.conf 这个文件里有配置 具体位置可以用搜索来找打开文件首先是对显示器行频（水平分辨率）和场频（垂直分辨率）的设置在xorg.conf中有类似一段：Section “Monitor”Identifier “Monitor0”VendorName “Monitor Vendor”ModelName “206STUDIO”HorizSync 30.0 - 70.0VertRefresh 50.0 - 160.0EndSection 其中HorizSync，VertRefresh分别是显示器行频（水平分辨率）和场频（垂直分辨率）的设置应该根据显示器的性能进行设置，他们的值决定了显示分辨率和刷新频率可能取值的范围。关于场频，行频，分辨率，刷新频率的具体含意及关系请大家补充。接着是对首先和可选分辨率的设置在xorg.conf中有类似一段： Section “Screen”Identifier “Screen0”Device “Videocard0”Monitor “Monitor0”DefaultDepth 24SubSection “Display”Depth 24Modes “1024x768” “800x600” “640x480”EndSubSectionEndSection 行 ： Modes “1024x768” “800x600” “640x480” 设置了三种可选的分辨率，排在最前面的就是首选的分辨率，也就是一般生效的分辨率。X启动时如果首选的分辨率无效，比如过高，会依次尝试后面的分辨率。这个例子中，最高的分辨率，排在最后，并不是首选的。 重启就可以享受1024x768了 humen1 Tech","permalink":"http://www.humen1.com/2007/11/vm-e5-ae-89-e8-a3-85magic-linux-e5-88-86-e8-be-a8-e7-8e-87-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Samba 配置","date":"2007/11/20","text":"前言 SAMBA是一种能把 FreeBSD 的目录开放给Microsoft Windows 95/98/NT 利用网路芳邻方式存取的软体集。其实并不只针对 FreeBSD， 其它UN*X 也都可以使用，这对工作平台大部分时间是Microsoft family的人 在存取档案上，会是个比较方便的选择。 安装SAMBA 2.0.6 1.先以 root 身份 login，切换至/usr/ports/net/samba 准备安装SAMBA。 安装时只要在 SAMBA 的目录下执行 make install 即可 # root@ohaha[~] cd /usr/ports/net/samba/ # root@ohaha[/usr/ports/net/samba] make install 若无出现错误讯息则是安装完成，你可顺手将安装过程中解开的source清掉。 # root@ohaha[/usr/ports/net/samba] make clean 设定 SAMBA (smb.conf) 在安装完 SAMBA 後，它会放一份设定档例在/usr/local/etc 下， 先将例一份来修改成我们要的设定。 # root@ohaha[~] cd /usr/local/etc/ # root@ohaha[/usr/local/etc] cp smb.conf.default smb.conf sam.conf.default是设定 SAMBA 的例档，真正读取的预设是 smb.conf， 为了保留原始的例档以供日後参考用，所以我们用 cp 的方式出设定档， 大致浏览过 smb.conf 後发现，它主要分成三大设定区，[globe]、[homes]、 [printers]，我没有印表机，所以没机会试[printers]相关部分。 我开 SAMBA 的目地是为了方便存取管理 ftp 并使用该台 FreeBSD 上 的硬碟空间，所以等会设定档的最终目地便是开出一个分享目录 ftp， 无须密码，但只允许我的工作机器去存取它。 在 smb.conf 中，所有的＃和；都是解。＃後接的是说明， ；後接的是指令，预设不打开该项设定，若想让它生效把分号拿掉即可。 以下只引出我有动过的地方，没提出的就是保留预设值。 #======================= Global Settings ===================================== [global] # workgroup = NT-Domain-Name or Workgroup-Name, eg: REDHAT4 # 设定所在工作群组 workgroup = center # server string is the equivalent of the NT Description field # 该主机的解 server string = blah~ # This option is important for security. It allows you to restrict # connections to machines which are on your local network. The # following example restricts access to two C class networks and # the “loopback” interface. For more examples of the syntax see # the smb.conf man page # 允许连线的主机，允许 163.16.1.99 和 127...* 连线 hosts allow = 163.16.1.99 127. # If you want to automatically load your printer list rather # than setting them up individually then you’ll need this # 我没有 printer ，所以有关 printer 的都会关掉 ; load printers = yes # Uncomment this if you want a guest account, you must add this to /etc/passwd # otherwise the user “nobody” is used # 这里设定免密码的帐号，你设什麽帐号，连进来的 client就是那个身份，了吗？ # 所以我把这儿改成 ftp 这个帐号，因为我 share 出来的目录 owner 是 ftp # 这样我才能以免密码又是 ftp 的身份对目录有完整的存取权。 # 不过记得，这儿填的帐号必须存在 /etc/passwd 中，否则会以 nobody 的身份签入。 guest account = ftp # this tells Samba to use a separate log file for each machine # that connects # 把 log 建个目录来放比较整齐，记得去 mkdir /var/log/samba 这个目录。 log file = /var/log/samba/log.%m # Security mode. Most people will want user level security. See # security_level.txt for details. # 设定安全层级，若要不用密码分享的话就要设成 share ，若设 user 的话会要求密码。 # 详情请见 docs/security_level.txt security = share # You may wish to use password encryption. Please read # ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation. # Do not enable this option unless you have read those documents # 我的目的是不用密码存取，所以这项开不开都没影响，但若你想用密码来控制存取权限时， # 请记得将此项打开，因为…详见 docs/ENCRYPTION.txt, Win95.txt 和 WinNT.txt。 ; encrypt passwords = yes # for Traditional Chinese Users # 若你想看到中文目录、档名的话，把 client code page=950 前的分号拿掉， # 注意，coding system 那项留着别打开它，两个都打开的话反而会看不到中文 client code page=950 ; coding system=cap #============================ Share Definitions ============================== # 接下来这一段就是 [homes] 和 [printers] 以及其它任何你想 share 出来的目录设定 # 区，我把 [homes] 也 mark 起来了，因为我不想 share 任何 home 出来。 ;[homes-%U] ; comment = Home Directories ; path = /home/%U ; user = %U ; browseable = no ; writeable = yes # ftp # 我加了这段，将 ftp 的目录开分享。一开始我们看到的 [ftp] 就是你分享出来的目录 # 在 95/98/NT 中会看到的资料夹名称，path 指向欲 share 目录的绝对路径， # public = yes 是指定这个分享不须密码，writeable = yes 是指可对该分享做写入动作 # 注意一点，当有 public = yes 这行时，对该分享存取的身份就是之前在 [globe] 区， # 我们所设定 guest account 的身份，若刚刚 guest account 没改成 ftp，那麽现在 # 即使有设 writeable = yes 也会因为 owner 不对而无 法写入。 [ftp] path = /home/ftp public = yes writeable = yes 启动 SAMBA 在安装完 SAMBA 後，它丢了个启动的 script 在 /usr/local/etc/rc.d/， 档名是 samba.sh.sample，将之更名并 chmod 成可执行。 # root@ohaha[/usr/local/etc/rc.d] mv samba.sh.sample samba.sh # root@ohaha[/usr/local/etc/rc.d] chmod 750 samba.sh 你现在可以重新开机或者手动执行 samba.sh 来启动 SAMBA。 # root@ohaha[~] /usr/local/etc/rc.d/samba.sh humen1 Tech","permalink":"http://www.humen1.com/2007/11/samba-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[{"name":"linux","slug":"linux","permalink":"http://www.humen1.com/tags/linux/"}],"title":"Linux各发行版本电子资料汇总","date":"2007/11/19","text":"▲Linux各发行版本电子资料汇总： Linux宝典 2007版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=151450Linux宝典 2005版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157450Ubuntu Linux宝典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147645Ubuntu Unleashedhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152407Ubuntu Linux for Non-Geekshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152406Moving to Ubuntu Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146155Beginning Ubuntu Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=148500O’Reilly Ubuntu Hackshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147639Redhat Linux 学习指南 第二版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=145855Learning Red Hat Linux (第三版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157462Fedora 6 and Red Hat Enterprise Linux宝典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152643Red Hat Linux网络管理工具http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152401Red Hat Linux 9 魔鬼式培训教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149228Redhat Linux 9从入门到精通http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=148044Red Hat Fedora Linux宝典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152052Red Hat Linux Fedora24小时自学教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146381Red Hat Linux Fedora for Dummieshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149308Red Hat Enterprise Linux 4 for Dummieshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157653&page;=1Fedora 7 Unleashedhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=155520Fedora Core 5 初学者指南http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146805Redhat Fedora core 6 unleashedhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=145602Redflag HA Cluster 4.1 完全参考http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=145852Redflag Linux Server 4.0用户手册http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146079Redflag Data Center 5.0系统管理http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149334Redflag Linux Desktop 5用户手册http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149333FreeBSD 6 Unleasedhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152327FreeBSD使用大全(第二版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152330FreeBSD完全手册(第三版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146083FreeBSD Handbook PDF中文版+英文版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=148037Freebsd简明教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=156573BSD FreeBSD Architecture Handbookhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=156547Absolute BSD - The Ultimate Guide to FreeBSDhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=155314Designing BSD Rootkits - An Introduction to Kernel Hackinghttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=155312FreeBSD 6.0 架设管理与应用http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=156835Debian GNU Linux安装与基本配置http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146826Debian GNU/Linux宝典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=150293O’Reilly Learning Debian GNU/Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149592Beginning SUSE Linux 第二版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152324SuSe Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152404SuSe Linux初学者从入门到精通http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157444SuSe Linux 10宝典 (PDF最新版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152409SuSe Linux 10 完全参考http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152403SuSe Linux 10 傻瓜书http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152402Suse Linux 10 新手指南http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=151464Suse linux 9.3用户手册http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147851Suse linux 9.3 管理员手册[http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147850](http://bbs.topsage.com/dispbbs.asp?boardID=117&amp;ID=147850)Knoppix Hackshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157461 ▲Linux/Unix基础电子资料汇总： Learning the Vi Editor (第六版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157395Linux简明教程 第四版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157379Linux新手管理指南http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157365Linux Cookbookhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157364Linux傻瓜书 第六版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157469Linux for Non-Geekshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157470Linux Desktop Hackshttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157468Linux All-In-One Desk Reference for Dummies 2006版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157465Linux All-In-One Desk Reference for Dummies 2005版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157464Learning the UNIX Operating System 第四版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157349Linux是如何工作的http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157348UNIX和Linux权威教程 (第三版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146367Unix完全参考(第二版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149702Linux案头参考(第二版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146272O’Reilly Linux in a Nutshell 第五版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146567Linux系统管理白皮书http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146815LINUX 24学时教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146154Hack Proofing Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=146380Understanding Linux Network Internalshttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=146073O’Reilly Building Embedded Linux Systemshttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=146571GNU Emacs 参考手册http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146031SSH - Unix Secure Shel toolhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=147630Linux系统一本通http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147629Advanced Linux Networkinghttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=147626Linux实用培训学习教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=147624Linux Complete Command Referencehttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=154445Linux命令参考大全 PDF版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149338送给初学Linux的穷人Linux系统指令大全http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149303Linux命令完全参考http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149564Linux命令字典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157463Linux Power Toolshttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157474Linux On The Mainframehttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157473Linux Network Servershttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157472Hardening Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157447Linux故障排除宝典http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149305Linux桌面系统提速法宝http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149225从Windows转向Linux基础教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149438Linux进程管理教程http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149226Linux下安装Oracle完全参考http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=149576详细剖析Linux和Unix两系统病毒威胁http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=149263让Linux像Windows一样方便http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152410Unix教程网络篇http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=156872Unix傻瓜书http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=156839Unix简明教程 第四版http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157387UNIX for OpenVMS Users 第三版http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157 384Linux网络管理员手册http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157131User Mode Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157389Linux Appliance Designhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152343Linux Device Drivershttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=152345 ▲Linux/Unix高级应用、编程电子资料汇总： Linux内核精要http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146024Understanding the Linux Kernel - 理解Linux内核http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=152408Linux 网络编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=145846轻松学习Linux编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146075O’Reilly Bash Cookbook (07年5月第一版)http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=147327Perl入门及高级编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146158Perl语言编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146157Perl指南http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146865Perl编程思想http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146770O’Reilly 精通Perl编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=156728轻松学习Linux编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146388Linux应用开发基础http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=148045Python简明教程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146387Unix编程艺术 The Art of Unix Programminghttp://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146764Linux编程白皮书http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146756A Practical Guide to Linux Commands Editors and Shell Programminghttp://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146740Linux案头参考(第二版)http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=146272Linux网络构架设计与实现http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=146860Linux与Unix Shell编程指南http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=146762Unix Shell Programming(第三版)http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157391Linux Shell Scripting with Bashhttp://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157511&page;=1十分钟Unix自学教程 第二版http://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157373Korn Shell:Unix and Linux Programming Manualhttp://bbs.topsage.com/dispbbs.asp?boardID=117&ID;=157376101个超酷Shell脚本http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157380Bash快速参考http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157340Unix shell范例教程 (第四版)http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=150295Unix环境高级编程http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=147632Unix环境高级编程 第二版http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157443Linux编程从入门到精通http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=147628Linux应用程序开发指南 使用Gtk+ Gnome库http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=148197Linux C高级程序员指南http://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=148196UNIX系统安全工具http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=156873Linux黑客大曝光 - Linux安全机密与解决方案http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=156844使用Ipfilter建立FreeBSD加固防火墙http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=156833Mastering FreeBSD and OpenBSD Securityhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157132Unix for Oracle DBAs Pocket Referencehttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157375SELinux NSAs - Open Source Security Enhanced Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157400Linux Security Cookbookhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157392保护Linux系统 - Linux安全生存指南http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157381高性能Linux集群http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157347Building Secure Servers With Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157346Building Embedded Linux Systems[http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157345](http://bbs.topsage.com/dispbbs.asp?boardID=118&amp;ID=157345)Unix Linux管理自动化http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157339UNIX系统安全工具http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=156873Unix 网络安全实用教程http://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=146255Building Applications with the Linux Standard Basehttp://bbs.topsage.com/dispbbs.asp?boardID=119&ID;=157342Hacking Linux Exposedhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157446Building Secure Servers with Linuxhttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157445Linux Server Hackshttp://bbs.topsage.com/dispbbs.asp?boardID=118&ID;=157510 humen1 Tech","permalink":"http://www.humen1.com/2007/11/linux-e5-90-84-e5-8f-91-e8-a1-8c-e7-89-88-e6-9c-ac-e7-94-b5-e5-ad-90-e8-b5-84-e6-96-99-e6-b1-87-e6-80-bb.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"FreeBSD 利用 Ports 安装与配置 Apache,mysql,php","date":"2007/11/19","text":"首先申明,本帖非原创,但也不是转帖,是本人结合网络搜集的资料与自己实际安装操作过程中总结所得.那么就让我代表广大爱好者向那些站在我们脚下的巨人以及那些能抽出时间为我们写总结的人们致敬吧,因为在本人实践中深切地体会到他们的伟大与能够在百忙与他人分享经验的难能可贵.本帖适合新手或安装过程中出现同类问题的同志们参考,高人可以跳过了;但若能留下指点,自是不胜感激了. 众所周知,FreeBSD 提供了软件的 ports 安装方式, 可以很方便的定制安装所需要的应用软件.当我们装好系统之后,当然首先想到是配置 web 服务器,FreeBSD 默认标准安装并没有安装 apache,mysql 和 php,所以就要亲自动手安装了.ports 安装方式的好处在于,不会像 LINUX 那样,由于一个依懒包或者库文件而导至不得不到处找依懒包或库文件,下载下来全部装好再来装需要安装的软件;因为它会自动下载并安装依懒包或库文件,当然也不是每次都成功的,毕竟每个人遇到的错误可能是千奇百怪的.尽管网络上关于这方面的东西一搜一大堆 ,但个人认为好多都只是概念性的,但手册毕竟不是万能的;所以本人结合网摘与自己在安装过程遇的问题以及对问题的分析与解决来清晰的描述整个安装过程. 测试机环境:%uname -aFreeBSD http://www.myfreebsd.cn/6.2-RELEASE FreeBSD 6.2-RELEASE #0: Fri Jan 11 11:11:11 UTC 2007 root@dessler.cse.buffalo.edu:/usr/obj/usr/src/sys/GENERIC i386 言归正传(安装系统不在讨论之列),开始我们的令人兴奋不已的征程吧. 1.apache 的安装与配置apache 给人感觉不光是稳定,还有亲切.之前偶在 RedHat 下手工编译安装过,相当顺利.这次用 ports 安装,同样的顺畅. %whereis apache22apache22: /usr/ports/www/apache22 %cd /usr/ports/www/apache22%su /取得管理员权限/Password:www#make WITH_MPM=worker WITHOUT_IPV6=yes WITH_THREADS=yes WITHOUT_SSL=yes install clean 上面是手工指定编译选项,其实也可用以下命令来通过一个简易图形化界面选择编译选项:www# make config选择好选项 OK ,然后再www# make install clean 现在来配置 apache.www# cd /usr/local/etc/apache22/ /*apache 配置文件的目录*/www# cp httpd.conf httpd.conf.bak /备份文件,以防不测/www# vi httpd.conf /编辑配置文件/ 以下有改动的地方,当然您要是对 apache 相当熟悉了,可以略过了.(比如默认的服务器目录是 /usr/local/www/apache22/data ,可以根据需要设置.相关的配置文件忒多了.只要记得对应修改就行了.)…#管理员的电子邮箱;ServerAdmin hy0kle@gmail.com…#服务的名称,若没有 DNS 域名最写作主机的 IP;ServerName 192.168.0.226:80…#反正装了 PHP 后要回来设置的,不如一次性写好了.^_^添加对 PHP 的支持;偶当时少写了一个 d ,导至 apache 无法解析 PHP 文件,提示要下载文件;网有网友少写 / ;小小的疏忽造成的后果是花在量时间排错; DirectoryIndex index.html index.php…AddType application/x-gzip .gz .tgz AddType application/x-httpd-php .phpAddType application/x-httpd-php-source .phps… 设置为开机自动运行.www# vi /etc/rc.conf#添加下面这句后保存退出;apache22_enable=”YES” 启动 apache.www# cd /usr/local/etc/apche22/rc.d/www# ./apache22 start Now,激动人心的时间到了,打开浏览器,输入 http://127.0.0.1/ 或 http://localhost 回车.如果看到大大的”It works!”字样,那么恭喜了,apache 安装成功了. 2.安装 mysqlmysql 对我来说有阴影.大四的时候,我一同学在 FreeBSD 下安装 mysql 的次数绝对不下于我在 BSD 下安装五笔[scim]所尝试的次数(几乎方试遍了我所能找到的方法,要不是爱迪生的精神支持着我,怕就放弃了,只不过他在发明,我在发现.最终还是尝到了成功的喜悦).故安装的时候并没有”吊以轻心”.但是安装过程还是出了问题,出错信息当时忘了记录了,大致意思是 mysql-client 已经存在,但版本不一致, 无法安装.因为之前我安装过 KDE 桌面,而 mysql-client-5.0 作为一个依懒包已经安装上了.于是为为防止强制安装造成无法使用,而且最新版本不一定就好于旧版本(有点吃不到葡萄说葡萄酸的嫌疑^*^),所以我退而求其次了,没有装 5.1 ,改装 5.0 了. %cd /usr/ports/databases/mysql50-server/%suPassword:www# make WITH_CHARSET=gbk WITH_XCHARSET=all WITH_PROC_SCOPE_PTH=yes BUILD_OPTIMIZED=yes BUILD_STATIC=yes SKIP_DNS_CHECK=yes WITHOUT_INNODB=yes install clean 同样, mysql 也有简易图形化编译选项设置;www# make config选择好选项 OK ,然后再www# make install clean 等待一会儿了…如果没有报错回到提示符,那就说明是好消息了,恭喜! mysql 也安装成功了,下面就设置它也为开机启动吧. www# rehash /刷新一下系统/www# vi /etc/rc.conf#添加下面的选项后保存退出;mysql_enable=”YES” OK,来启动 mysql 吧.www# cd /usr/local/etc/rc.d/wwww# ./mysql-server start如果不出意外,现在 mysql 已经启动了,那么就怀着得意的心情测试一下吧:www# mysql理论上会出现 mysql 的提示符.:) 3.安装 phpcome on.当初以为 php 应该不会再有什么问题了吧,可结果装了两次才算完全成功.第一次安装时 php 的扩展选项不怎么搞的没有编译进去,运行 phpMyAdmi 时报错.打印出 phpinfo 和查看 apache 配置文件时才发现, apache 根本就没有加载 php 扩展模块.于是只好卸载了重装了一遍 php.如果遇到无法卸载,想要强制重新安装,可以用以下命令:# make install FORCE_PKG_REGISTER=”yes” OK,开始吧.%cd /usr/ports/lang/php5%suPassword:www# make config#记得一定要选中 APACHE22 ,否则 apache 不认 php 文件,会提示你让你下载文件. OK www# make install clean 又是等待…如果无报错,回到提示符时,则 php 已经安装了,但是还没有扩展库. www# rehashwww# cd /usr/ports/lang/php5-extensionswww# make config/* php 的扩展库,如 GD,FTP,ZLIB,SESSION,PDF,MYSQL,HASH等等了,按需要定制吧. OK */www# make install clean 如果不出什么意外,就等着收获成功的喜悦吧.不过,现在还不算完. www# rehash www# cd /usr/local/etc/rc.d/www# ./apache22 restartwww# cd /usr/local/etc/www# cp php.ini-dist php.ini www# vi php.ini/配置 php.ini,想必到这儿所有都已经不成问题了.还是那句话,按需配置吧;保存并退出./…safe_mode_gid = Off…www# rehashwww# cd /usr/local/etc/rc.d/www# ./apache22 restart humen1 Tech","permalink":"http://www.humen1.com/2007/11/freebsd-e5-88-a9-e7-94-a8-ports-e5-ae-89-e8-a3-85-e4-b8-8e-e9-85-8d-e7-bd-ae-apachemysqlphp.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"freebsd6.0+apache2.2.0+mysql5.1.7+php5.1.2","date":"2007/11/19","text":"操作系统以及版本：freebsd6.0+apache2.2.0+mysql5.1.7+php5.1.2 一、安装mysql51 先添加mysql组和mysql用户 QUOTE:pw addgroup mysqlpw adduser mysql开始安装 QUOTE:cd /usr/ports/databases/mysql51-server/ make install clean # n长的编译过程 rehash cp /usr/local/share/mysql/my- large.cnf /etc/my.cnf #服务器内存1G，但是与apache在一起/usr/local/share/mysql下面有5个my-xxxx.cnf文件my-small.cnf 最小配置安装，内存&lt;=64M，数据数量最少my-large.cnf 内存=512Mmy-medium.cnf 32M&lt;内存&lt;64M，或者内存有128M，但是数据库与web服务器公用内存 my-huge.cnf 1G&lt;内存&lt;2G，服务器主要运行mysqlmy-innodb-heavy-4G.cnf 最大配置安装，内存至少4G QUOTE:mysql_install_db -u mysql ; mysqld_safe -u mysql &amp; #建立数据库目录二、安装apache22+php5 QUOTE: cd /usr/ports/www/apache22/ make install clean cd ../mod_php5 make install clean 配置/usr/local/etc/apache/httpd.conf：加入 QUOTE:AddType application/x-httpd-php .php AddType application/x-httpd-php-source .phps #可不加 *注意：第二行主要为查看php代码用，加上的话web目录下的所有扩展名为.phps的文件在被浏览器访问时都显示其源代码，我安装的时候就加了，但少了.phps的s，之后郁闷了半天 QUOTE:DocumentRoot “/usr/local/www/apache22/data” 这两个是你的主页目录，可以根据自己需要跟改，要一致。 QUOTE: Options Indexes FollowSymLinks去掉Indexes可以限制浏览你的主页目录 QUOTE:rehash apachectl start echo “” &gt; /usr/loacl/www/data/info.php 可能你的apache启动的时候和我一样会报这样的错误： QUOTE:[Wed Apr 12 21:48:09 2006] [warn] (2)No such file or directory: Failed to enable the ‘httpready’ Accept Filter我在google上找到了解决办法，执行如下操作： QUOTE:kldload accf_http grep accf /boot/defaults/loader.confaccf_data_load=”NO” # Wait for data accept filteraccf_http_load=”NO” # Wait for full HTTP request accept filter #将这个”NO”改成”YES” 但是为什么这样做还不知道，而且这个accf是做什么用的也不知道，还请大侠们来解释一下。 访问http://服务器的IP/info.php，如果有php的说明文件说明基本的php+apache2已经工作正常！ php5扩展功能安装 QUOTE:cd /usr/port/lang/php5-extensions/ make install clean #如果第一次安装会出现提示框，否则先make conf设置 选择需要的模块，当然也可以选择必须的，日后再添加。 apachectl restart 如果http://服务器ip/info.php有改动，恭喜你！安装成功！！ 后续工作： QUOTE:echo ‘ mysql_enable = “YES” ‘ &gt;&gt; /etc/rc.conf echo ‘ apache22_enable=”YES” ‘ &gt;&gt; /etc/rc.conf 以便开机后自动启动mysql apache humen1 Tech","permalink":"http://www.humen1.com/2007/11/freebsd6-0apache2-2-0mysql5-1-7php5-1-2.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"函数Sprintf()","date":"2007/11/17","text":"sprintf将字符串格式化。语法: string sprintf(string format, mixed [args]…);返回值: 字符串函数种类: 资料处理内容说明本函数用来将字符串格式化。参数 format 是转换的格式，以百分比符号 % 开始到转换字符为止。而在转换的格式间依序包括了填空字符。0 的话表示空格填 0；空格是默认值，表示空格就放着。对齐方式。默认值为向右对齐，负号表向左对齐。字段宽度。为最小宽度。精确度。指在小数点后的浮点数位数。类型，见下表% 印出百分比符号，不转换。b 整数转成二进位。c 整数转成对应的 ASCII 字符。d 整数转成十进位。f 倍精确度数字转成浮点数。o 整数转成八进位。s 整数转成字符串。x 整数转成小写十六进位。X 整数转成大写十六进位。使用范例$money1 = 68.75;$money2 = 54.35;$money = $money1 + $money2;// 此时变量 $money 值为 “123.1”;$formatted = sprintf (“%01.2f”, $money);// 此时变量 $ formatted 值为 “123.10”?&gt; humen1 Tech","permalink":"http://www.humen1.com/2007/11/e5-87-bd-e6-95-b0sprintf.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"自己写的Mambo模块","date":"2007/11/16","text":"用来显示各个分类的最近文章可以设定分块显示/uploaded_images/cate_show.zip humen1 Tech","permalink":"http://www.humen1.com/2007/11/e8-87-aa-e5-b7-b1-e5-86-99-e7-9a-84mambo-e6-a8-a1-e5-9d-97.html","photos":[]},{"tags":[],"title":"学习不断的学习","date":"2007/11/15","text":"一边学习flash编程 一边研究下c++ 一个很好的c++学习站 http://www.ccrun.com/ 今天在网上好不容易找到了borland c++ builder 6，正在下载中还不知是否能安装 humen1 Tech","permalink":"http://www.humen1.com/2007/11/e5-ad-a6-e4-b9-a0-e4-b8-8d-e6-96-ad-e7-9a-84-e5-ad-a6-e4-b9-a0.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"14个css技巧","date":"2007/11/15","text":"1、善用css缩写可以减少页面文件大小，提高下载**速度，同时使代码简洁可读。 ** 如： 以下是引用片段：div{ border-top:1px solid #cccccc; border-left:1px solid #cccccc; border-right:1px soli #cccccc; border-bottom:1px solid #cccccc;} 可以写为：p{border:1px solid #cccccc} 再如：以下是引用片段：div{ margin-top:10px; margin-right:20px; margin-bottom:30px; margin-left:40px;} 可以改写为：以下是引用片段：/注意上、右、下、左的书写顺序/div{margin:10px 20px 30px 40px}/注意，数值与单位不能有空格，每个值之间用空格隔开/ **2、可以同时为一个html元素的class属性设定多个规则(多重class定义)。** 通常我们写法为： 实际上我们可以为p元素指定多个规则，如：以下是引用片段：CSS：.a{…}.b{….}HTML： 该元素同时包括a和b中设定的样式 注意：多个规则之间用空格分开。 **3、明确定义单位，除非值为0** 忘记定义尺寸是css初学者新手普遍存在的问题。在html我们可以写width=&quot;100&quot;，但在css中应该给出一个准确的单位。如：width:100px;height:50px;font-size:9pt ，0值除外，因为不论对于任何单位。0值的大小都是相等的。 注意：不要在数值和单位之间加空格。 **4、区分大小写 ** 在xhtml中，css定义的元素名称是区分大小写的，class和id的值在html和xhtml中也是区分大小写的，所以为了避免错误，推荐一律使用小写。如#aaa,与#AAA是不同的，在xhtml中，p和P也是不同的.他们之间不会覆盖。如果在css中定义了#aaa，在html元素中使用AAA来应用将不能得到#aaa中定义的样式。 示例代码：以下是引用片段：CSS:#aaa{border:1px solid #ccc}HTML: 显示不出来1个像素的边线 **5、CSS的最近优先原则** 如果对一个元素定义了多次样式，则以最近的一级优先，最近一级的样式将覆盖其他的样式定义。 如：以下是引用片段：CSS:p{color:red}.blue{color:blue}.yellow{color:yellow}HTML: 此处显示为红色 此处显示为蓝色 此处显示为绿色 此处显示为黄色 注意： （1）注意样式的几个优先顺序(优先级由上至下递减)： --元素style设定 --head区中的设定 --外部引用css文件 （2）优先级不是按访问顺序来设定的，而是又css中的声明顺序来设定的。 如上例中此处显示为黄色 也显示为黄色， 因为在css定义中.yellow在.blue的后面。 **6、使用子选择器减少id和class的定义** 例如：以下是引用片段：#contain{..}#contain_ul{…}.contail_li{…} 可以更改为：以下是引用片段：#contain{..}#contain ul{…}.contain ul li{…} **7、不要给背景[图片](http://pic.yesky.com/) 路径加引号** 将background:url(&quot;xxx.gif&quot;)改为background:url(xxx.gif)，因为对于部分浏览器加引号反而会引起错误。 **8、背景图片的路径是相对与当前css页面的路径。 ** 例如： 有如下目录结构 |--images |--xxx.gif |--css |--xx.css |--index.html 代码内容 以下是引用片段：index.html引用xx.css文件。xx.css要引用xxx.gif图片其写法为：background:url (../images/xxx.gif) **9、使用组选择器为不同元素应用相同的样式** 如h1,h2,h3,div{font-size:16px;font-weight:bold} 则h1,h2,h3,div元素的样式都为字体16像素，字体粗体 **10、书写正确的链接样式 ** 当用css定义链接的各种状态时，一定要注意其书写顺序，即：:link :visited :hover :active。如果不按照该顺序书写可能无法达到自己希望的效果。为了记忆该顺序我们抽取每个单词的首字母：L V H A，你可以通过记忆LoVe,Hate,两个单词来记住其顺序。 **11、禁止内容换行与强制内容换行** 在表格或层中我们可能希望内容不换行或强制换行，我们可以通过一些css属性来达到这些要求。 禁止换行：white-space:nowrap 强制换行：word-wrap: break-word; word-break: normal; **12、区别relative和absolute** Absolute，CSS中的写法是：position:absolute; 他的意思是绝对定位，他是参照浏览器的左上角，配合TOP、RIGHT、BOTTOM、LEFT(下面简称TRBL)进行定位，在没有设定TRBL，默认依据父级的做标原始点为原始点。如果设定TRBL并且父级没有设定position属性，那么当前的absolute则以浏览器左上角为原始点进行定位，位置将由TRBL决定。 Relative，CSS中的写法是：position:relative; 他的意思是绝对相对定位，他是参照父级的原始点为原始点，无父级则以BODY的原始点为原始点，配合TRBL进行定位，当父级内有padding等CSS属性时，当前级的原始点则参照父级内容区的原始点进行定位。 **13、区别div和span** div是一个块级元素，可以包含段落，表格等内容，用于放置不同的内容。一般我们在[网页](http://homepage.yesky.com/)通过div来布局定位网页中的每个区块。 span是一个内联元素，没有实际意义，它的存在纯粹是为了应用样式，给一段内容加上标记可以通过在span上定义样式来设定其内容的样式。 **14、区别display和visibility** display:none和visibility:hidden都可以隐藏一个元素 但visibility:hidden只是隐藏了元素的内容，但其使用的位置空间仍然被保留。而display:none则相当把元素从页面中去除，其占用位置也将被删除。 humen1 Tech","permalink":"http://www.humen1.com/2007/11/14-e4-b8-aacss-e6-8a-80-e5-b7-a7.html","photos":[]},{"tags":[{"name":"值得一读","slug":"值得一读","permalink":"http://www.humen1.com/tags/%E5%80%BC%E5%BE%97%E4%B8%80%E8%AF%BB/"}],"title":"C/C++基础","date":"2007/11/14","text":"**C/C++基础 [都是极品学习资料] **C/C++基础Windows C 程序设计入门与提高 http://download.chinaitlab.com/program/files/13246.html 单片机C语言入门 http://download.chinaitlab.com/program/files/12907.html C++ 入门基础教程 http://download.chinaitlab.com/program/files/7617.html C语言常用算法源代码 http://download.chinaitlab.com/program/files/12893.html C常用算法程序集 http://download.chinaitlab.com/program/files/6225.html C++ 语言命令详解 http://download.chinaitlab.com/program/files/4556.html C语言编程要点 http://download.chinaitlab.com/program/files/11823.html C语言编程基础 http://download.chinaitlab.com/program/files/11074.html Borland c++使用手册 http://download.chinaitlab.com/program/files/4553.html C语言数值算法程序大全(第二版) http://download.chinaitlab.com/program/files/9247.html Borland c++4.0安装与使用 http://download.chinaitlab.com/program/files/4546.html C++ Builder 5.0经典入门 http://download.chinaitlab.com/program/files/4438.html 非C程序员C++入门自学教程 http://download.chinaitlab.com/program/files/3924.html C语言常用函数手册 http://download.chinaitlab.com/program/files/1818.html C++标准程序库自修教程与参考手册 http://download.chinaitlab.com/program/files/12644.html C/C++指令字典 http://download.chinaitlab.com/program/files/13237.html C语言图形函数介绍 http://download.chinaitlab.com/program/files/11643.html C语言数值计算初步 http://download.chinaitlab.com/program/files/11640.html C++Builder基础进阶 http://download.chinaitlab.com/program/files/6316.html C++ 设计新思维 http://download.chinaitlab.com/program/files/6037.html C++Builder英文帮助 http://download.chinaitlab.com/program/files/6315.html C语言初学者入门讲座 http://download.chinaitlab.com/program/files/11641.html C++完全参考手册 http://download.chinaitlab.com/program/files/9845.html C游戏编程从入门到精通 http://download.chinaitlab.com/program/files/9253.html 《C++Builder学习大全》中文版 http://download.chinaitlab.com/program/files/2141.html C++ Builder编程研究文档 http://download.chinaitlab.com/program/files/12888.html C常用函数 http://download.chinaitlab.com/program/files/3867.html C++程序调试实用手册 http://download.chinaitlab.com/program/files/6131.html Borland c++4.0从入门到精通 http://download.chinaitlab.com/program/files/4592.html 实用教程经典C语言教程 http://download.chinaitlab.com/program/files/12625.html C++捷径教程（第三版） http://download.chinaitlab.com/program/files/12591.html Borland c++实用教材 http://download.chinaitlab.com/program/files/4552.html 嵌入式系统中C的开发 http://download.chinaitlab.com/program/files/6027.html C++上机实践指导教程（第三版） http://download.chinaitlab.com/program/files/11635.html C++程序设","permalink":"http://www.humen1.com/2007/11/cc-e5-9f-ba-e7-a1-80.html","photos":[]},{"tags":[{"name":"flash","slug":"flash","permalink":"http://www.humen1.com/tags/flash/"}],"title":"Flash Remoting 跨域问题","date":"2007/11/09","text":"在flash remoting服务器的根目录安置crossdomain.xml『这点很重要，我的amfphp在子目录下，于是我就吧crossdomain.xml放在子目录中但是没用。一定要放在根目录』 crossdomain.xml 以上的格式将允许所有来路访问 amazon.com” secure=”true” /&gt; www.amazon.com&quot; secure=”true” /&gt; pre-prod.amazon.com” secure=”true” /&gt; devo.amazon.com “ secure=”true” /&gt; images.amazon.com” secure=”true” /&gt; anon.amazon.speedera.net” secure=”true” /&gt; 以上是 amazon的crossdomain 指定域名可以访问 flash player 会去读取该策略文件来决定这次跨域访问是否是合法的。只有在通过 HTTP、HTTPS 或 FTP 进行通讯的服务器上，策略文件才起作用。策略文件特定于所在服务器的端口和协议。 例如，策略文件位于 https://www.thedomain.com:8080/crossdomain.xml，它只适用于在端口 8080 通过 HTTPS 对 www.thedomain.com 进行的数据加载调用。 humen1 Tech","permalink":"http://www.humen1.com/2007/11/flash-remoting-e8-b7-a8-e5-9f-9f-e9-97-ae-e9-a2-98.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"普通用户执行su提示su:Sorry","date":"2007/11/02","text":"运行su切换到root的,只有属于wheel组的用户,才能成功的切换到root,否则会出现su:sorry(或相似)的错误提示。所以解决对策是编辑/etc/group 文件,在wheel出现的那行末尾添加用户名,多个用户名以“,”分割 humen1 Tech","permalink":"http://www.humen1.com/2007/11/e6-99-ae-e9-80-9a-e7-94-a8-e6-88-b7-e6-89-a7-e8-a1-8csu-e6-8f-90-e7-a4-basusorry.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Linux中文件查找技术大全","date":"2007/11/02","text":"每一种操作系统都是由成千上万个不同种类的文件所组成的。其中有系统本身自带的文件，用户自己的文件，还有共享文件等等。我们有时候经常忘记某份文件放在硬盘中的哪个地方。在微软的WINDOWS操作系统中要查找一份文件是相当简单的事情，只要在桌面上点击”开始”－”搜索”中就能按照各种方式在本地硬盘上，局域网络，甚至在INTERNET上查找各种文件，文档。 可是使用Linux的用户就没有那么幸运了，在Linux上查找某个文件确实是一件比较麻烦的事情。毕竟在Linux中需要我们使用专用的”查找”命令来寻找在硬盘上的文件。Linux下的文件表达格式非常复杂，不象WINDOWS,DOS下都是统一的AAAAAAA.BBB格式那么方便查找，在WINDOWS中，只要知道要查找的文件的文件名或者后缀就非常容易查找到。Linux中查找文件的命令通常为”find”命令，”find”命令能帮助我们在使用,管理Linux的日常事务中方便的查找出我们需要的文件。对于Linux新手来说，”find”命令也是了解和学习Linux文件特点的方法。因为Linux发行版本繁多，版本升级很快，在Linux书籍上往往写明某个配置文件的所在位置，往往Linux新手按图索骥还是不能找到。比如说REDHAT Linux 7.O和REDHAT Linux 7.1中有些重要的配置文件所在的硬盘位置和文件目录就有了很大的改变，如果不学会使用”find”命令，那么在成千上万的Linux文件中要找到其中的一个配置文件是相当困难的，笔者在没有精通”find”命令之前就吃过这样的苦头。好，下面就详细为大家介绍强大的”find”命令的全部使用方法和用途。 通过文件名查找法： 这个方法说起来就和在WINDOWS下查找文件一样容易理解了。如果你把这个文件放在单个的文件夹里面，只要使用常见的”ls”命令就能方便的查找出来，那么使用”find”命令来查找它就不能给你留下深刻的印象，毕竟”find”命令的强大功能不止这个。如果知道了某个文件的文件名，而不知道这个文件放到哪个文件夹，甚至是层层套嵌的文件夹里。举例说明，假设你忘记了httpd.conf这个文件在系统的哪个目录下，甚至在系统的某个地方也不知道，则这是可以使用如下命令： find / -name httpd.conf 这个命令语法看起来很容易就明白了，就是直接在find后面写上 -name，表明要求系统按照文件名查找，最后写上httpd.conf这个目标文件名即可 。稍等一会系统会在计算机屏幕上显示出查找结果列表： etc/httpd/conf/httpd.conf 这就是httpd.conf这个文件在Linux系统中的完整路径。查找成功。 如果输入以上查找命令后系统并没有显示出结果，那么不要以为系统没有执行find/ -name httpd.conf命令，而可能是你的系统中没有安装Apache服务器，这时只要你安装了Apache Web服务器，然后再使用find / -name httpd.conf就能找到这个配置文件了。 无错误查找技巧： 在Linux系统中”find”命令是大多数系统用户都可以使用的命令，并不是ROOT系统管理员的专利。但是普通用户使用”find”命令时也有可能遇到这样的问题，那就是Linux系统中系统管理员ROOT可以把某些文件目录设置成禁止访问模式。这样普通用户就没有权限用”find”命令来查询这些目录或者文件。当普通用户使用”find”命令来查询这些文件目录是，往往会出现”Permissiondenied.”（禁止访问）字样。系统将无法查询到你想要的文件。为了避免这样的错误，我们可是使用转移错误提示的方法尝试着查找文件，输入find / -name access_log 2&gt;/dev/null 这个方法是把查找错误提示转移到特定的目录中去。系统执行这个命令后，遇到错误的信息就直接输送到stderrstream 2 中，access_log 2就是表明系统将把错误信息输送到stderrstream 2中，/dev/null是一个特殊的文件，表明空的或者错误的信息，这样查询到的错误信息将被转移了，不会再显示了。 在Linux系统查找文件也会遇到这样一个实际问题。如果我们在整个硬盘，这个系统中查找某个文件就要花费相当长的一段时间，特别是大型Linux系统和容量较大的硬盘，文件放在套嵌很深的目录中的时候。如果我们知道了这个文件存放在某个大的目录中，那么只要在这个目录中往下找就能节省很多时间了。使用find /etc -name httpd.conf就可以解决这个问题。上面的命令就是表示在etc目录中查询httpd.conf这个文件。这里再说明一下”/ “这个函数符号的含义，如果输入 “find/ “就是表示要求Linux系统在整个ROOT目录下查找文件，也就是在整个硬盘上查找文件，而”find/etc”就是只在 etc目录下查找文件。因为”find/etc”表示只在etc目录下查找文件，所以查找的速度就相应要快很多了。 根据部分文件名查找方法： 这个方法和在WINDOWS中查找已知的文件名方法是一样的。不过在Linux中根据部分文件名查找文件的方法要比在WINDOWS中的同类查找方法要强大得多。例如我们知道某个文件包含有srm这3个字母，那么要找到系统中所有包含有这3个字母的文件是可以实现的，输入： find /etc -name ‘*srm*‘ 这个命令表明了Linux系统将在/etc整个目录中查找所有的包含有srm这3个字母的文件，比如 absrmyz， tibc.srm等等符合条件的文件都能显示出来。如果你还知道这个文件是由srm 这3个字母打头的，那么我们还可以省略最前面的星号，命令如下： find/etc -name ‘srm*’ 这是只有像srmyz 这样的文件才被查找出来，象absrmyz或者 absrm这样的文件都不符合要求，不被显示，这样查找文件的效率和可靠性就大大增强了。 根据文件的特征查询方法： 如果只知道某个文件的大小，修改日期等特征也可以使用”find”命令查找出来，这和WINDOWS系统中的”搜索”功能是基本相同的。在微软的”搜索”中WINDOWS中的”搜索助理”使得搜索文件和文件夹、打印机、用户以及网络中的其他计算机更加容易。它甚至使在Internet 上搜索更加容易。”搜索助理”还包括一个索引服务，该服务维护了计算机中所有文件的索引，使得搜索速度更快。使用”搜索助理”时，用户可以指定多个搜索标准。例如，用户可以按名称、类型及大小搜索文件和文件夹。用户甚至可以搜索包含特定文本的文件。如果用户正使用 Active Directory，这时还可以搜索带有特定名称或位置的打印机。 例如我们知道一个Linux文件大小为1,500 bytes，那么我们可是使用如下命令来查询find / -size 1500c，字符 c 表明这个要查找的文件的大小是以bytes为单位。如果我们连这个文件的具体大小都不知道，那么在Linux中还可以进行模糊查找方式来解决。例如我们输入find/ -size +10000000c 这个命令，则标明我们指定系统在根目录中查找出大于10000000字节的文件并显示出来。命令中的”＋”是表示要求系统只列出大于指定大小的 文件，而使用”-“则表示要求系统列出小于指定大小的文件。下面的列表就是在Linux使用不同” find”命令后系统所要作出的查找动作，从中我们很容易看出在Linux中使用”find”命令的方式是很多的，” find”命令查找文件只要灵活应用，丝毫不必在WINDOWS中查找能力差。 find / -amin -10 # 查找在系统中最后10分钟访问的文件 find / -atime -2 # 查找在系统中最后48小时访问的文件 find / -empty # 查找在系统中为空的文件或者文件夹 find / -group cat # 查找在系统中属于 groupcat的文件 find / -mmin -5 # 查找在系统中最后5分钟里修改过的文件 find / -mtime -1 #查找在系统中最后24小时里修改过的文件 find / -nouser #查找在系统中属于作废用户的文件 find / -user fred #查找在系统中属于FRED这个用户的文件 下面的列表就是对find命令所可以指定文件的特征进行查找的部分条件。在这里并没有列举所有的查找条件，参考有关Linux有关书籍可以知道所有find命令的查找函数。 -amin n 查找系统中最后N分钟访问的文件 -atime n 查找系统中最后n24小时访问的文件 -cmin n 查找系统中最后N分钟被改变状态的文件 -ctime n 查找系统中最后n24小时被改变状态的文件 -empty 查找系统中空白的文件，或空白的文件目录，或目录中没有子目录的文件夹 -false 查找系统中总是错误的文件 -fstype type 查找系统中存在于指定文件系统的文件，例如：ext2 . -gid n 查找系统中文件数字组 ID 为 n的文件 -group gname 查找系统中文件属于gnam文件组，并且指定组和ID的文件 Find命令的控制选项说明： Find命令也提供给用户一些特有的选项来控制查找操作。下表就是我们总结出的最基本，最常用的find命令的控制选项及其用法。 选项 用途描述 -daystart .测试系统从今天开始24小时以内的文件，用法类似-amin -depth 使用深度级别的查找过程方式,在某层指定目录中优先查找文件内容 -follow 遵循通配符链接方式查找; 另外，也可忽略通配符链接方式查询 -help 显示命令摘要 -maxdepth levels 在某个层次的目录中按照递减方法查找 -mount 不在文件系统目录中查找， 用法类似 -xdev. -noleaf 禁止在非UNUX文件系统，MS-DOS系统，CD-ROM文件系统中进行最优化查找 -version 打印版本数字 使用-follow选项后，find命令则遵循通配符链接方式进行查找，除非你指定这个选项，否则一般情况下find命令将忽略通配符链接方式进行文件查找。 -maxdepth选项的作用就是限制find命令在目录中按照递减方式查找文件的时候搜索文 件超过某个级别或者搜索过多的目录，这样导致查找速度变慢，查找花费的时间过多。例如，我们要在当前(.)目录技巧子目录中查找一个名叫fred的文件，我们可以使用如下命令 find . -maxdepth 2 -name fred 假如这个fred文件在./sub1/fred目录中，那么这个命令就会直接定位这个文件，查找很容易成功。假如，这个文件在./sub1/sub2/fred目录中，那么这个命令就无法查找到。因为前面已经给find命令在目录中最大的查询目录级别为2，只能查找2层目录下的文件。这样做的目的就是为了让find命令更加精确的定位文件，如果你已经知道了某个文件大概所在的文件目录级数，那么加入-maxdepth n 就很快的能在指定目录中查找成功。 使用混合查找方式查找文件 find命令可以使用混合查找的方法，例如我们想在/tmp目录中查找大于100000000字节并且在48小时内修改的某个文件，我们可以使用-and 来把两个查找选项链接起来组合成一个混合的查找方式。 find /tmp -size +10000000c -and -mtime +2 学习过计算机语言的朋友都知道，在计算机语言里，使用and ,or 分别表示”与”和”或”的关系。在Linux系统的查找命令中一样通用。 还有这样的例子， find / -user fred -or -user george 我们可以解释为在/tmp目录中查找属于fred或者george这两个用户的文件。 在find命令中还可以使用”非”的关系来查找文件，如果我们要在/tmp目录中查找所有不属于panda的文件，使用一个简单的 find /tmp ! -user panda 命令就可以解决了。很简单。 查找并显示文件的方法 查找到某个文件是我们的目的，我们更想知道查找到的文件的详细信息和属性，如果我们采取现查找文件，在使用LS命令来查看文件信息是相当繁琐的，现在我们也可以把这两个命令结合起来使用。 find / -name “httpd.conf” -ls 系统查找到httpd.conf文件后立即在屏幕上显示httpd.conf文件信息。 12063 34 -rw-r–r– 1 root root 33545 Dec 30 15:36 /etc/httpd/conf/httpd.conf 下面的表格就是一些常用的查找文件并显示文件信息的参数和使用方法 选项 用途描述 -exec command; 查找并执行命令 -fprint file 打印文件完整文件名 -fprint0 file 打印文件完整文件名包括空的文件 -fprintf file format 打印文件格式 -ok command; 给用户命令执行操作，根据用户的Y 确认输入执行 -printf format 打印文件格式 -ls 打印同种文件格式的文件. humen1 Tech","permalink":"http://www.humen1.com/2007/11/linux-e4-b8-ad-e6-96-87-e4-bb-b6-e6-9f-a5-e6-89-be-e6-8a-80-e6-9c-af-e5-a4-a7-e5-85-a8.html","photos":[]},{"tags":[{"name":"unix","slug":"unix","permalink":"http://www.humen1.com/tags/unix/"}],"title":"Vhost 配置","date":"2007/11/01","text":"#举例说明。 #此例目的在于用不同的域名访问同一ip下的不同目录层次 # Virtual Hosts # If you want to maintain multiple domains/hostnames on your# machine you can setup VirtualHost containers for them. Most configurations# use only name-based virtual hosts so the server doesn’t need to worry about# IP addresses. This is indicated by the asterisks in the directives below. # Please see the documentation at# &lt;URL:http://httpd.apache.org/docs/2.2/vhosts/ &gt;# for further details before you try to setup virtual hosts. # You may use the command line option ‘-S’ to verify your virtual host# configuration. # Use name-based virtual hosting. NameVirtualHost *:80 # VirtualHost example:# Almost any Apache directive may go into a VirtualHost container.# The first VirtualHost section is used for all requests that do not# match a ServerName or ServerAlias in any block. ServerAdmin [webmaster@dummy-host.localhost](mailto:webmaster@dummy-host.localhost) #文件目录 DocumentRoot c:/wamp/www#服务名-我理解为主域名 ServerName seven.com#别名-这里是关键了在这里设定子域名 ServerAlias [www.seven.com](http://www.seven.com/) ErrorLog logs/dummy-host.localhost-error_log CustomLog logs/dummy-host.localhost-access_log common ServerAdmin [webmaster@dummy-host.localhost](mailto:webmaster@dummy-host.localhost) DocumentRoot c:/wamp/www/sns/public_html ServerName [seven.com](http://seven.com) ServerAlias [sns.seven.com](http://sns.seven.com) ErrorLog logs/dummy-host.localhost-error_log CustomLog logs/dummy-host.localhost-access_log common #以上配置使 www.seven.com访问www下文件 sns.seven.com访问 www/sns/public_html下文件 humen1 Tech","permalink":"http://www.humen1.com/2007/11/vhost-e9-85-8d-e7-bd-ae.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"如何写游戏测评","date":"2007/10/31","text":"如何全面评测一个游戏（一） 如何评测一个游戏 本文所有内容都为作者自身观点。 评测前的准备： 1、忘记你最喜欢的游戏公司，忘记他们的作品 2、忘记你最讨厌的游戏公司，忘记他们的作品 3、拒绝一切该游戏的其他资料，从零开始 4、准备好你的耐心，准备好你的毅力 5、时刻提醒自己要细致地经过每一步 6、如果可能的话，请准备好纸张和水笔，首先记录下测评机器的详细配置信息，其次后面的空白留给任何给你留下较印象的东西。 然后，让我们开始吧。 入手 在测评的前期，你第一个接触游戏的部分应该是它的官方网站，而不是游戏。我个人认为，好的官方网站是一个游戏的接待台，它的友好程度和完善成都决定了玩家对整个游戏的第一印象，通常对你来说也是一样。这里评判一个官方网站，我总结和归纳了以下的一些评测标准： 1、游戏常规介绍、游戏新闻、公告 2、充值入口、商务入口 3、整体广告效应 4、下载通道、补丁通道、资源下载通道 5、玩家社区入口 6、帮助入口 虽然一般的网站都会具备以上的功能，但是一个网站是否更好的满足了访问者的需求就各有差异了。我们可以举个虚拟的例子来说明这个问题：大多数企划人员都认识到了玩家的一个习惯――先游戏再看帮助，这个习惯对于玩家来说非常普遍。新游戏接待玩家时，玩家会有很多问题，在他们互助行为无果后，他们会转向网站及社区寻求帮助。这个时候，网站的帮助入口就开始发挥它的作用。所以我们在评测的时候，首先需要对这个游戏的门户――网站有一个基础的了解，特别是这些基础的功能，是不是都照顾的很完善了呢？ 如何全面评测一个游戏（二）准备期 游戏入手时的准备已经做完了，接下来，我们测评者应该已经具有了游戏的客户端，那么接下来，我们已经可以进行游戏的安装与更新了。在这个阶段需要注意的是如下的问题： 1、在安装时注意每一步操作，是否有你需求的功能没有添加或者是添加了你不需求的功能。 2、确保自己安装游戏是正确的步骤和方法。 3、安装过程中请注意是否有安装出错的情况。有则注意第四步，无则进入第五步。 4、出现错误，请注意弹出的提示。一个完善的游戏，会告诉你该错误的类型或者代码，你可以使用这个信息去官方查询，官方在FAQ或者人工服务时会帮助你处理该问题。但如果没有任何关于该错误的信息可供查阅，那么你可以执行如下两步：A，重新下载，重新安装，看是否会出现问题。有则执行B。B，收集自己的机器配置信息，越细致越好，然后收集尽可能全面的错误信息提交官方做地毯式查找。 5、顺利安装完成，开始更新游戏。关注自动更新与手动更新是否通畅，以及两者的效率对比。有条件的话，可以多次更新来得出准确一些的数据。 这个阶段，我觉得新人测评游戏或者对测评比较生疏的朋友可能会忽视。但实际上对于受众庞大的玩家来说，不是所有人都能够顺利安装并更新最后进入游戏的。粗略估计至少会有1%左右的玩家会是这种情况。 举例说明：在几年前，大家普遍使用windows95、windows98的时候，大家几乎都碰到过一个”非法操作”的问题。当”非法操作”发生后，大家可以大致了解”非法操作”的一些信息，但是这些信息是不能被用户主动发送给微软的。但是在今天大家普遍使用winxp甚至更高版本的时候就会发现，当年的”非法操作”如今已经可以由用户主动选择提交错误信息给微软研究部门。为什么会有这个举动很好理解：及时、准确地接到错误反馈对修正错误有很大的帮助。对比之下，游戏也是软件，软件就不免会出错、出BUG。所以近两年来，已经有很多游戏公司开始注重这个方面：当出现问题时，反馈客户同时请客户反馈公司，并提供便利、快捷的反馈通道――一个send按钮。《WOW》、《诛仙》等就是如此。 通过上述例子，我们可以知道在评测时需要注意哪些方面了，安装是否顺利、更新是否通畅、错误提示信息是否直观明确、反馈是否明显等都是我们的评测点之一，用心记下并划分好条目吧。 如何全面评测一个游戏（三） 开始 经过上面一系列准备工作，下面终于可以正式进入游戏体验一下了。来，泡杯茶慢慢享受吧。如果是一个严谨、完善的游戏，那么你的评测会轻松快乐许多；如果反之，那么你得准备大量的精力来对付一些不愉快的感受，甚至是游戏BUG。 因为这个阶段会接触到大量的游戏内容，所以我罗列的条目分成了两块，分前后期来进行。 首先是第一个阶段，我总结了一些需要评测的项目，其中有一些注明了是重点。 1、游戏基础配置在评测机上的运行效果，多台评测的话需要记录多台。――重点 这个阶段特别是针对了预备上市的游戏，对于一般的调研类评测报告则无关痛痒。在这个阶段你需要得出一些对于运营来说可能至关重要的数据： 画质、音效全开的帧数、CPU使用效率以及全关之后的效率 画质全开、全关之后的截图资料，细节对比说明 多单元画质评测（大量光效、人物、水及书等易占用资源单元） 零单元画质评测（与上相反） 评测建议画质、机器配置组合，最佳画质、机器配置组合 Loading时间长短 2、游戏美术印象评测。――重点 毋庸置疑，同样内涵的两款游戏，画面的好坏决定了它们被玩家接收速度的快慢，甚至决定了注册、在线、流失人数。所以对游戏美术的评测是相当重要的。 在这里我阐述一下我对游戏美术的一些观点，至少我认为如今看来它们仍然是成立的。美术是玩家在进入游戏后最先也是最可能发表评论的地方，其次才是程序，最后才是策划。对于玩家来说，他们关注的的美术会有一个辐射范围，这个范围由中心到四周的顺序是：自己人物及装备――其他人物及装备――场景总感觉――场景元素――界面――NPC及MOB，在这其中，任何环节中都可能会插入光效，如技能等。玩家会针对上述这些美术效果进行评价，并进行主观接收尝试。 然后在后面的时间里，玩家会逐渐淡化对美术的考量，转向操作，内涵及乐趣等其他玩点的挖掘上。所以我认为，对于一个游戏来说，游戏美术工作的重点也应该按照这个层级进行；评测的时候，评测标准也应该按照这个层级由严格到宽松。 划分好评测重点顺序后，可以按照如下的标准来判别： 评测者对美术的第一印象评价 物件（包括了人物、物件）的外观形象、质感、效果，组合效果（包括物件装配人物，人物跑在场景） 物件运行效果，运行协调程度，比例和谐程度 光效类型划分与光效触发环境是否结合紧密 场景结构是否合理，场景效果 物件细节构成（质量）与实际使用效果对比（效果） 游戏运行整体程度，以及美术所有物件的被接受程度预估 场景眩晕、大地图眩晕、转向眩晕等问题总结 UI质感及UI操作美术暗示（如按钮明显与否，但是不考虑UI结构是否合理） UI与游戏美术的结合程度 可能还有不全，各位读者可以留言补充或者提出，我会吸收补完。 以上所有的评测点，差不多已经囊括了所有需要评测的美术部分。针对以上的条目，我举个小小的流程例子给大家。 例子：一款新的3D MMORPG游戏，登录后开始创建人物。在这里可能会对人物的面部、体型等进行个性化操作。都试一试体会一下。然后在游戏中观察你的人物、身上的物品、可能触发的光效，然后观察其他玩家身上这些效果，最后请记录下来，最重要的是记录下来每次你操作有产生的效果，它们是否有明显的美术变化，这些变化对你来说是不是具有吸引力、诱惑力，以及很协调的外部表现。我们知道，玩家们喜欢看到自己身上的变化，特别是一种向上的变化。其次是其他玩家身上的变化，会刺激他们向上发展。评测人物、装备及相关光效等美术构成时，需要格外注意这些美术对你的吸引程度，它们共同运作时的协调程度，以及单独来看他们是不是显得太突兀。 以上结束后，接下来的评测重点为场景部分。场景的考察重点在于整体感觉，而非某个物件。很多游戏我们都发现单个场景的配件很粗糙，但是纵观整个场景实际上效果还是非常不错的。比如早期游戏场景中的树，实际就是两个片一交叉杵在哪里……这种”写意”场景的方式在《WOW》中也发挥的淋漓尽致，一个枝繁叶茂的树，实际就是若干个”片”拼合的。所以这个阶段的评测，需要我们在游戏中尽量从全面的角度去观察场景，观察时注意场景中是否有不协调的成分，及时记录和追踪。而且场景实际上也是一个氛围塑造的问题，越是玩家经常出入的地方、场景就越需要从远、近各个角度去考察。此外，有些游戏中场景也是一个增加卖点的噱头，比如一些实景的单机游戏把白宫、凯旋门等物件制作进去，这样便增加了玩家的喜爱程度。对这些可能成为卖点的重点场景，也需要对他们的特点、体验感受进行全面的观察和记录。 除此之外，场景承载了所有的玩家，所有的玩家必然都会经过在场景中完成游戏体验。而很多游戏都碰见过玩家对地图眩晕的问题，而且3D游戏多于2D游戏。这个实际上和很多因素有所关联，类似的探讨也很多，所以在这里我们只考虑评测时如何注意这些问题，并且从美术上如何去发现并预防。 以最为常见的情况来说，3D眩晕一般容易在下列情况下出现： 场景狭小，帧数偏低 场景物件形成的压迫感太强 镜头晃动过于激烈 贴图过于”网格”化（太过规律排列、太花） 镜头晃动贴近真实 而2D游戏中眩晕的情况相对少见的多，但是也不是没有。2D游戏眩晕通常只会是对场景移动时的眩晕。这表现在玩家在操作角色移动时，镜头跟随角色而场景会更换。在这个更换的过程中，空旷、帧数过低、网格效果都可能会导致对该场景眩晕。 总结关于场景部分，最重要的是大环境。场景不需要细到每个石头都刻画仔细，但是它的意境、玩家对它的感觉以及角色是否能融入才是关键的。在这个基础上，再去探讨它有哪些出彩的地方。 然后，我们来说一下关于光效的问题。光效可能会在许多时候、许多地方出现，对于它们来说，最主要的就是细节刻画是否到位，而不是看它们华丽到什么程度。虽然说华丽是一个特点，但是有时候为了追求效果的华丽，我们会失去很多东西。总之，光效追求的就是入细、得体、恰如其分。那么，什么叫做恰如其分，用个最简单的解释说就是：该出现的时候出现，出现的时候要出现的合适。比如说，我们有个写实的MMORPG游戏，有一个砍杀怪物的动作。这个时候往往会有一个攻击效果出现。这个效果不出现，你会看到一次很没有感觉的攻击；出现的太巨大，你后面更强烈的攻击就会被简介削弱气氛。最合适的效果应该是什么，就需要评测的经验和对整体大局的判断了。 最后，是关于UI的问题。关于UI，它的美术我一直保持一种观点就是：简单、协调。UI是一种交互工具，不是用来增加你游戏美观的砝码，但是如果你忽视，那也会使游戏画面看起来很怪异。美术出色的UI，应该是看起来能和游戏整体色调保持一致、但又不缺乏质感叫你无法和游戏内容区分；具有一定游戏经验的人立刻能够分辨UI的基本功能和含义，辨识各按钮及信息栏；图标图简意赅，文字图片搭配和谐匀称，色彩协调。在这里，我们暂时不讨论UI的操作性，留在后面说。 以上，是对美术的全面评测。 humen1 Tech","permalink":"http://www.humen1.com/2007/10/e5-a6-82-e4-bd-95-e5-86-99-e6-b8-b8-e6-88-8f-e6-b5-8b-e8-af-84.html","photos":[]},{"tags":[{"name":"php","slug":"php","permalink":"http://www.humen1.com/tags/php/"}],"title":"随机生成字符串","date":"2007/10/29","text":"[php] function random($length) { $hash = ‘’; $chars = ‘ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_abcdefghijklmnopqrstuvwxyz’; $max = strlen($chars) - 1; mt_srand((double)microtime() * 1000000); $chr_len = rand(3,$length); for($i = 0; $i &lt; $chr_len; $i++) { $hash .= $chars[mt_rand(0, $max)]; } return $hash; } [/php]","permalink":"http://www.humen1.com/2007/10/e9-9a-8f-e6-9c-ba-e7-94-9f-e6-88-90-e5-ad-97-e7-ac-a6-e4-b8-b2.html","photos":[]},{"tags":[{"name":"股票","slug":"股票","permalink":"http://www.humen1.com/tags/%E8%82%A1%E7%A5%A8/"}],"title":"股市马经","date":"2007/10/12","text":"一个不错的股票知识站点 http://www.goomj.com/ humen1 Tech","permalink":"http://www.humen1.com/2007/10/e8-82-a1-e5-b8-82-e9-a9-ac-e7-bb-8f.html","photos":[]},{"tags":[{"name":"股票","slug":"股票","permalink":"http://www.humen1.com/tags/%E8%82%A1%E7%A5%A8/"}],"title":"股票入门知识","date":"2007/10/12","text":"Ａ、股市原理１、惯性原理：处于涨势或者跌势的时候，其趋势一般将延续。２、波浪原理：跌有多深则涨也将会有多高；量足则价升。３、极静思动：价窄而量缩往往预示着大行情的来临。４、物极必反：行情发展到极端状态时将朝着它的反向运行。５、一致性 ：当长期和短期的趋势都一致时其威力最大。６、转折交叉：当短期和长期趋势发生矛盾时可能会变盘。７、成本原理：当买入的成本小于市场成本时风险较小。 Ｂ、主力行为１、主力收集：指标在中低位，价量配合好，盘中常有大手笔买单，有间隙放量行为。２、主力入场：该股处于盘整或者下跌过程中，突然放出巨量上扬，内盘明显大于外盘，换手积极，主力入场明显。３、主力派发：经常高开走低，上冲乏力，均线时常跌破，价量配合差。４、主力撤庄：股价暴跌，价量配合极差，外盘远远大于内盘，若成交量放出，属主力撤庄行为。５、主力拉升：主力吸足筹码之后，开始振仓洗筹，最明显的特征是升跌无量，并量呈逐波缩小之势，当形态发展到均线粘合、多头排列的时候，主力往往会拉升。 Ｃ、底部形态分析股票的大幅上扬是从底部开始的，所谓底部当有一个筑底过程，筑底的目的是调整均线或者叫清洗筹码，只有当市场上对该股的抛盘达到了极微的程度，或者因为消息导致市场人士对股市绝望逃命，而又有新生力量介入的时候底部才有可能形成，因此从图表看，一种形态为窄幅缩量，另一种形态则是巨量下跌，底部形成放可产生强大的上升行情。实战中本人总结七种底部形态：第一种是“平台底”，第二种是“海底月”， 第三种是“阳夹阴”，第四种是“均线星”，第五种是“探底线”，第六种是“三红兵”、第七种是“长尾线”。股票的底部一般三天形成，根据形态划分，不管任 何形态都需和均线系统成交量配合而论，均线处于粘合或者短期均线在中长期均线下方可谓底部，而成交量没有一个递减缩小的过程或者没有一个放量急剧下跌的过 程就谈不上底部，底部突破往往是由消息引起的，但它是通过时间和形态构造出来的，下面就分头来论述底部的七大形态。一、平台底：股价在５日均线附近连续平盘三天，迫使５日线和１０日均线形 成金叉或者５日线上翘、１０日均线下移速率变慢，具体的要求是三天中第一天收小阴线，第二天收小阳或小阴，第三天收小阳，整体看三根Ｋ线是平移的。二、海底月：它的具体要求是第一天收中阴线或者大阴线，第二、第三天收上 升形态的小阳或十字星，并且三天中有成交量放大趋势的迹象。大阴线好比是一只大船沉入海底，但在底部受到强大的支撑，并有超过其下跌的能量维持它的上升， 因此假如说均线系统是往上的，中线指标看好，没有理由认为该大阴线是行情的中止，应该考虑这是主力刻意打压造成的，因此出现这种情况可以认为是新一轮行情 的旭日东升。三、阳夹阴：即二根阳线中间夹一根阴线，意思是说第一天股票上扬受到抑制， 第二天被迫调整，但第三天新生力量又重新介入，因此这种上升就比较可靠，后市向好的机会多。四、均线星：在底部均线系统刚修复往上的时候，往往会在均线附近收一个阴或者阳十字星，这是多空力量平衡的一种表示，但发生在底部，第二天极容易出现反弹或者往上突破，这是一种不引人注目的形态。五、三红兵：在均线附近或者下方连续出现三根低开高收的小阳线，并且量有逐步放大的趋势，预示着有小规模的资金在逢底吸纳，后市将看好。六、探底线：当天开盘低开在均线的下方，而收盘在均线的上方，这是主力为了进一步做行情而刻意做出来，按照惯性原理后市理应看涨。七、长尾线：当天开盘之后，股市出现放量下跌，但之后莫名其妙被多头主力拉升，留下了一个长长的下影线，这是做反弹资金介入的信号，只要第二天重拾上升路，上升空间就很明显。 底部是由形态构造的，但成交量起了一个关键性的作用，无论是缩量也好、放量也好，都必须要有个规律，比如说逐波缩量、温和放量这都是一种向好量变过程，但假如说有放量不规则、或者说上去的时候成交量很大但没有涨多少，无论任何形态都有成为下跌换档的可能。比如说９７年基金的疯跌。 Ｄ、股票分析的几点经验和看法一是升的时候放量好还是缩量好。当然是放量好，但并不是说放量就可以买进， 买入和放量是二回事情，放量要看性质，若是高位对倒，则是出货信号，量小或者量极微到是一种风险相对较小的量变形态。第一、因为量小可排除对倒，第二、因为量小证明抛盘轻，第三、量小主力便于控盘，涨起来比较疯。所以看到连续缩量而股价坚挺的股票可适量跟入做个中线。二是上升或者下跌目标值的预测。股市中大部分人都联想比较丰富，对事态的发展比较偏向于极端，分辨不出是反弹还是启动，是回档还是跌势，他们只知道每年都有翻倍的股票，但从未想过能翻倍的股票到底有多少。其实只要按一种平常心， 严格按股票的买卖法则去进行，那就一定能进退自如。 三是均线指标金叉死叉的研判。这种分析一定要结合长期均线进行，若日线死叉而周线金叉要服从于周线，证明短期有回档，而回档是介入的良机，因为周Ｋ线预示本周即使不涨，下周机会尤存。四是对指标的运用。ＭＡＣＤ是一个中线指标，其对后市的判断能力相对其它 指标较强，其中ＤＩＦ与ＤＥＡ的金叉有效程度相当高；ＲＳＩ为短线指标，一般５０附近金叉为短线买入时机。五是反对做短线。做短线其实是风险相当大的行为，大部分操作者只看１５分 种或者６０分种Ｋ线就贸然行事，根本不把周线分析当作一回事，每天忙忙碌碌，但所赚的或许还是手续费贵也说不定。六是对题材的认识。股票涨无非一是绩优、二是盘小、三是收购四是超跌，而 实质性的主要是对其价值的重新认识，每股收益能反应该股的成长性，而每股净资产则说明该股值多少，所以一个股市即便是熊到了头，跌破净资产无论如何是不会 长久的，当然每股收益较小的股票也是很难有所作为的。 Ｅ、买卖法则１、价格窄幅整理，而成交量呈逐波递减或者温和放大、均线形成黄金交叉或 者一致向上，或者均线粘合、多头排列，且周Ｋ线也出现类似的图形，可买入。２、均线空头排列且成交量分布不规则，量大而涨幅小，上影线长，高位震荡 剧烈，价格屡创新低，可作为卖出依据。３、打压、整理时逢底吸纳，往上突破时要注意回荡，必涨形态可适当跟风， 头部形成当坚决派发。打压指：连续下跌趋势变缓，且成交量递减萎缩；或者放量下跌但下档接盘出奇的大。整理指：股价盘整，而成交量萎缩变小。底部指：盘轻、价窄、量缩，均线走平，大众获利筹码少。必涨指：放巨量上攻之后出现再度放量调整，但调整幅度明显变小同时均线系统强烈向上，属上升换档态。４、涨前特征：①当日收市与昨日最高比小于２％大于－ ２％；②除实体上移 或收十字Ｋ线当天不创三日内新低；③均线距小于２％或窄幅整理。５、选股原则：①震荡小（３％）；②平底、圆底、均线上升（探底）十字星；③均线向好(金叉或粘合）；④盘子轻；⑤实体从均线处冉升；⑥周Ｋ线呈突破或者调整到位势。６、下跌之前：①均线系统助跌，且有进一步加速下移之势；②成交量分布极不规则；③上影线明显偏长，阳线实体总体偏小；④高低点每天下移，并有加速之势。７、上涨之前：①成交量极度萎缩；天量出现在现价下面；②股价坚挺，窄幅盘整；③中线指标由弱转强，短线指标强势调整；④均线走平，短期在上；有些股出现长尾Ｋ线.８、股市分析次序：⑴看大盘：５分种、１分种成交明细量价是否配合？短线 指标３０分种、６０分种Ｋ线有否上升空间？震荡否？⑵寻个股：启动时形态好，价量配合理想，有板块效应，离阻力区较远，均线稳步上升。⑶找题材：看个股异常波动同近期何种消息有关，可加大操作可信度。９、３０次均线反翻原理（一般情况）：当股价有效跌破３０次均线，其下跌第一目标为从高位下来的区域a到现价b的差距，到位后若得不到成交量的支撑，其第二下跌目标为前次下跌的２倍..依次类推；反之，涨的时候突破３０次均线其上涨目标预测也类似。１０、向好种种：窄幅有望变成宽幅，缩量有望变成放量，探低有望发生上行，均线升有望趋势变好，多头排列涨势强烈，上影线短抛盘轻，下影线长支撑大，量比变大、小有资金介入。 Ｆ、盘面分析１、对大盘，大盘股（白线）上得比小盘股（黄线）快，要出现回调，而黄线上涨比白线快，则会带动白线上。２、大盘中，在昨日收盘指数水平线的上方有红色柱状体出现，而下方有绿色体出现，这代表涨势个跌势，红色占绝对优势，表明多方势强，反之空方强。３、成交量大的股票开始走软，或者前期股市的热门板块走软，当小心行情已接近尾声。４、股票基本走软，市场在热点消失还没有出现新市场热点的时候，不要轻易去买股票。５、成交量屡创天量，而股价涨幅不大，应随时考虑派发，反之成交量极度萎 缩不要轻易抛出股票。 ６、大盘５分种成交明细若出现价量配合理想当看好后市，反之要小心。７、成交量若上午太下，则下午反弹的机会多，如上午太大，则下午下跌概率大。８、操作时间最好在下午，因为下午操作有上午的盘子作依托，运用６０分种 Ｋ线分析，可靠性好。９、上涨的股票若压盘出奇的大，但最终被消灭，表明仍会上涨。１０、一般股票的升跌贴着均价运行，若发生背离将会出现反转。１１、盘面经常出现大手笔买卖，买进时一下吃高几个档位，表明大户在进货。１２、个股在盘整或下跌时，内盘大于外盘，且阴线实体小，成交量大，日后该股有行情的可能性大；大盘暴跌，而该股没跌多少或者根本没跌，下档接盘强，成交放得很大，后市有戏的可能大。１３、股价上冲的尖头绝对的多于下跌的尖头时当看好该股。１４、在下跌的势道里，应选逆势股；在上涨的势道里，应选大手笔买卖的股票。１５、开盘数分种就把股价往上直拉，而均线没有跟上，往往都是以当天失败的形式而告终。１６、当日下跌放巨量，但收的阴线实体不大，而且大部分时间在昨日收盘以上运行，第二天涨的机会多。17、涨幅在５－７％以上，内盘大于外盘，高点不断创新，低点不断抬高，说明有机构大户在进货。18、分价表若是均匀分布说明大户不在里面，否则有大户介入。 Ｇ、技术分析１、Ｋ线图中若出现缩量、价窄、盘轻、指标走强，且周线也出现类似的情形， 有望成为黑马。２、均量从底部往上突破有行情；均线站牢１０次均线买进。３、股价连续脱离均线往上，除均线多头排列，应抛出股票为好。４、成交量呈波浪上升，但每根阳线实体不大而上影线较长，小心在拉高出货。５、股票在低位盘整连创十字星并缩量，表明后市可能会涨；反之在高位，后 市看跌。６、Ｋ线连续下跌，成交量连续放大，这时出现一根上升的长量价升量增，内 盘大于外盘，同板块也类似，当及时跟进，有望上行。７、ＭＡＣＤ零轴突破看好，飞离红色柱状体当看空，贴着红色柱状往上看好， ＤＩＦ与ＭＡＣＤ金叉当看好，ＤＩＦ平盘往上当看好；ＢＯＬＬ线窄幅平盘，突然开口往上当看好，碰上轨要回档，触下轨有反弹，中轨突破涨势强烈。８、１４日ＲＳＩ在８０时要抛出，在２０日以下可买进；ＫＤＪ金叉向上看 多，死叉向下看空；ＯＢＶ平盘３０次，突然往上突破前高看多；ＡＳＩ突破前高为真突破，反之小心假突破。９、盘整时ＫＤ在２０以下第一次金叉不急于进货，第二次金叉可适时买入； ＫＤ在８０以上形成第一次死叉不急于抛出，第二次可坚决离场；Ｗ％Ｒ指标不能连续触顶或高位盘整，Ｗ％Ｒ指标连续触顶４次以上当抛出。 Ｈ、投资方法一种是投资没有阻力的成长股，因为任何人都获利，其上扬显得较为轻松，上 升目标取决于其题材的力度。另一种方法是买进所有人都套牢的股票，因为任何人都套牢虽然还有下跌空间， 但一旦股价启稳，投资者若能逢底吸纳或者回档介入，别人解套的时候，您将获得大利。 I、操作技巧技巧之一：买入前期成交量极度萎缩，而今刚放量，并均线系统形成黄金叉的股票。技巧之二：买入均线多头排列并周均线有反弹或突破的股票。技巧之三：价格跌破昨收盘２％，并受均线（30日、60日）压制，成交量已经放出包括温和），属于反弹结束，当抛出。 技巧之四：买入小盘股。同样的题材，普通股涨１０％，而小盘股可涨２０％。技巧之五：十日均线平台７日以上，往上有大行情。技巧之六：周线为主，日线最高涨１０％，而周线为６１％。技巧之七：买入站在10周线之上，并且10周线走平或往上的股票。 J.杂谈以下情况会涨１、均线没有压力或者均线有支撑２、资金量刚介入３、阳线刚升起投资策略（思路）一、投资启动形态的个股，盈利２％就走。投资方案原理：个股升跌有其惯性决定，处于涨势状态，短期定有一个惯性 上升，当处于启动位置，惯性上涨概率大，但有时候巨量不涨，巨量少涨，浮码沉重都是限制其进一步上扬的关键因素，但一般涨它个２％到３％是有可能的， 该类投资可少额参与。二、投资周线突破的个股，一般盈利１０％到２０％左右。投资方案原理：股价通过长期的调整，调整到周线形成多头排列，并处于粘 合一致的位置，若成交量极度萎缩或者有逐波放出的迹象，证明大的变盘就在眼前，这时获利盘、解套盘压力小，浮码轻，上涨比较疯，该类投资可重仓介入。三、投资成长绩优小盘股，一般盈利１０％到３０％。投资方案原理：一波行情的启动，盘小股肯定会是一个热点，一个市场无论 牛熊，成长股一定","permalink":"http://www.humen1.com/2007/10/e8-82-a1-e7-a5-a8-e5-85-a5-e9-97-a8-e7-9f-a5-e8-af-86.html","photos":[]},{"tags":[{"name":"值得一读","slug":"值得一读","permalink":"http://www.humen1.com/tags/%E5%80%BC%E5%BE%97%E4%B8%80%E8%AF%BB/"}],"title":"数学之美 系列二 -- 谈谈中文分词","date":"2007/10/11","text":"谈谈中文分词----- 统计语言模型在中文处理中的一个应用 上回我们谈到利用统计语言模型进行语言处理，由于模型是建立在词的基础上的，对于中日韩等语言，首先需要进行分词。例如把句子 “中国航天官员应邀到美国与太空总署官员开会。” 分成一串词：中国 / 航天 / 官员 / 应邀 / 到 / 美国 / 与 / 太空 / 总署 / 官员 / 开会。 最容易想到的，也是最简单的分词办法就是查字典。这种方法最早是由北京航天航空大学的梁南元教授提出的。 用 “查字典” 法，其实就是我们把一个句子从左向右扫描一遍，遇到字典里有的词就标识出来，遇到复合词（比如 “上海大学”）就找最长的词匹配，遇到不认识的字串就分割成单字词，于是简单的分词就完成了。这种简单的分词方法完全能处理上面例子中的句子。八十年代， 哈工大的王晓龙博士把它理论化，发展成最少词数的分词理论，即一句话应该分成数量最少的词串。这种方法一个明显的不足是当遇到有二义性 （有双重理解意思）的分割时就无能为力了。比如，对短语 “发展中国家” 正确的分割是”发展-中-国家”，而从左向右查字典的办法会将它分割成”发展-中国-家”，显然是错了。另外，并非所有的最长匹配都一定是正确的。比如”上海大学城书店”的正确分词应该是 “上海-大学城-书店，” 而不是 “上海大学-城-书店”。 九十年代以前，海内外不少学者试图用一些文法规则来解决分词的二义性问题，都不是很成功。90年前后，清华大学的郭进博士用统计语言模型成功解决分词二义性问题，将汉语分词的错误率降低了一个数量级。 利用统计语言模型分词的方法，可以用几个数学公式简单概括如下：我们假定一个句子S可以有几种分词方法，为了简单起见我们假定有以下三种：A1, A2, A3, …, Ak,B1, B2, B3, …, BmC1, C2, C3, …, Cn 其中，A1, A2, B1, B2, C1, C2 等等都是汉语的词。那么最好的一种分词方法应该保证分完词后这个句子出现的概率最大。也就是说如果 A1,A2,…, Ak 是最好的分法，那么 （P 表示概率）：P (A1, A2, A3, …, Ak） 〉 P (B1, B2, B3, …, Bm), 并且P (A1, A2, A3, …, Ak） 〉 P(C1, C2, C3, …, Cn)因此，只要我们利用上回提到的统计语言模型计算出每种分词后句子出现的概率，并找出其中概率最大的，我们就能够找到最好的分词方法。 当然，这里面有一个实现的技巧。如果我们穷举所有可能的分词方法并计算出每种可能性下句子的概率，那么计算量是相当大的。因此，我们可以把它看成是一个 动态规划（Dynamic Programming) 的问题，并利用 “维特比”（Viterbi） 算法快速地找到最佳分词。 在清华大学的郭进博士以后，海内外不少学者利用统计的方法，进一步完善中文分词。其中值得一提的是清华大学孙茂松教授和香港科技大学吴德凯教授的工作。 需要指出的是，语言学家对词语的定义不完全相同。比如说 “北京大学”，有人认为是一个词，而有人认为该分成两个词。一个折中的解决办法是在分词的同时，找到复合词的嵌套结构。在上面的例子中，如果一句话包含”北京大学”四个字，那么先把它当成一个四字词，然后再进一步找出细分词 “北京” 和 “大学”。这种方法是最早是郭进在 “Computational Linguistics” （《计算机语言学》）杂志上发表的，以后不少系统采用这种方法。 一般来讲，根据不同应用，汉语分词的颗粒度大小应该不同。比如，在机器翻译中，颗粒度应该大一些，”北京大学”就不能被分成两个词。而在语音识别中，”北京大学”一般是被分成两个词。因此，不同的应用，应该有不同的分词系统。Google 的葛显平博士和朱安博士，专门为搜索设计和实现了自己的分词系统。 也许你想不到，中文分词的方法也被应用到英语处理，主要是手写体识别中。因为在识别手写体时，单词之间的空格就不很清楚了。中文分词方法可以帮助判别英语单词的边界。其实，语言处理的许多数学方法通用的和具体的语言无关。在 Google 内，我们在设计语言处理的算法时，都会考虑它是否能很容易地适用于各种自然语言。这样，我们才能有效地支持上百种语言的搜索。 对中文分词有兴趣的读者，可以阅读以下文献： 1. 梁南元书面汉语自动分词系统http://www.touchwrite.com/demo/LiangNanyuan-JCIP-1987.pdf 2. 郭进统计语言模型和汉语音字转换的一些新结果http://www.touchwrite.com/demo/GuoJin-JCIP-1993.pdf 3. 郭进Critical Tokenization and its Propertieshttp://acl.ldc.upenn.edu/J/J97/J97-4004.pdf 4. 孙茂松Chinese word segmentation without using lexicon and hand-crafted training datahttp://portal.acm.org/citation.cfm?coll=GUIDE&dl;=GUIDE&id;=980775 humen1 Tech","permalink":"http://www.humen1.com/2007/10/e6-95-b0-e5-ad-a6-e4-b9-8b-e7-be-8e-e7-b3-bb-e5-88-97-e4-ba-8c-e8-b0-88-e8-b0-88-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d.html","photos":[]},{"tags":[{"name":"值得一读","slug":"值得一读","permalink":"http://www.humen1.com/tags/%E5%80%BC%E5%BE%97%E4%B8%80%E8%AF%BB/"}],"title":"数学之美 系列一 -- 统计语言模型","date":"2007/10/11","text":"系列一： 统计语言模型 (Statistical Language Models) Google 的使命是整合全球的信息，所以我们一直致力于研究如何让机器对信息、语言做最好的理解和处理。长期以来，人类一直梦想着能让机器代替人来翻译语言、识别语音、认识文字（不论是印刷体或手写体）和进行海量文献的自动检索，这就需要让机器理解语言。但是人类的语言可以说是信息里最复杂最动态的一部分。为了解决这个问题，人们容易想到的办法就是让机器模拟人类进行学习 - 学习人类的语法、分析语句等等。尤其是在乔姆斯基（Noam Chomsky 有史以来最伟大的语言学家）提出 “形式语言” 以后，人们更坚定了利用语法规则的办法进行文字处理的信念。遗憾的是，几十年过去了，在计算机处理语言领域，基于这个语法规则的方法几乎毫无突破。 其实早在几十年前，数学家兼信息论的祖师爷 香农 (Claude Shannon)就提出了用数学的办法处理自然语言的想法。遗憾的是当时的计算机条件根本无法满足大量信息处理的需要，所以他这个想法当时并没有被人们重视。七十年代初，有了大规模集成电路的快速计算机后，香农的梦想才得以实现。 首先成功利用数学方法解决自然语言处理问题的是语音和语言处理大师贾里尼克 (Fred Jelinek)。当时贾里尼克在 IBM 公司做学术休假 (Sabbatical Leave)，领导了一批杰出的科学家利用大型计算机来处理人类语言问题。统计语言模型就是在那个时候提出的。 给大家举个例子：在很多涉及到自然语言处理的领域，如机器翻译、语音识别、印刷体或手写体识别、拼写纠错、汉字输入和文献查询中，我们都需要知道一个文字序列是否能构成一个大家能理解的句子，显示给使用者。对这个问题，我们可以用一个简单的统计模型来解决这个问题。 如果 S 表示一连串特定顺序排列的词 w1， w2，…， wn ，换句话说，S 可以表示某一个由一连串特定顺序排练的词而组成的一个有意义的句子。现在，机器对语言的识别从某种角度来说，就是想知道S在文本中出现的可能性，也就是数学上所说的S 的概率用 P(S) 来表示。利用条件概率的公式，S 这个序列出现的概率等于每一个词出现的概率相乘，于是P(S) 可展开为： P(S) = P(w1)P(w2|w1)P(w3| w1 w2)…P(wn|w1 w2…wn-1) 其中 P (w1) 表示第一个词w1 出现的概率；P (w2|w1) 是在已知第一个词的前提下，第二个词出现的概率；以次类推。不难看出，到了词wn，它的出现概率取决于它前面所有词。从计算上来看，各种可能性太多，无法实现。因此我们假定任意一个词wi的出现概率只同它前面的词 wi-1 有关(即马尔可夫假设），于是问题就变得很简单了。现在，S 出现的概率就变为： P(S) = P(w1)P(w2|w1)P(w3|w2)…P(wi|wi-1)…(当然，也可以假设一个词又前面N-1个词决定，模型稍微复杂些。） 接下来的问题就是如何估计 P (wi|wi-1)。现在有了大量机读文本后，这个问题变得很简单，只要数一数这对词（wi-1,wi) 在统计的文本中出现了多少次，以及 wi-1 本身在同样的文本中前后相邻出现了多少次，然后用两个数一除就可以了,P(wi|wi-1) = P(wi-1,wi)/ P (wi-1)。 也许很多人不相信用这么简单的数学模型能解决复杂的语音识别、机器翻译等问题。其实不光是常人，就连很多语言学家都曾质疑过这种方法的有效性，但事实证明，统计语言模型比任何已知的借助某种规则的解决方法都有效。比如在 Google 的中英文自动翻译 中，用的最重要的就是这个统计语言模型。去年美国标准局(NIST) 对所有的机器翻译系统进行了评测，Google 的系统是不仅是全世界最好的，而且高出所有基于规则的系统很多。 现在，读者也许已经能感受到数学的美妙之处了，它把一些复杂的问题变得如此的简单。当然，真正实现一个好的统计语言模型还有许多细节问题需要解决。贾里尼克和他的同事的贡献在于提出了统计语言模型，而且很漂亮地解决了所有的细节问题。十几年后，李开复用统计语言模型把 997 词语音识别的问题简化成了一个 20 词的识别问题，实现了有史以来第一次大词汇量非特定人连续语音的识别。 humen1 Tech","permalink":"http://www.humen1.com/2007/10/e6-95-b0-e5-ad-a6-e4-b9-8b-e7-be-8e-e7-b3-bb-e5-88-97-e4-b8-80-e7-bb-9f-e8-ae-a1-e8-af-ad-e8-a8-80-e6-a8-a1-e5-9e-8b.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"一个强大的图表类-Jpgraph","date":"2007/09/29","text":"网址：http://www.aditus.nu/jpgraph/ 可以很方便的绘制各种图表柱状图，饼图，曲线图，圈图，甘特图 等等只要整理好数据抛给接口就可以用了 humen1 Tech","permalink":"http://www.humen1.com/2007/09/e4-b8-80-e4-b8-aa-e5-bc-ba-e5-a4-a7-e7-9a-84-e5-9b-be-e8-a1-a8-e7-b1-bb-jpgraph.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"自创Checkbox全选和全撤销","date":"2007/09/12","text":"全选 function chkall(item1,item2){var objForm = document.forms[item1];var objLen = objForm.length;&nbsp;for (var i = 0;i&lt;objLen;i++){&nbsp;&nbsp;&nbsp;if (objForm.elements[i].type == &quot;checkbox&quot;) &nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;objForm.elements[i].checked = item2.checked;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;}} 此写发中 里的name在循环中没有作用，只是传递数据时会成为数组 原理是循环form中的所有表单元素找出 checkbox类型并使其和全选控制checkbox的checked属性保持一致 MSN &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2007/09/e8-87-aa-e5-88-9bcheckbox-e5-85-a8-e9-80-89-e5-92-8c-e5-85-a8-e6-92-a4-e9-94-80.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Js的一些常用验证","date":"2007/09/11","text":"js验证表单大全 长度限制function&nbsp;test()&nbsp;{if(document.a.b.value.length&gt;50){alert(&quot;不能超过50个字符！&quot;);document.a.b.focus();return&nbsp;false;}} 只能是汉字 3.” 只能是英文function&nbsp;onlyEng() {if(!(event.keyCode&gt;=65&amp;&amp;event.keyCode&lt;=90))event.returnvalue=false;} 只能是数字function&nbsp;onlyNum(){if(!((event.keyCode&gt;=48&amp;&amp;event.keyCode&lt;=57)||(event.keyCode&gt;=96&amp;&amp;event.keyCode&lt;=105)))//考虑小键盘上的数字键event.returnvalue=false;} 只能是英文字符和数字 验证油箱格式function&nbsp;isEmail(strEmail)&nbsp;{if&nbsp;(strEmail.search(/^\\w+((-\\w+)|(\\.\\w+))\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)\\.[A-Za-z0-9]+$/)&nbsp;!=&nbsp;-1) return&nbsp;true;elsealert(&quot;oh&quot;);} 屏蔽关键字(这里屏蔽和*)function&nbsp;test()&nbsp;{ if((a.b.value.indexOf&nbsp;(&quot;&quot;)&nbsp;==&nbsp;0)||(a.b.value.indexOf&nbsp;(&quot;*&quot;)&nbsp;==&nbsp;0)){alert(&quot;:)&quot;);a.b.focus();return&nbsp;false;}} 两次输入密码是否相同 function&nbsp;check(){&nbsp; with(document.all){if(input1.value!=input2.value){alert(&quot;false&quot;)input1.value&nbsp;=&nbsp;&quot;&quot;;input2.value&nbsp;=&nbsp;&quot;&quot;;}else&nbsp;document.forms[0].submit();}}够了吧 :)屏蔽右键 很酷oncontextmenu=”return false” ondragstart=”return false” onselectstart=”return false”加在body中 二 2.1 表单项不能为空 2.2 比较两个表单项的值是否相同 2.3 表单项只能为数字和”_”,用于电话/银行帐号验证上,可扩展到域名注册等 2.4 表单项输入数值/长度限定 2.5 中文/英文/数字/邮件地址合法性判断 2.6 限定表单项不能输入的字符 检查一段字符串是否全由数字组成 怎么判断是否是字符 if (/[^\\x00-\\xff]/g.test(s)) alert(“含有汉字”);else alert(“全是字符”); 怎么判断是否含有汉字 if (escape(str).indexOf(“%u”)!=-1) alert(“含有汉字”);else alert(“全是字符”); 邮箱格式验证 //函数名：chkemail//功能介绍：检查是否为Email Address//参数说明：要检查的字符串//返回值：0：不是 1：是function chkemail(a){ var i=a.length ;var temp = a.indexOf(‘@’);var tempd = a.indexOf(‘.’);if (temp &gt; 1) {if ((i-temp) &gt; 3){if ((i-tempd)&gt;0){return 1;} }}return 0;} 数字格式验证 //函数名：fucCheckNUM//功能介绍：检查是否为数字//参数说明：要检查的数字//返回值：1为是数字，0为不是数字function fucCheckNUM(NUM){var i,j,strTemp;strTemp=”0123456789”;if ( NUM.length== 0)return 0for (i=0;i{j=strTemp.indexOf(NUM.charAt(i));if (j==-1){//说明有字符不是数字return 0;}}//说明是数字return 1;} 电话号码格式验证 //函数名：fucCheckTEL//功能介绍：检查是否为电话号码//参数说明：要检查的字符串//返回值：1为是合法，0为不合法function fucCheckTEL(TEL){var i,j,strTemp;strTemp=”0123456789-()# “;for (i=0;i{j=strTemp.indexOf (TEL.charAt(i));if (j==-1){//说明有字符不合法return 0;}}//说明合法return 1;} 判断输入是否为中文的函数 function ischinese(s){var ret=true;for(var i=0;iret=ret &amp;&amp; (s.charCodeAt(i)&gt;=10000);return ret;} 综合的判断用户输入的合法性的函数 &nbsp;&nbsp;//限制输入字符的位数开始&nbsp;&nbsp;//m是用户输入，n是要限制的位数&nbsp;&nbsp;function&nbsp;issmall(m,n)&nbsp;&nbsp;{&nbsp;&nbsp;if&nbsp;((m&lt;n)&nbsp;&amp;&amp;&nbsp;(m&gt;0))&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;return(false);&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;else&nbsp;&nbsp; {return(true);}&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;9.&nbsp;判断密码是否输入一致&nbsp;&nbsp;—————————————&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;issame(str1,str2)&nbsp;&nbsp;{&nbsp;&nbsp;if&nbsp;(str1==str2)&nbsp;&nbsp;{return(true);}&nbsp;&nbsp;else&nbsp;&nbsp;{return(false);}&nbsp;&nbsp;}&nbsp;&nbsp; &nbsp;&nbsp;10.&nbsp;判断用户名是否为数字字母下滑线&nbsp;—————————————&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;notchinese(str){&nbsp;var&nbsp;reg=/[^A-Za-z0-9_]/g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(reg.test(str)){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(false);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;return(true);&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; }&nbsp;11.&nbsp;form文本域的通用校验函数—————————————&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作用：检测所有必须非空的input文本，比如姓名，账号， 邮件地址等等。该校验现在只针对文本域，如果要针对form里面的其他域对象，可以改变判断条件。使用方法：在要检测的文本域中加入title文字。文字是在提示信息，你要提示给用户的该字段的中文名。比如要检测用户名 html如下&lt;input&nbsp;name=&quot;txt_1&quot;&nbsp;title=&quot;姓名&quot;&gt;,当然，最好用可视化工具比如dreamweaver什么的来编辑域。如果要检测数字类型数据的话，再把域的id统一为sz.javascript判断日期类型比较麻烦，所以就没有做日期类型校验的程序了.高手可以补充。程序比较草，只是提供一个思路。抛砖引玉！&nbsp;：）哦，对了，函数调用方法：&lt;&nbsp;form&nbsp;&nbsp;onsubmit=&quot;return&nbsp;dovalidate()&quot;&gt; function&nbsp;dovalidate(){fm=document.forms[0]&nbsp;//只检测一个form,如果是多个可以改变判断条件&nbsp;&nbsp;&nbsp;&nbsp;for(i=0;i&lt;fm.length;i++)&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//检测判断条件，根据类型不同可以修改&nbsp;&nbsp;&nbsp;&nbsp;if(fm[i].tagName.toUpperCase()==&quot;INPUT&quot;&nbsp;&amp;&amp;fm[i].type.toUpperCase()==&quot;TEXT&quot;&nbsp;&amp;&amp;&nbsp;(fm[i].title!=&quot;&quot;)) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fm[i].value=&quot;/blog/=&quot;&quot;)//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str_warn1=fm[i].title+&quot;不能为空!&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(str_warn1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fm[i].focus();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fm[i].id.toUpperCase()==&quot;SZ&quot;)//数字校验&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(isNaN(fm[i].value))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;str_warn2=fm[i].title+&quot;格式不对&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(str_warn2); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fm[i].focus();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;}2&nbsp;&gt;表单提交验证类&nbsp;2.1&nbsp;表单项不能为空&lt;script&nbsp;language=&quot;javascript&quot;&gt; 2.2 比较两个表单项的值是否相同 2.3 表单项只能为数字和”_”,用于电话/银行帐号验证上,可扩展到域名注册等 2.4 表单项输入数值/长度限定 2.5 中文/英文/数字/邮件地址合法性判断 2.6 限定表单项不能输入的字符 &lt;!–function&nbsp;contain(str,charset)//&nbsp;字符串包含测试函数{&nbsp;var&nbsp;i;for(i=0;i&lt;charset.length;i++)if(str.indexOf(charset.charAt (i))&gt;=0)return&nbsp;true;return&nbsp;false;}function&nbsp;CheckForm(){&nbsp;if&nbsp;((contain(document.form.NAME.value,&nbsp;&quot;%\\(\\)&gt;&lt;&quot;))&nbsp;||&nbsp;(contain(document.form.MESSAGE.value,&nbsp;&quot;%\\(\\)&gt;&lt;&quot;))) {&nbsp;alert(&quot;输入了","permalink":"http://www.humen1.com/2007/09/js-e7-9a-84-e4-b8-80-e4-ba-9b-e5-b8-b8-e7-94-a8-e9-aa-8c-e8-af-81.html","photos":[]},{"tags":[{"name":"js","slug":"js","permalink":"http://www.humen1.com/tags/js/"},{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"[无法打开   站点   ，已终止操作] 的解决方法","date":"2007/09/07","text":"打开网页时，提示“internet explore 无法打开internet站点…，已终止操作”，是js引发的错误。加上一个载入判断就可以了。if (document.readyState!=”complete”) return ; “internet explore 无法打开internet站点…，已终止操作”，从此消失 humen1 Tech","permalink":"http://www.humen1.com/2007/09/e6-97-a0-e6-b3-95-e6-89-93-e5-bc-80-e7-ab-99-e7-82-b9-ef-bc-8c-e5-b7-b2-e7-bb-88-e6-ad-a2-e6-93-8d-e4-bd-9c-e7-9a-84-e8-a7-a3-e5-86-b3-e6-96-b9-e6-b3-95.html","photos":[]},{"tags":[{"name":"随笔","slug":"随笔","permalink":"http://www.humen1.com/tags/%E9%9A%8F%E7%AC%94/"}],"title":"几近瘫痪的www.miibeian.gov.cn","date":"2007/09/07","text":"昨天，哦不，是前一周开始，www.miibeian.gov.cn就及其之卡，有时打不开昨天急需办理icp备案这个倒霉的网站慢的就象上海的公交车一样，好不容易打开了，注册好需要手机+email认证，手机验证码我到今天还没有收到。好在之前我有很多个帐号，拿一个先来用一下了。。。- -! humen1 Tech","permalink":"http://www.humen1.com/2007/09/e5-87-a0-e8-bf-91-e7-98-ab-e7-97-aa-e7-9a-84www-miibeian-gov-cn.html","photos":[]},{"tags":[{"name":"数据库","slug":"数据库","permalink":"http://www.humen1.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"title":"MYSQL中 ENUM 类型的详细解释","date":"2007/09/04","text":"MYSQL中 ENUM 类型的详细解释 ENUM 类型 ENUM 是一个字符串对象，其值通常选自一个允许值列表中，该列表在表创建时的列规格说明中被明确地列举。 在下列某些情况下，值也可以是空串(&quot;&quot;) 或 NULL： 如果将一个无效值插入一个 ENUM (即，一个不在允许值列表中的字符串)，空字符串将作为一个特殊的错误值被插入。事实上，这个字符串有别于一个”普通的”空字符串，因为这个字符串有个数字索引值为 0。稍后有更详细描述。 如果一个 ENUM 被声明为 NULL，NULL 也是该列的一个合法值，并且该列的缺省值也将为 NULL 。如果一个 ENUM 被声明为 NOT NULL，该列的缺省值将是该列表所允许值的第一个成员。 每个枚举值均有一个索引值： 在列说明中列表值所允许的成员值被从 1 开始编号。 空字符串错误值的索引值为 0。这就意味着，你可以使用下面所示的 SELECT 语句找出被赋于无效 ENUM 值的记录行。 mysql&gt; SELECT * FROM tbl_name WHERE enum_col=0; NULL 值的索引值为 NULL。 例如，指定为 ENUM(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;) 的一个列，可以有下面所显示的任一值。每个值的索引值也如下所示： 值 索引值 NULL NULL &quot;&quot; 0 &quot;one&quot; 1 &quot;two&quot; 2 &quot;three&quot; 3 换个枚举最大可以有 65535 个成员值。 从 MySQL 3.23.51 开始，当表被创建时，ENUM 值尾部的空格将会自动删除。 当为一个 ENUM 列赋值时，字母的大小写是无关紧要的。然而，以后从列中检索出来的值的大小写却是匹配于创建表时所指定的允许值。 如果在一个数字语境中检索一个ENUM，列值的索引值将被返回。例如，你可以像这样使用数字值检索一个 ENUM 列： mysql&gt; SELECT enum_col+0 FROM tbl_name; 如果将一个数字存储到一个 ENUM 中，数字被当作为一个索引值，并且存储的值是该索引值所对应的枚举成员。(但是，这在 LOAD DATA 将不能工作，因为它视所有的输入均为字符串。) 在一个 ENUM 字符串中存储数字是不明智的，因为它可能会打乱思维。 ENUM 值依照列规格说明中的列表顺序进行排序。(换句话说，ENUM 值依照它们的索引号排序。)举例来说，对于 ENUM(&quot;a&quot;, &quot;b&quot;) &quot;a&quot; 排在 &quot;b&quot; 后，但是对于 ENUM(&quot;b&quot;, &quot;a&quot;) ， &quot;b&quot; 却排在 &quot;a&quot; 之前。空字符串排在非空字符串前，NULL 值排在其它所有的枚举值前。为了防止意想不到的结果，建议依照字母的顺序定义 ENUM 列表。也可以通过使用 GROUP BY CONCAT(col) 来确定该以字母顺序排序而不是以索引值。 如果希望得到一个 ENUM 列的所有可能值，可以使用 SHOW COLUMNS FROM table_name LIKE enum_colum humen1 Tech","permalink":"http://www.humen1.com/2007/09/mysql-e4-b8-ad-enum-e7-b1-bb-e5-9e-8b-e7-9a-84-e8-af-a6-e7-bb-86-e8-a7-a3-e9-87-8a.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Ime-Mode","date":"2007/09/03","text":"ime-mode : auto active inactive disabled 参数：auto : 不影响IME的状态。与不指定ime-mode属性时相同active : 指定所有使用IME输入的字符。即激活本地语言输入法。用户仍可以撤销激活IME inactive : 指定所有不使用IME输入的字符。即激活非本地语言。用户仍可以撤销激活IME disabled : 完全禁用IME。对于有焦点的控件（如输入框），用户不可以激活IME humen1 Tech","permalink":"http://www.humen1.com/2007/09/ime-mode.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Access2MySQL Pro","date":"2007/08/31","text":"Access2MySQL Pro is a reliable bi-directional database migration tool which allows you to convert from: MS Access to MySQLMS Access to MySQL DumpMS Access to PHP ScriptMS Access to MS AccessMySQL to MS AccessMySQL to MySQL.MySQL to MySQL DumpMySQL to PHP ScriptConvert databases from MS Access to MySQL or from MySQL to MS Access rapidly and reliably! Operate with a whole database or select only needed tables, fields, indexes and foreign keys to proceed! Reach the desired result by simply configuring of several options through Wizard interface or in command line mode! Access2MySQL Pro is also applicable for MySQL database migration to another MySQL database or to MySQL server. Moreover, Access2MySQL is quite well for copying MS Access database to another MS Access database. Name: Jan LadendorfCompany:E-Mail: peter666@kfz.zeichen.wsA52GFRQB&gt;AXMGGC7617RUB1AO47Z61B0XPYK214T8LIM humen1 Tech","permalink":"http://www.humen1.com/2007/08/access2mysql-pro.html","photos":[]},{"tags":[],"title":"测试图片","date":"2007/08/14","text":"humen1 Tech","permalink":"http://www.humen1.com/2007/08/e6-b5-8b-e8-af-95-e5-9b-be-e7-89-87.html","photos":[]},{"tags":[],"title":"我要传图片啊","date":"2007/08/07","text":"测试 –MSN &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2007/08/e6-88-91-e8-a6-81-e4-bc-a0-e5-9b-be-e7-89-87-e5-95-8a.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"一款很好的压缩Office三部众的压缩软件","date":"2007/08/06","text":"NXPowerLite 可以压缩Word、Excel、PowerPoint –MSN &gt;&gt; humen1@gmail.com humen1 Tech","permalink":"http://www.humen1.com/2007/08/e4-b8-80-e6-ac-be-e5-be-88-e5-a5-bd-e7-9a-84-e5-8e-8b-e7-bc-a9office-e4-b8-89-e9-83-a8-e4-bc-97-e7-9a-84-e5-8e-8b-e7-bc-a9-e8-bd-af-e4-bb-b6.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"给Html里的flash加上链接","date":"2007/08/03","text":"今天又发现一招 用标签把控件包起来。在中加如链接的js 例： … humen1 Tech","permalink":"http://www.humen1.com/2007/08/e7-bb-99html-e9-87-8c-e7-9a-84flash-e5-8a-a0-e4-b8-8a-e9-93-be-e6-8e-a5.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"不同世界的Css","date":"2007/08/03","text":"今天发现scrollbar的各项属性不被ie5.5以下，以及netscape6.0 and 7.0 支持 微软创造了不同世界许多不同标准，css也是！ humen1 Tech","permalink":"http://www.humen1.com/2007/08/e4-b8-8d-e5-90-8c-e4-b8-96-e7-95-8c-e7-9a-84css.html","photos":[]},{"tags":[{"name":"应用","slug":"应用","permalink":"http://www.humen1.com/tags/%E5%BA%94%E7%94%A8/"}],"title":"Php-Gtk2的初识","date":"2007/07/28","text":"phpgtk手册zhhttp://gtk.php.net/manual/zh_cn/ 编译gtk工具PriadoBlender-2.0 BETAhttp://pb.impressivegames.com/viewtopic.php?t=70 用php编写桌面应用程序是我下步的学习目标 humen1 Tech","permalink":"http://www.humen1.com/2007/07/php-gtk2-e7-9a-84-e5-88-9d-e8-af-86.html","photos":[]},{"tags":[],"title":"重新启动我的Blog","date":"2007/07/27","text":"用的是免费空间。。。可怜啊 humen1 Tech","permalink":"http://www.humen1.com/2007/07/e9-87-8d-e6-96-b0-e5-90-af-e5-8a-a8-e6-88-91-e7-9a-84blog.html","photos":[]},{"tags":[],"title":"Team","date":"2007/07/10","text":"我们的team组成了 要走的路还太长，只能说我终于迈出了一步，自己觉定的一步。虽然有些波折，但是我看好这个项目。中国啊，一个神奇的市场，我们做我们的，在这个巨大的市场里总有我们的位置。 humen1 Tech","permalink":"http://www.humen1.com/2007/07/team.html","photos":[]},{"tags":[],"title":"用 邮件发布","date":"2007/06/21","text":"测试 –/***//Gmail &gt;&gt;humen1@gmail.com *//MSN &gt;&gt; humen1@hotmail.com //**/ humen1 Tech","permalink":"http://www.humen1.com/2007/06/e7-94-a8-e9-82-ae-e4-bb-b6-e5-8f-91-e5-b8-83.html","photos":[]},{"tags":[],"title":"我的第一笔","date":"2007/05/23","text":"可惜了没什么东西好写 humen1 Tech","permalink":"http://www.humen1.com/2007/05/e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e7-ac-94.html","photos":[]}]}